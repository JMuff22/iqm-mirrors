Search.setIndex({"docnames": ["API", "Portfolio Optimization", "SK Model and Transpilation", "Sparse Maxcut", "Training the QAOA", "Which Qubits on the QPU Are Used", "api/iqm.applications", "api/iqm.applications.applications", "api/iqm.applications.applications.ProblemInstance", "api/iqm.applications.maxcut", "api/iqm.applications.maxcut.MaxCutInstance", "api/iqm.applications.maxcut.WeightedMaxCutInstance", "api/iqm.applications.maxcut.goemans_williamson", "api/iqm.applications.maxcut.greedy_max_cut", "api/iqm.applications.maxcut.maxcut_generator", "api/iqm.applications.mis", "api/iqm.applications.mis.ISInstance", "api/iqm.applications.mis.MISInstance", "api/iqm.applications.mis.MaximumWeightISInstance", "api/iqm.applications.mis.bron_kerbosch", "api/iqm.applications.mis.greedy_mis", "api/iqm.applications.qubo", "api/iqm.applications.qubo.ConstrainedQuadraticInstance", "api/iqm.applications.qubo.QUBOInstance", "api/iqm.applications.qubo.relabel_graph_nodes", "api/iqm.applications.sk", "api/iqm.applications.sk.SherringtonKirkpatrick", "api/iqm.applications.sk.sk_generator", "api/iqm.qaoa", "api/iqm.qaoa.backends", "api/iqm.qaoa.backends.EstimatorBackend", "api/iqm.qaoa.backends.EstimatorFromSampler", "api/iqm.qaoa.backends.EstimatorQUIMB", "api/iqm.qaoa.backends.EstimatorSingleLayer", "api/iqm.qaoa.backends.EstimatorStateVector", "api/iqm.qaoa.backends.SamplerBackend", "api/iqm.qaoa.backends.SamplerRandomBitstrings", "api/iqm.qaoa.backends.SamplerResonance", "api/iqm.qaoa.backends.SamplerSimulation", "api/iqm.qaoa.circuits", "api/iqm.qaoa.circuits.qiskit_circuit", "api/iqm.qaoa.circuits.qiskit_circuit_specific_nodes", "api/iqm.qaoa.circuits.quimb_tn", "api/iqm.qaoa.circuits.transpiled_circuit", "api/iqm.qaoa.generic_qaoa", "api/iqm.qaoa.generic_qaoa.QAOA", "api/iqm.qaoa.qubo_qaoa", "api/iqm.qaoa.qubo_qaoa.QUBOQAOA", "api/iqm.qaoa.transforming_functions", "api/iqm.qaoa.transforming_functions.ham_graph_to_ham_operator", "api/iqm.qaoa.transpiler", "api/iqm.qaoa.transpiler.hardwired", "api/iqm.qaoa.transpiler.hardwired.hardwired", "api/iqm.qaoa.transpiler.hardwired.hardwired.hardwired_router", "api/iqm.qaoa.transpiler.quantum_hardware", "api/iqm.qaoa.transpiler.quantum_hardware.CrystalQPUFromBackend", "api/iqm.qaoa.transpiler.quantum_hardware.Grid2DQPU", "api/iqm.qaoa.transpiler.quantum_hardware.HardEdge", "api/iqm.qaoa.transpiler.quantum_hardware.HardQubit", "api/iqm.qaoa.transpiler.quantum_hardware.LineQPU", "api/iqm.qaoa.transpiler.quantum_hardware.LogEdge", "api/iqm.qaoa.transpiler.quantum_hardware.LogQubit", "api/iqm.qaoa.transpiler.quantum_hardware.QPU", "api/iqm.qaoa.transpiler.quantum_hardware.StarQPU", "api/iqm.qaoa.transpiler.routing", "api/iqm.qaoa.transpiler.routing.Layer", "api/iqm.qaoa.transpiler.routing.Mapping", "api/iqm.qaoa.transpiler.routing.Routing", "api/iqm.qaoa.transpiler.rx_to_nx", "api/iqm.qaoa.transpiler.rx_to_nx.rustworkx_to_networkx", "api/iqm.qaoa.transpiler.sn", "api/iqm.qaoa.transpiler.sn.sn", "api/iqm.qaoa.transpiler.sn.sn.sn_router", "api/iqm.qaoa.transpiler.sparse", "api/iqm.qaoa.transpiler.sparse.edge_coloring", "api/iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_complete", "api/iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_valid", "api/iqm.qaoa.transpiler.sparse.edge_coloring.find_edge_coloring", "api/iqm.qaoa.transpiler.sparse.edge_coloring.plot_edge_coloring", "api/iqm.qaoa.transpiler.sparse.greedy_router", "api/iqm.qaoa.transpiler.sparse.greedy_router.greedy_router", "api/iqm.qaoa.transpiler.sparse.two_color_mapper", "api/iqm.qaoa.transpiler.sparse.two_color_mapper.two_color_mapper", "api/iqm.qaoa.transpiler.star", "api/iqm.qaoa.transpiler.star.star", "api/iqm.qaoa.transpiler.star.star.RoutingStar", "api/iqm.qaoa.transpiler.star.star.star_router", "api/iqm.qaoa.tree_qaoa", "api/iqm.qaoa.tree_qaoa.TreeQAOA", "authors", "changelog", "examples", "index", "license", "readme", "references"], "filenames": ["API.rst", "Portfolio Optimization.ipynb", "SK Model and Transpilation.ipynb", "Sparse Maxcut.ipynb", "Training the QAOA.ipynb", "Which Qubits on the QPU Are Used.ipynb", "api/iqm.applications.rst", "api/iqm.applications.applications.rst", "api/iqm.applications.applications.ProblemInstance.rst", "api/iqm.applications.maxcut.rst", "api/iqm.applications.maxcut.MaxCutInstance.rst", "api/iqm.applications.maxcut.WeightedMaxCutInstance.rst", "api/iqm.applications.maxcut.goemans_williamson.rst", "api/iqm.applications.maxcut.greedy_max_cut.rst", "api/iqm.applications.maxcut.maxcut_generator.rst", "api/iqm.applications.mis.rst", "api/iqm.applications.mis.ISInstance.rst", "api/iqm.applications.mis.MISInstance.rst", "api/iqm.applications.mis.MaximumWeightISInstance.rst", "api/iqm.applications.mis.bron_kerbosch.rst", "api/iqm.applications.mis.greedy_mis.rst", "api/iqm.applications.qubo.rst", "api/iqm.applications.qubo.ConstrainedQuadraticInstance.rst", "api/iqm.applications.qubo.QUBOInstance.rst", "api/iqm.applications.qubo.relabel_graph_nodes.rst", "api/iqm.applications.sk.rst", "api/iqm.applications.sk.SherringtonKirkpatrick.rst", "api/iqm.applications.sk.sk_generator.rst", "api/iqm.qaoa.rst", "api/iqm.qaoa.backends.rst", "api/iqm.qaoa.backends.EstimatorBackend.rst", "api/iqm.qaoa.backends.EstimatorFromSampler.rst", "api/iqm.qaoa.backends.EstimatorQUIMB.rst", "api/iqm.qaoa.backends.EstimatorSingleLayer.rst", "api/iqm.qaoa.backends.EstimatorStateVector.rst", "api/iqm.qaoa.backends.SamplerBackend.rst", "api/iqm.qaoa.backends.SamplerRandomBitstrings.rst", "api/iqm.qaoa.backends.SamplerResonance.rst", "api/iqm.qaoa.backends.SamplerSimulation.rst", "api/iqm.qaoa.circuits.rst", "api/iqm.qaoa.circuits.qiskit_circuit.rst", "api/iqm.qaoa.circuits.qiskit_circuit_specific_nodes.rst", "api/iqm.qaoa.circuits.quimb_tn.rst", "api/iqm.qaoa.circuits.transpiled_circuit.rst", "api/iqm.qaoa.generic_qaoa.rst", "api/iqm.qaoa.generic_qaoa.QAOA.rst", "api/iqm.qaoa.qubo_qaoa.rst", "api/iqm.qaoa.qubo_qaoa.QUBOQAOA.rst", "api/iqm.qaoa.transforming_functions.rst", "api/iqm.qaoa.transforming_functions.ham_graph_to_ham_operator.rst", "api/iqm.qaoa.transpiler.rst", "api/iqm.qaoa.transpiler.hardwired.rst", "api/iqm.qaoa.transpiler.hardwired.hardwired.rst", "api/iqm.qaoa.transpiler.hardwired.hardwired.hardwired_router.rst", "api/iqm.qaoa.transpiler.quantum_hardware.rst", "api/iqm.qaoa.transpiler.quantum_hardware.CrystalQPUFromBackend.rst", "api/iqm.qaoa.transpiler.quantum_hardware.Grid2DQPU.rst", "api/iqm.qaoa.transpiler.quantum_hardware.HardEdge.rst", "api/iqm.qaoa.transpiler.quantum_hardware.HardQubit.rst", "api/iqm.qaoa.transpiler.quantum_hardware.LineQPU.rst", "api/iqm.qaoa.transpiler.quantum_hardware.LogEdge.rst", "api/iqm.qaoa.transpiler.quantum_hardware.LogQubit.rst", "api/iqm.qaoa.transpiler.quantum_hardware.QPU.rst", "api/iqm.qaoa.transpiler.quantum_hardware.StarQPU.rst", "api/iqm.qaoa.transpiler.routing.rst", "api/iqm.qaoa.transpiler.routing.Layer.rst", "api/iqm.qaoa.transpiler.routing.Mapping.rst", "api/iqm.qaoa.transpiler.routing.Routing.rst", "api/iqm.qaoa.transpiler.rx_to_nx.rst", "api/iqm.qaoa.transpiler.rx_to_nx.rustworkx_to_networkx.rst", "api/iqm.qaoa.transpiler.sn.rst", "api/iqm.qaoa.transpiler.sn.sn.rst", "api/iqm.qaoa.transpiler.sn.sn.sn_router.rst", "api/iqm.qaoa.transpiler.sparse.rst", "api/iqm.qaoa.transpiler.sparse.edge_coloring.rst", "api/iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_complete.rst", "api/iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_valid.rst", "api/iqm.qaoa.transpiler.sparse.edge_coloring.find_edge_coloring.rst", "api/iqm.qaoa.transpiler.sparse.edge_coloring.plot_edge_coloring.rst", "api/iqm.qaoa.transpiler.sparse.greedy_router.rst", "api/iqm.qaoa.transpiler.sparse.greedy_router.greedy_router.rst", "api/iqm.qaoa.transpiler.sparse.two_color_mapper.rst", "api/iqm.qaoa.transpiler.sparse.two_color_mapper.two_color_mapper.rst", "api/iqm.qaoa.transpiler.star.rst", "api/iqm.qaoa.transpiler.star.star.rst", "api/iqm.qaoa.transpiler.star.star.RoutingStar.rst", "api/iqm.qaoa.transpiler.star.star.star_router.rst", "api/iqm.qaoa.tree_qaoa.rst", "api/iqm.qaoa.tree_qaoa.TreeQAOA.rst", "authors.rst", "changelog.rst", "examples.rst", "index.rst", "license.rst", "readme.rst", "references.rst"], "titles": ["API Reference", "Portfolio Optimization", "SK Model and Transpilation", "Sparse Maxcut", "Training the QAOA", "Which Qubits on the QPU Are Used?", "iqm.applications", "iqm.applications.applications", "ProblemInstance", "iqm.applications.maxcut", "MaxCutInstance", "WeightedMaxCutInstance", "goemans_williamson", "greedy_max_cut", "maxcut_generator", "iqm.applications.mis", "ISInstance", "MISInstance", "MaximumWeightISInstance", "bron_kerbosch", "greedy_mis", "iqm.applications.qubo", "ConstrainedQuadraticInstance", "QUBOInstance", "relabel_graph_nodes", "iqm.applications.sk", "SherringtonKirkpatrick", "sk_generator", "iqm.qaoa", "iqm.qaoa.backends", "EstimatorBackend", "EstimatorFromSampler", "EstimatorQUIMB", "EstimatorSingleLayer", "EstimatorStateVector", "SamplerBackend", "SamplerRandomBitstrings", "SamplerResonance", "SamplerSimulation", "iqm.qaoa.circuits", "qiskit_circuit", "qiskit_circuit_specific_nodes", "quimb_tn", "transpiled_circuit", "iqm.qaoa.generic_qaoa", "QAOA", "iqm.qaoa.qubo_qaoa", "QUBOQAOA", "iqm.qaoa.transforming_functions", "ham_graph_to_ham_operator", "iqm.qaoa.transpiler", "iqm.qaoa.transpiler.hardwired", "iqm.qaoa.transpiler.hardwired.hardwired", "hardwired_router", "iqm.qaoa.transpiler.quantum_hardware", "CrystalQPUFromBackend", "Grid2DQPU", "HardEdge", "HardQubit", "LineQPU", "LogEdge", "LogQubit", "QPU", "StarQPU", "iqm.qaoa.transpiler.routing", "Layer", "Mapping", "Routing", "iqm.qaoa.transpiler.rx_to_nx", "rustworkx_to_networkx", "iqm.qaoa.transpiler.sn", "iqm.qaoa.transpiler.sn.sn", "sn_router", "iqm.qaoa.transpiler.sparse", "iqm.qaoa.transpiler.sparse.edge_coloring", "ec_is_complete", "ec_is_valid", "find_edge_coloring", "plot_edge_coloring", "iqm.qaoa.transpiler.sparse.greedy_router", "greedy_router", "iqm.qaoa.transpiler.sparse.two_color_mapper", "two_color_mapper", "iqm.qaoa.transpiler.star", "iqm.qaoa.transpiler.star.star", "RoutingStar", "star_router", "iqm.qaoa.tree_qaoa", "TreeQAOA", "Contributors", "Changelog", "Usage Examples", "IQM QAOA", "License", "IQM QAOA", "References"], "terms": {"The": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 49, 51, 53, 54, 55, 56, 59, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90], "purpos": [1, 2, 3, 62, 74, 93], "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 26, 32, 39, 40, 41, 43, 45, 47, 52, 53, 63, 64, 65, 66, 67, 68, 71, 74, 77, 78, 80, 81, 85, 86, 93], "notebook": [1, 2, 3, 4, 5, 90], "i": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 45, 46, 47, 52, 53, 55, 59, 62, 63, 65, 66, 67, 72, 74, 75, 76, 77, 78, 79, 81, 82, 85, 88, 90, 93, 94], "showcas": [1, 2, 3, 4, 90], "qaoa": [1, 2, 3, 5, 8, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 47, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88, 90, 91, 95], "librari": [1, 2, 3, 90, 94], "work": [1, 2, 3, 16, 17, 45, 53, 90], "from": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 52, 53, 55, 65, 66, 67, 71, 72, 78, 85, 88, 90, 93, 94, 95], "problem": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 45, 47, 49, 52, 53, 61, 66, 67, 72, 80, 82, 85, 86, 88, 90, 95], "definit": [1, 2, 3], "all": [1, 2, 3, 4, 5, 8, 11, 13, 16, 17, 19, 20, 22, 23, 26, 41, 45, 47, 52, 53, 62, 67, 72, 74, 80, 82, 85, 90, 93], "wai": [1, 2, 3, 4, 7, 17, 22, 47, 85, 90, 93, 94], "execut": [1, 2, 3, 52, 65, 80, 82, 90], "real": [1, 2, 3, 4, 5, 40], "hardwar": [1, 2, 3, 43, 56, 57, 58, 59, 62, 65, 66, 67, 82, 85, 95], "In": [1, 2, 3, 4, 8, 14, 22, 23, 26, 85, 94], "particular": [1, 2, 3, 8, 93], "here": [1, 2, 3, 4, 5, 46, 53, 59, 78, 85], "we": [1, 2, 3, 4, 5, 10, 19, 38, 41, 52, 53, 65, 66, 75, 78, 80], "us": [1, 2, 3, 4, 8, 9, 10, 11, 14, 17, 21, 22, 23, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 53, 55, 62, 63, 64, 65, 66, 67, 72, 74, 77, 78, 82, 85, 87, 88, 90, 91, 92, 93, 94, 95], "solv": [1, 2, 3, 8, 12, 45, 47, 66, 80, 88, 90, 95], "instanc": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 45, 47, 62, 72, 86, 90], "first": [1, 4, 5, 8, 12, 22, 37, 45, 53, 67, 82, 85, 88, 90], "describ": [1, 2, 10, 11, 12, 14, 17, 18, 23, 27, 38, 43, 47, 65, 66, 78, 85, 88], "have": [1, 8, 10, 11, 18, 22, 23, 41, 47, 49, 68, 72, 76, 78, 94], "n_asset": 1, "asset": 1, "each": [1, 4, 8, 10, 11, 12, 13, 14, 16, 17, 18, 22, 67, 77, 85, 90], "an": [1, 2, 3, 4, 5, 8, 11, 15, 16, 17, 18, 26, 27, 31, 38, 43, 45, 47, 53, 55, 62, 65, 66, 67, 72, 74, 75, 76, 77, 82, 85, 86, 88, 90], "expected_return": 1, "variabl": [1, 2, 3, 4, 8, 10, 11, 12, 16, 21, 22, 23, 45, 47, 53, 56, 78, 88, 90], "contain": [1, 4, 5, 7, 9, 10, 11, 15, 17, 21, 22, 23, 24, 25, 39, 41, 44, 45, 52, 53, 54, 55, 56, 64, 65, 66, 67, 71, 72, 74, 77, 80, 81, 85, 86, 87, 88, 90], "covari": 1, "varianc": [1, 2], "call": [1, 4, 8, 11, 22, 53, 67, 79, 90], "cov_mat": 1, "goal": 1, "choos": 1, "set": [1, 2, 3, 4, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 45, 55, 62, 65, 77, 78, 86, 88, 90], "which": [1, 2, 3, 4, 8, 9, 12, 16, 17, 22, 23, 30, 35, 36, 41, 43, 45, 47, 53, 54, 56, 59, 62, 65, 66, 78, 80, 81, 85, 88, 90, 91, 92], "maxim": [1, 10, 17, 18, 19], "yield": [1, 9, 14, 27, 56, 59], "while": [1, 4, 16, 21], "minim": [1, 2, 8, 16, 22, 47, 52, 90], "weight": [1, 8, 11, 18, 47, 69, 90], "investor": 1, "": [1, 4, 5, 8, 10, 11, 14, 15, 17, 21, 22, 23, 31, 55, 62, 65, 66, 67, 72, 75, 76, 90, 93, 95], "risk_avers": 1, "higher": [1, 2, 3, 17, 18], "more": [1, 4, 7, 10, 11, 17, 23, 33, 54, 88, 90], "like": [1, 4, 8, 17, 18, 36, 42, 56], "avoid": [1, 90], "risk": [1, 4, 8, 90], "budget": [1, 90], "sai": [1, 8, 67], "how": [1, 8, 53, 90], "mani": 1, "can": [1, 2, 3, 4, 5, 8, 13, 16, 21, 32, 38, 40, 43, 45, 52, 55, 62, 65, 82, 85, 90, 94], "bui": 1, "import": [1, 2, 3, 4, 5, 7, 9, 15, 21, 25, 54], "numpi": [1, 21, 90], "np": 1, "7": [1, 88, 95], "0": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 21, 22, 23, 24, 27, 31, 45, 53, 63, 67, 72, 92], "9": [1, 5, 67, 85], "1": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 20, 21, 22, 23, 24, 27, 31, 33, 47, 63, 88, 92, 95], "2": [1, 2, 3, 4, 5, 10, 11, 13, 15, 17, 21, 33, 52, 67, 85, 88, 95], "5": [1, 4, 8, 14, 27, 45, 74, 95], "8": [1, 5], "rng": [1, 90], "random": [1, 2, 3, 4, 8, 9, 12, 13, 14, 27, 36, 90], "default_rng": 1, "A": [1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 27, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 57, 58, 59, 60, 61, 62, 63, 65, 67, 72, 75, 76, 77, 78, 80, 85, 86, 88, 90, 93, 95], "standard_norm": 1, "cov_matrix": 1, "t": [1, 2, 3, 4, 5, 8, 10, 11, 16, 22, 23, 40, 45, 47, 65, 67, 68, 69, 72, 78, 85, 88, 90], "3": [1, 3, 5, 8, 13, 14, 17, 20, 45, 94, 95], "within": [1, 65, 90], "quadrat": [1, 3, 8, 21, 22, 47], "binari": [1, 2, 3, 8, 21, 22, 23, 47, 93], "ar": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 22, 23, 30, 32, 35, 36, 37, 38, 40, 41, 42, 47, 54, 59, 62, 65, 66, 67, 72, 74, 79, 82, 85, 88, 90, 91, 92, 93], "repres": [1, 8, 10, 11, 12, 22, 23, 32, 41, 42, 46, 47, 49, 53, 54, 62, 67, 85], "object": [1, 4, 8, 10, 11, 16, 17, 18, 21, 22, 27, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 53, 55, 62, 64, 65, 66, 67, 72, 80, 82, 85, 86, 88, 90], "binaryquadraticmodel": [1, 16, 22, 23, 47, 53, 66, 67, 72, 80, 82, 85, 86, 90], "constrainedquadraticmodel": [1, 22, 90], "dimod": [1, 90], "packag": [1, 32, 68, 90], "read": [1, 4], "about": [1, 5, 55, 65, 90], "model": [1, 3, 25, 26, 27, 47, 90, 91, 92], "order": [1, 8], "defin": [1, 2, 3, 5, 6, 7, 8, 16, 21, 22, 23, 38, 62, 67, 74], "custom": [1, 2, 16, 18, 21, 37, 43, 48, 57, 58, 60, 61, 85, 90], "constrain": [1, 21, 22, 90], "our": [1, 2, 4, 5, 90], "constrainedquadraticinst": [1, 15, 16, 21, 47, 88, 90], "need": [1, 2, 3, 4, 5, 10, 11, 16, 17, 18, 22, 23, 38, 53, 67, 72, 80, 85], "creat": [1, 2, 3, 5, 14, 24, 27, 37, 52, 53, 59, 66, 67, 72, 81, 85, 86, 90, 94], "constraint": [1, 16, 17, 22, 23, 90], "expect": [1, 2, 3, 4, 17, 29, 30, 31, 32, 33, 34, 46, 47, 49, 90, 95], "return": [1, 8, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 53, 56, 59, 62, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88], "minu": 1, "avers": 1, "ha": [1, 2, 3, 5, 8, 10, 11, 16, 17, 18, 23, 33, 43, 45, 47, 63, 66, 67, 75, 85, 88, 90], "ident": [1, 4], "matrix": [1, 22, 23, 26, 47], "left": 1, "hand": [1, 53], "side": [1, 12], "e": [1, 2, 3, 5, 8, 17, 21, 22, 23, 30, 35, 39, 43, 47, 49, 62, 65, 67, 76, 78, 85, 88, 90], "number": [1, 2, 3, 4, 5, 8, 10, 11, 14, 17, 18, 22, 23, 24, 27, 31, 35, 36, 37, 38, 45, 47, 52, 53, 56, 59, 63, 67, 77, 85, 88], "select": [1, 8, 16, 17, 43, 90, 94], "right": [1, 93], "my_cqm": 1, "diag": 1, "set_object": 1, "add_constraint_from_model": 1, "qm": 1, "ey": 1, "sens": [1, 94], "rh": 1, "iqm": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88, 90, 93], "applic": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 38, 65, 92], "qubo": [1, 2, 3, 9, 15, 16, 18, 22, 23, 24, 25, 32, 33, 34, 47, 88, 90], "penalti": [1, 15, 16, 17, 18, 22], "magnitud": 1, "chosen": 1, "arbitrarili": [1, 8], "There": [1, 3, 90], "rigor": 1, "find": [1, 4, 10, 15, 17, 18, 19, 53, 72, 74, 77, 82, 90], "best": [1, 4, 8, 17, 22, 45, 90], "don": [1, 3, 11, 22, 68, 78], "get": [1, 2, 3, 4, 5, 8, 16, 17, 22, 23, 32, 36, 47, 66, 72, 90, 94], "my_problem": 1, "follow": [1, 2, 3, 17, 66, 85, 93], "up": [1, 2, 3, 4, 35, 55, 62, 67, 85, 88, 90], "connect": [1, 2, 3, 10, 14, 16, 17, 18, 22, 23, 37, 40, 43, 52, 53, 59, 62, 65, 67, 72], "reson": [1, 2, 3, 4, 5, 37, 63, 85, 90], "simul": [1, 2, 3, 4, 34, 38, 40, 90], "backend": [1, 2, 3, 4, 5, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 55, 90], "garnet": [1, 2, 3, 4, 5, 37], "qpu": [1, 2, 3, 40, 41, 50, 53, 54, 55, 56, 59, 63, 65, 66, 67, 72, 80, 82, 83, 84, 85, 86, 90, 91, 92], "note": [1, 2, 3, 47], "gener": [1, 2, 3, 4, 9, 12, 14, 21, 22, 23, 25, 26, 27, 31, 36, 44, 45, 47, 88, 90], "you": [1, 2, 3, 94], "also": [1, 2, 3, 4, 5, 9, 15, 17, 27, 54, 56, 67, 72, 87, 90], "specifi": [1, 2, 3, 5, 65], "usag": [1, 2, 3, 26, 90, 92], "mode": [1, 2, 3], "For": [1, 2, 3, 4, 5, 8, 13, 14, 17, 19, 21, 22, 23, 43, 46, 52, 80, 88], "run": [1, 2, 3, 4, 8, 12, 34, 37, 40, 43, 94], "machin": [1, 2, 3], "pai": [1, 2, 3], "go": [1, 2, 3, 5, 56, 67, 80], "url": [1, 2, 3, 37, 95], "would": [1, 2, 3, 90], "chang": [1, 2, 3, 4, 5, 22, 23, 66, 90], "http": [1, 2, 3, 4, 5, 37, 95], "coco": [1, 2, 3, 4, 5, 37], "meetiqm": [1, 2, 3, 4, 5, 37, 89], "com": [1, 2, 3, 4, 5, 37, 89, 95], "specif": [1, 2, 3, 5, 7, 90, 93], "timeslot": [1, 2, 3], "o": [1, 2, 3, 4, 5, 8], "server_url": [1, 2, 3, 4, 37], "environ": [1, 2, 3, 4, 5, 94], "iqm_resonance_url_cryst": [1, 2, 3, 4], "mock": [1, 2, 3, 4], "If": [1, 2, 3, 8, 10, 11, 14, 16, 18, 22, 23, 31, 33, 40, 43, 47, 53, 65, 66, 67, 72, 78, 85, 88, 94], "token": [1, 2, 3, 4, 5, 37], "isn": [1, 2, 3, 10, 11, 22, 67, 68], "save": [1, 2, 3, 8, 22, 23, 88], "replac": [1, 2, 3, 8, 90], "string": [1, 2, 3, 8, 10, 11, 14, 22, 27, 36, 38, 43, 62, 78, 85, 90], "api_token": [1, 2, 3, 5], "iqm_resonance_api_token": [1, 2, 3, 4, 5], "samplerreson": [1, 3, 4, 29], "transpil": [1, 3, 4, 5, 37, 38, 40, 43, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 90, 91, 92], "hardwiredtranspil": [1, 2, 43], "train": [1, 2, 3, 5, 8, 30, 45, 46, 47, 90, 91, 92], "method": [1, 2, 3, 4, 8, 10, 11, 16, 17, 18, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 47, 53, 55, 56, 59, 62, 63, 65, 66, 67, 78, 85, 88, 90], "sever": [1, 2, 3, 39], "possibl": [1, 2, 3, 4, 8, 14, 17, 22, 27, 67, 90, 93], "paramet": [1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 53, 55, 56, 59, 62, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88], "default": [1, 2, 3, 4, 5, 8, 37, 43, 78], "analyt": [1, 2, 3, 4, 33], "formula": [1, 2, 3, 45], "sinc": [1, 2, 3, 8, 10, 11, 55, 65], "one": [1, 2, 3, 4, 8, 10, 16, 22, 23, 43, 45, 47, 48, 65, 66, 77, 80, 85, 88, 90], "layer": [1, 2, 3, 4, 5, 33, 45, 47, 62, 64, 66, 67, 80, 82, 85, 88, 90, 95], "qubo_qaoa": [1, 2, 3, 5, 47, 87], "quboqaoa": [1, 2, 3, 4, 5, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 87, 88, 90], "my_qaoa": [1, 2, 3, 5], "num_lay": [1, 2, 3, 4, 5, 45, 47, 88], "initial_angl": [1, 2, 3, 4, 5, 45, 47, 88, 90], "sampl": [1, 2, 3, 4, 8, 29, 31, 35, 36, 37, 38, 40, 46, 47], "solut": [1, 4, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23], "post": [1, 8, 22, 90], "process": [1, 8, 22, 65, 90, 95], "result": [1, 2, 3, 4, 8, 14, 37, 38, 41, 47, 90], "remov": [1, 4, 17, 20, 22, 66, 90], "violat": [1, 16, 22, 90], "typic": [1, 17, 30], "shot": [1, 2, 3, 4, 31, 35, 36, 37, 38, 47], "By": [1, 4, 8], "omit": 1, "20": 1, "000": 1, "maximum": [1, 2, 3, 8, 17, 18, 19, 20, 22, 45, 90, 95], "format": [1, 4, 8, 48], "dictionari": [1, 4, 8, 16, 22, 23, 24, 35, 36, 37, 38, 47, 62, 66, 78, 90], "whose": [1, 8, 10, 16, 22, 23, 24, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 47, 49, 62, 66, 75, 76, 77, 78, 85], "kei": [1, 4, 8, 16, 22, 23, 35, 36, 37, 38, 47, 62, 66], "bitstr": [1, 2, 3, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 35, 36, 37, 38, 47], "individu": [1, 22, 33, 35], "were": [1, 90], "taken": [1, 47], "valu": [1, 3, 4, 8, 16, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 49, 62, 66, 90, 95], "integ": [1, 5, 8, 10, 11, 55, 56, 59, 72, 77, 78, 85, 90], "time": [1, 3, 4, 8], "wa": [1, 8, 10, 11, 12, 16, 22, 53, 90], "my_sampl": 1, "sampler": [1, 3, 4, 31, 35, 36, 37, 38, 47, 90], "my_samples_filt": 1, "satisfy_constraint": [1, 22], "print": [1, 2, 3, 4, 5, 22], "satisfi": [1, 5, 17, 22, 95], "sum": [1, 18, 47], "mai": [1, 2, 3, 8, 22, 38, 45, 49, 65, 74, 93, 95], "now": [1, 4, 5, 11, 22, 53, 90], "examin": 1, "found": [1, 66], "calcul": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 22, 23, 29, 30, 31, 32, 33, 34, 46, 47, 49, 55, 66, 88, 90], "function": [1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 32, 33, 39, 43, 45, 46, 47, 48, 49, 52, 53, 55, 66, 68, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 90], "samples_object": 1, "qualiti": [1, 7, 8, 11, 17, 22, 23, 25], "best_sampl": 1, "max": [1, 3], "lambda": [1, 17, 18], "x": [1, 95], "best_qual": [1, 7, 8, 17], "comput": [1, 4, 8, 37, 90, 92, 93], "averag": [1, 2, 3, 4, 8, 22, 31, 88], "average_qu": [1, 2, 3, 8], "average_quality_count": [1, 2, 8], "feasibl": 1, "sherrington": [2, 26], "kirkpatrick": [2, 26], "veri": [2, 8, 11], "dens": [2, 51, 52, 70], "illustr": 2, "advantag": [2, 95], "over": [2, 3, 8, 10, 11, 13, 17, 22, 66, 77, 90], "qiskit": [2, 8, 34, 36, 38, 39, 43, 49, 67, 85, 90], "sk_gener": [2, 25, 26], "circuit": [2, 3, 4, 5, 31, 32, 34, 37, 38, 40, 41, 42, 43, 46, 47, 50, 51, 53, 63, 67, 70, 73, 83, 85, 90, 95], "qiskit_circuit": [2, 43], "transpiled_circuit": [2, 5, 90], "qiskit_iqm": [2, 5], "iqmprovid": [2, 5], "qiskit_a": 2, "aersimul": [2, 4, 38, 43, 90], "everi": [2, 4, 75, 77], "pair": [2, 23, 65, 66], "interact": [2, 5, 21, 22, 23, 26, 40, 41, 42, 47, 52, 53, 57, 60, 65, 67, 72, 80, 82, 85, 86, 88], "strength": [2, 22, 23, 40, 41, 42, 53, 67, 72, 88], "size": [2, 3, 8, 9, 10, 11, 22, 52, 90], "problem_s": [2, 3, 5], "qubit": [2, 3, 4, 26, 27, 36, 40, 41, 43, 45, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 72, 82, 85, 88, 90, 91, 92, 95], "6": [2, 5, 80, 88, 95], "20000": [2, 3, 4, 47], "distribut": [2, 4, 26, 27, 93], "between": [2, 8, 22, 23, 24, 26, 27, 31, 47, 53, 57, 60, 62, 65, 66, 67, 82, 85, 86, 88], "gaussian": [2, 27], "mean": [2, 4, 27, 67], "few": [2, 65, 90], "other": [2, 3, 8, 13, 14, 22, 38, 42, 43, 47, 54, 65, 67, 68, 78, 90, 93], "g": [2, 8, 21, 39, 49, 65, 67, 78, 90], "uniform": [2, 27, 88], "rademach": [2, 27], "out": [2, 3, 4, 22, 31, 43, 85, 93], "largest": [2, 3, 17, 19, 82], "lowest": [2, 3, 8, 20], "energi": [2, 3, 4, 8, 17, 23, 30, 31, 32, 33, 34], "brute": [2, 3, 8, 17], "forc": [2, 3, 8, 17], "length": [2, 3, 10, 11, 36, 59], "slow": [2, 3, 4], "been": [2, 3, 5, 16, 23, 45, 67, 90], "than": [2, 3, 8, 10, 11, 22, 33, 43, 47, 90], "30": [2, 3, 8, 22], "my_sk_problem": 2, "next": [2, 3, 4, 5, 56, 59], "n": [2, 3, 4, 5, 8, 14, 25, 27, 63, 94], "n_instanc": [2, 3, 4, 5, 9, 14, 25, 27], "upper": [2, 3, 8, 22, 47], "bound": [2, 3, 8, 22], "upper_bound": [2, 3, 8], "lower": [2, 3, 8, 17, 22], "lower_bound": [2, 3, 8], "iqm_backend": [2, 5], "get_backend": [2, 5], "statevector": [2, 4, 34, 40], "construct": [2, 5, 14, 40, 41, 42, 43, 46, 53, 82, 90, 95], "4": [2, 5, 21, 52, 53, 67, 71, 72, 85, 95], "differ": [2, 10, 11, 16, 23, 47, 66, 78, 85, 90], "perfect": [2, 40, 43], "without": [2, 22, 23, 42, 67, 93, 94], "ani": [2, 8, 10, 11, 18, 21, 23, 24, 40, 41, 42, 43, 45, 47, 53, 62, 64, 67, 82, 85, 90, 93], "swap": [2, 5, 8, 52, 65, 66, 67, 70, 71, 72, 80, 86, 90], "network": [2, 32, 42, 70, 72, 90], "strategi": [2, 4, 37, 52, 71, 72, 86, 90], "qc_perfect": 2, "measur": [2, 4, 8, 36, 37, 38, 40, 41, 42, 47, 67, 85, 90], "true": [2, 5, 8, 14, 40, 62, 65, 75, 76, 85], "qc_default": 2, "qc_hw": 2, "qc_sn": 2, "swapnetwork": [2, 43], "noiseless": 2, "job_perfect": 2, "result_dict_perfect": 2, "get_count": 2, "gate": [2, 3, 5, 40, 41, 42, 62, 65, 66, 67, 72, 85, 86], "job_default": 2, "result_dict_default": 2, "count_op": 2, "job_hw": 2, "result_dict_hw": 2, "job_sn": 2, "result_dict_sn": 2, "everyth": [2, 88], "went": 2, "hardwir": [2, 53, 90], "should": [2, 8, 10, 11, 14, 16, 22, 23, 24, 31, 35, 40, 43, 62, 66, 67, 85], "perform": [2, 4, 5, 9, 45, 47, 90, 95], "better": [2, 4, 8], "2qb": [2, 3], "wherea": 2, "overal": 2, "depth": [2, 3], "base": [2, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 47, 53, 55, 56, 59, 62, 63, 65, 66, 67, 70, 81, 85, 88, 90, 95], "obtain": [2, 4, 9, 15, 22, 23, 31, 47], "two": [2, 9, 10, 11, 13, 15, 16, 24, 62, 66, 67, 68, 76, 82, 90], "approach": [2, 37, 72], "judg": 2, "cut": [3, 9, 10, 11, 95], "maxcut_gener": [3, 4, 5, 9, 90], "estimatorfromsampl": [3, 4, 29], "graph": [3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 47, 49, 53, 55, 56, 59, 62, 63, 65, 67, 68, 69, 74, 75, 76, 77, 78, 81, 82, 86, 88, 90], "intern": [3, 22, 23, 65, 82, 90], "convert": [3, 16, 69], "optim": [3, 4, 8, 52, 53, 67, 82, 85, 86, 90, 91, 92, 95], "14": [3, 5, 92], "regular": [3, 4, 5, 14, 88], "my_maxcut_problem": [3, 5], "graph_famili": [3, 4, 5, 14], "d": [3, 5, 14], "siriu": [3, 63], "both": [3, 85, 90], "compar": [3, 4], "server_url_cryst": [3, 5], "server_url_star": 3, "iqm_resonance_url_star": 3, "onc": 3, "estim": [3, 4, 30, 31, 32, 33, 34, 47, 90], "hamiltonian": [3, 4, 30, 31, 32, 33, 34, 45, 47, 49, 88, 90], "avail": [3, 40, 90, 94], "given": [3, 4, 8, 10, 11, 16, 22, 41, 45, 59, 65, 67, 77, 85, 88, 90], "via": [3, 4, 37], "provid": [3, 5, 7, 15, 31, 33, 38, 43, 45, 47, 66, 72, 78, 88, 90, 93], "anyth": [3, 67, 88], "so": [3, 4, 5, 22, 32, 38, 47, 52, 55, 62, 63, 67, 82, 85, 90], "ll": 3, "discard": 3, "them": [3, 4, 8, 16, 22, 23, 67, 78, 85, 90], "crystal_qpu_sampl": 3, "sparsetranspil": [3, 4, 5, 37, 43], "crystal_qpu_estim": 3, "_": [3, 5], "line": [3, 59, 90], "just": [3, 4, 36, 42, 55, 59, 85, 90], "test": [3, 4, 90], "energy_on_cryst": 3, "crystal": [3, 72], "same": [3, 4, 5, 8, 10, 11, 22, 47, 67, 76, 90], "abov": [3, 4, 5, 8, 17, 22, 23, 45, 90, 93], "except": [3, 4, 5, 22], "star": [3, 63, 85, 86, 90], "star_qpu_sampl": 3, "minimumvertexcov": [3, 43], "star_qpu_estim": 3, "energy_on_star": 3, "fewer": 3, "requir": [3, 14, 43, 65, 72, 90], "consider": 3, "larger": [3, 8, 22, 90], "becaus": [3, 4, 5, 8, 16, 22, 47, 67, 68, 85], "onli": [3, 5, 8, 11, 22, 23, 36, 38, 53, 72, 74, 90], "done": [3, 46, 67, 85], "variou": [4, 22, 29, 39, 46, 54, 90], "variat": 4, "known": [4, 27, 90], "angl": [4, 30, 32, 33, 34, 40, 41, 42, 45, 46, 47, 88, 90], "start": [4, 5, 8, 10, 11, 13, 41, 45, 66, 67, 85], "quasi": 4, "maxcut": [4, 5, 10, 11, 12, 13, 14, 23, 90, 91, 92], "10": [4, 5, 95], "node": [4, 5, 8, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 47, 49, 62, 65, 69, 86, 88], "erdo": [4, 14], "renyi": [4, 14], "p": [4, 14, 33, 47, 88, 94, 95], "seed": [4, 5, 14, 27, 43, 90], "420": 4, "treeqaoa": [4, 87, 90], "class": [4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 82, 84, 85, 87, 88, 90], "extra": [4, 22, 41, 53], "tree_qaoa": [4, 88], "standard": [4, 9, 11, 13, 20, 27], "notat": 4, "gamma": [4, 5, 45, 47, 67, 85, 88, 90], "beta": [4, 5, 45, 47, 67, 85, 88, 90], "respect": [4, 8, 22, 43, 47, 69], "technic": 4, "take": [4, 8, 22, 26, 31, 35, 37, 38, 47, 76, 80, 82, 90], "similarli": [4, 65], "store": [4, 11, 18, 23, 46, 47, 62, 90], "experi": [4, 8], "comparison": [4, 8, 90], "It": [4, 5, 17, 22, 43, 45, 62, 66, 67, 72, 77, 78, 82, 85], "estimatorsinglelay": [4, 29], "estimatorstatevector": [4, 29], "samplersimul": [4, 29, 90], "dict": [4, 8, 16, 22, 23, 24, 35, 36, 37, 38, 47, 62, 66, 78], "str": [4, 8, 10, 11, 12, 13, 14, 17, 19, 20, 22, 23, 27, 35, 36, 37, 38, 43, 47, 62, 78], "int": [4, 8, 10, 11, 14, 16, 17, 18, 22, 23, 24, 27, 31, 35, 36, 37, 38, 41, 43, 45, 47, 56, 57, 58, 59, 60, 61, 63, 65, 67, 78, 85, 88], "float": [4, 8, 11, 14, 16, 17, 18, 22, 23, 30, 31, 32, 33, 34, 45, 47, 62, 67, 78, 85, 88], "make": [4, 8, 17, 22, 53, 72, 90, 94], "easier": 4, "end": [4, 40, 67, 90], "sl": 4, "singl": [4, 5, 17, 62, 85, 95], "sv": 4, "sim": 4, "sim_cvar": 4, "cvar": [4, 8, 31, 90], "instead": [4, 10, 11, 16, 17, 45, 55, 90], "re": [4, 5, 65, 66, 80, 90], "tree": [4, 87, 88, 90], "schedul": [4, 45, 53, 87, 88], "oper": [4, 46, 49], "doe": [4, 16], "estimator_single_lay": 4, "after": 4, "estimator_statevector": 4, "reset": 4, "fair": 4, "togeth": [4, 8, 45, 47, 88], "includ": [4, 8, 14, 17, 18, 22, 27, 30, 32, 33, 34, 45, 63, 68, 93], "sampler_from_simul": 4, "initi": [4, 5, 8, 10, 11, 16, 17, 18, 22, 23, 31, 41, 45, 47, 59, 66, 67, 81, 82, 85, 88, 90], "estimator_from_simul": 4, "again": 4, "But": [4, 16], "condit": [4, 8, 90, 93], "level": 4, "possibli": 4, "estimator_from_simulation_cvar": 4, "actual": [4, 78], "cloud": 4, "quantum": [4, 5, 8, 30, 37, 40, 42, 43, 47, 90, 92, 93, 95], "platform": 4, "warn": [4, 22, 23, 90], "when": [4, 8, 16, 18, 22, 37, 53, 67, 88, 90], "cycl": 4, "potenti": 4, "lot": [4, 47], "even": [4, 17, 93], "qc": [4, 37], "claus": 4, "surround": 4, "cell": 4, "sure": 4, "skip": [4, 67], "dure": [4, 67, 90], "too": [4, 38], "environment": 4, "end_to_end_test": 4, "sampler_from_reson": 4, "part": [4, 53, 66, 67, 85], "estimator_from_reson": 4, "infinit": 4, "where": [4, 8, 65, 66, 67, 72, 78, 85], "neighborhood": [4, 8], "These": [4, 31, 90], "pre": [4, 10], "set_tree_angl": [4, 88], "look": [4, 86, 88, 90], "correspond": [4, 5, 8, 15, 16, 17, 19, 22, 23, 27, 36, 40, 49, 59, 66, 67, 85], "aren": [4, 10, 11, 22, 23], "most": [4, 45, 90], "thei": [4, 8, 22, 36, 65, 66, 90], "produc": [4, 31, 36, 43], "good": [4, 93], "allow": [4, 38, 43, 90], "u": 4, "convent": 4, "complet": [4, 17, 40, 67, 75, 85], "necessari": [4, 47, 67, 72, 86], "info": 4, "repeat": [4, 13, 17, 20, 67, 85], "summar": 4, "data": [4, 5, 8, 11, 18, 47, 48, 93], "tabl": 4, "pad": [4, 53, 67], "zero": 4, "increas": [4, 5], "gamma1": 4, "beta1": 4, "bamma2": 4, "beta2": 4, "pattern": 4, "hold": 4, "separ": [4, 65, 67, 82, 85], "accur": 4, "ipython": 4, "displai": [4, 62], "html": 4, "row": [4, 56], "label": [4, 5, 10, 11, 21, 24, 62, 63, 65], "column": [4, 56], "sort": [4, 8], "inner": [4, 90], "exp_val": 4, "inner_dict": 4, "build": [4, 5, 32, 34, 37, 39, 47, 67, 85, 90], "border": 4, "style": 4, "collaps": 4, "tr": 4, "th": [4, 22, 77], "join": 4, "f": [4, 5], "method_nam": 4, "longer": 4, "name": [4, 5, 65, 66, 93], "nicer": 4, "exp_val_str": 4, "4f": 4, "none": [4, 8, 16, 22, 23, 31, 38, 43, 45, 47, 62, 65, 66, 67, 78, 85, 88], "els": 4, "td": 4, "although": [4, 17], "scalabl": 4, "give": [4, 5, 16, 66], "tail": 4, "whether": [4, 8, 10, 11, 14, 22, 45, 65, 67, 93], "help": [4, 68], "clear": [4, 54, 67], "improv": [4, 8, 13, 90, 95], "simpl": [5, 9, 15, 17, 56, 65, 74], "easi": 5, "detail": [5, 19, 40, 41, 80, 88], "inform": [5, 47, 55, 67, 85, 90, 95], "topologi": [5, 43, 55, 62, 65, 66, 67, 72, 83, 85], "iqm_provid": 5, "fit": [5, 93], "roughli": 5, "onto": [5, 43, 82], "qc1": 5, "1337": [5, 14, 27, 43], "inspect": 5, "physic": [5, 65], "place": [5, 47, 82, 88, 90], "matplotlib": [5, 62, 65], "pyplot": 5, "plt": 5, "networkx": [5, 19, 68, 69, 90], "nx": [5, 62, 90], "log_to_phys_dict": 5, "layout": [5, 56, 62, 72, 78, 90], "final_layout": 5, "get_virtual_bit": 5, "ancilla": 5, "regist": 5, "ad": [5, 21, 22, 32, 33, 40, 65, 67, 72, 77, 86, 90], "match": [5, 8, 90], "active_qubit": 5, "qb": 5, "_regist": 5, "rustworkx": [5, 68, 69], "rx_to_nx": [5, 69], "rustworkx_to_networkx": 5, "coupling_map_nx": 5, "coupling_map": 5, "to_undirect": 5, "po": [5, 78], "kamada_kawai_layout": 5, "draw": [5, 62, 65, 67, 78, 85, 90], "draw_networkx_nod": 5, "node_color": 5, "lightgrai": 5, "node_s": 5, "500": 5, "highlight": [5, 65, 67, 85], "nodelist": 5, "orang": 5, "edg": [5, 10, 11, 14, 16, 17, 18, 22, 23, 47, 49, 62, 65, 67, 69, 74, 75, 76, 77, 78, 81, 82, 85], "draw_networkx_edg": 5, "draw_networkx_label": 5, "titl": 5, "axi": 5, "off": [5, 47], "show": [5, 62, 65, 90], "explicitli": [5, 14], "want": [5, 68, 75, 78, 94], "do": [5, 22, 67], "initial_layout": [5, 43], "logic": [5, 60, 61, 62, 65, 66, 67, 82, 85], "rout": [5, 50, 52, 53, 65, 66, 72, 79, 80, 82, 84, 85, 90, 95], "spars": [5, 75, 76, 77, 78, 80, 82, 90, 91, 92], "greedi": [5, 9, 13, 15, 20, 73, 79, 80, 90], "router": [5, 67, 84], "its": [5, 8, 11, 16, 17, 18, 20, 22, 31, 33, 47, 82, 85, 90, 93], "quantum_hardwar": [5, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65], "crystalqpufrombackend": [5, 53, 54], "greedy_rout": 5, "extract": [5, 66], "bqm": [5, 22, 23, 47, 67, 72, 80, 90], "qc_spars": 5, "build_qiskit": [5, 67, 85], "int_graph": 5, "add_nod": 5, "_index": 5, "indic": [5, 10, 11, 14, 22, 45, 78], "themselv": 5, "instruct": 5, "qarg": 5, "rzz": [5, 67, 85], "add": [5, 10, 11, 20, 35, 67, 88, 90, 94], "q1": 5, "q2": 5, "add_edg": 5, "with_label": 5, "lightblu": 5, "1500": 5, "font_siz": 5, "15": [5, 52, 53, 92], "our_layout": 5, "18": 5, "13": 5, "17": 5, "qc2": 5, "doesn": [5, 8, 10, 11, 23, 65, 67, 69, 72, 85, 88], "error": [5, 67], "try": [5, 10, 16, 66, 80], "assign": [5, 8, 10, 12, 13, 22, 23, 66, 78], "rest": [5, 67, 79, 85, 94], "wrong_layout": 5, "qc3": 5, "occur": [5, 65], "type": [5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88, 90], "__name__": 5, "tool": [6, 90], "subpackag": [6, 28, 50, 51, 70, 73, 83], "modul": [6, 7, 9, 15, 25, 28, 29, 39, 44, 46, 48, 50, 51, 52, 54, 64, 68, 70, 71, 73, 74, 78, 79, 83, 84, 90, 92], "abstract": [7, 8, 30, 35, 44, 45], "templat": 7, "exampl": [7, 9, 15, 21, 25, 43, 90, 92], "probleminst": [7, 9, 15, 21, 22, 23, 25, 45, 90], "myprobleminst": 7, "properti": [7, 8, 10, 11, 16, 17, 22, 23, 45, 47, 62, 66, 67], "def": [7, 21], "dim": [7, 8, 22, 23], "self": [7, 21, 67, 90], "implement": [7, 8, 21, 22, 65, 67, 72, 82, 86, 88, 90, 92], "mandatori": 7, "effici": [7, 17], "inherit": [7, 9, 15, 21, 25, 29, 44, 46, 47, 54, 64, 84, 87, 88, 90], "abc": [7, 8, 9, 15, 21, 25, 29, 30, 35, 44, 45, 46, 87], "sourc": [8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 53, 55, 56, 59, 62, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 80, 82, 85, 86, 88, 90, 93, 94], "current": [8, 38, 67], "support": [8, 85], "candid": 8, "therefor": [8, 22, 67, 88, 90], "meant": [8, 62], "overridden": [8, 22], "children": [8, 21, 23], "depend": [8, 45, 68, 90], "dimens": [8, 22, 23, 27], "understood": 8, "attribut": [8, 10, 11, 16, 17, 18, 22, 23, 26, 45, 47, 54, 55, 56, 59, 62, 63, 66, 67, 72, 75, 76, 77, 85, 88, 90], "initialize_properti": [8, 22], "bit_str": [8, 10, 11, 17, 22, 23], "accept": [8, 23, 90], "smaller": 8, "fix_vari": [8, 16, 21, 22, 23], "fix": [8, 16, 17, 21, 22, 23, 43], "some": [8, 16, 22, 23, 38, 47, 95], "list": [8, 16, 22, 23, 43, 45, 47, 62, 67, 77, 78, 82, 85, 88, 93, 94], "hashabl": [8, 16, 22, 23], "either": [8, 16, 22, 23, 45, 47, 65, 88, 90], "equal": [8, 10, 11, 16, 22, 23, 45, 47], "max_siz": [8, 22], "cost": [8, 13, 16, 22, 23, 47, 88], "quantiti": [8, 23], "scale": [8, 17, 95], "exponenti": [8, 17], "rais": [8, 10, 11, 16, 18, 22, 23, 31, 33, 43, 53, 65, 66, 67, 72, 85, 88], "valueerror": [8, 10, 11, 16, 18, 22, 23, 31, 33, 43, 53, 65, 66, 67, 85, 88], "bypass": 8, "highest": [8, 17], "among": 8, "shouldn": [8, 10, 11, 16, 40, 45, 47, 88], "modifi": [8, 10, 11, 16, 17, 22, 45, 47, 66, 77, 88, 90], "user": [8, 10, 11, 16, 22], "see": [8, 19, 80, 88], "much": [8, 85], "uniformli": [8, 14, 36], "guess": 8, "similar": [8, 11], "close": 8, "ideal": 8, "quality_renorm": 8, "renorm": [8, 88], "under": [8, 90], "wors": 8, "count": [8, 22, 31, 35, 36, 67, 85, 90], "input": [8, 10, 11, 14, 17, 18, 22, 23, 24, 26, 27, 30, 47, 72, 77, 90], "empti": [8, 20, 22, 23, 85], "average_quality_renorm": 8, "restore_fixed_vari": 8, "postprocess": [8, 17], "restor": 8, "remain": [8, 17], "reduc": [8, 10, 11], "insert": [8, 22], "belong": [8, 86], "frequenc": [8, 22, 36, 37, 38, 47], "correct": [8, 17, 36, 90, 94], "local_bitflip_bitstr": 8, "unit": [8, 12, 88, 90], "ham": 8, "distanc": 8, "neighbor": [8, 16, 20, 76], "iter": [8, 9, 10, 11, 13, 14, 22, 27, 56, 59, 66, 77], "bit": [8, 17], "origin": [8, 10, 11, 12, 17, 23, 24, 53], "local_bitflip_postprocess": 8, "check": [8, 9, 14, 15, 22, 65, 67, 75, 76, 90], "naiv": 8, "complex": 8, "cubic": 8, "mathcal": 8, "linear": [8, 45, 59], "might": [8, 22, 85], "repeatedli": 8, "neigbor": 8, "percentile_count": 8, "quantil": [8, 90], "best_percentil": 8, "worst": [8, 90], "multipl": [8, 22], "around": [8, 12, 45, 56, 94], "rather": [8, 16], "built": [8, 63, 87], "cross": [8, 67], "output": [8, 14, 17, 23, 43, 47, 88], "adjust": [8, 53], "exactli": 8, "least": [8, 17], "round": 8, "nearest": [8, 88], "bool": [8, 10, 11, 14, 22, 40, 45, 62, 65, 67, 75, 76], "boolean": [8, 10, 11, 45, 62, 65, 67], "05": 8, "case": [8, 14, 22, 23, 59, 67, 88], "often": 8, "common": [8, 90], "relat": [9, 50, 90], "maxcutinst": [9, 12, 13, 14, 21], "q": [9, 90, 95], "score": [9, 90], "classic": [9, 31, 90], "solver": [9, 15, 90], "fast": [9, 15], "algorithm": [9, 12, 13, 15, 17, 18, 19, 20, 43, 53, 64, 72, 79, 80, 82, 88, 90, 92, 95], "goeman": [9, 12, 90, 95], "williamson": [9, 12, 90, 95], "guarante": [9, 12, 17], "goemans_williamson": 9, "greedy_maxcut": 9, "my_inst": [9, 15, 25], "graph_siz": 9, "gw_solut": 9, "gw": 9, "greedy_solut": [9, 15], "cut_siz": [9, 10, 11], "my_maxcut_inst": 9, "my_graph": [9, 15], "quboinst": [9, 10, 11, 21, 25, 26, 47, 88, 90], "weightedmaxcutinst": [9, 90], "break_z2": [10, 11, 14], "fals": [10, 11, 14, 62, 65, 67, 75, 76], "divis": [10, 11], "group": [10, 13], "option": [10, 14, 27, 38, 45, 47, 66, 67, 88, 90], "mathbb": [10, 11, 14], "z": [10, 11, 14, 47, 49], "_2": [10, 11, 14], "symmetri": [10, 11, 14], "broken": [10, 11, 14, 82], "artifici": [10, 11], "instanti": [10, 11, 16, 21, 53], "new": [10, 11, 16, 24, 47, 65, 66, 67, 90, 94], "simpli": [10, 11], "accord": [10, 11, 14, 27, 74, 88], "distinct": [10, 11], "charact": [10, 11], "_graph": 10, "being": [11, 23, 66, 67], "contribut": 11, "typeerror": [11, 18, 43, 72], "wrong": [11, 18], "neither": [11, 18, 85, 93], "nor": [11, 18, 93], "max_cut_problem": [12, 13], "approxim": [12, 92, 95], "ratio": 12, "87856": 12, "step": [12, 13, 20, 67, 85, 90], "relax": 12, "semidefinit": [12, 95], "program": [12, 74, 95], "sdp": 12, "multi": 12, "dimension": [12, 47], "vector": [12, 34], "sphere": 12, "hyperplan": 12, "through": [12, 22, 33, 65, 67, 85], "plane": [12, 62], "li": 12, "switch": 13, "until": [13, 17, 20, 67, 85], "final": 13, "enforce_connect": 14, "regener": 14, "fail": [14, 90], "strictli": 14, "speak": 14, "erd\u0151": 14, "r\u00e9nyi": 14, "anymor": [14, 85], "famili": 14, "probabl": [14, 27], "ignor": [14, 36, 40, 41, 90], "degre": [14, 17, 20, 88], "state": [14, 30, 32, 33, 34, 67, 85], "randomli": [14, 26, 27], "exact": 15, "bron": [15, 17, 19], "kerbosch": [15, 17, 19], "cliqu": [15, 17, 19], "misinst": [15, 16, 19, 20, 21, 90], "greedy_mi": 15, "bron_kerbosch": 15, "my_mis_inst": 15, "constraints_check": [15, 21, 22], "101011000": 15, "independ": [15, 16, 17, 18, 19, 20, 62, 90], "bk_solut": 15, "bk": 15, "isinst": [15, 17, 18, 90], "maximumweightisinst": [15, 16, 90], "mi": [16, 17, 18, 19, 20, 23], "subset": [16, 17, 18], "incur": [16, 17, 18, 22], "intend": [16, 67, 74], "directli": [16, 67, 90], "subclass": [16, 21, 22, 30, 31, 35, 47, 82, 90], "own": [16, 21], "harm": 16, "pick": [16, 19, 20, 53], "per": [16, 17, 18], "present": [16, 17, 18, 23, 65], "formul": [16, 18, 22, 23], "transform": [16, 18, 22, 42, 48, 49, 68], "neighbour": 16, "alreadi": [16, 22, 23, 65, 66, 67, 85, 94], "previous": [16, 23, 90], "refer": [17, 18, 19, 47, 57, 58, 60, 61, 88, 90, 92], "equival": [17, 22], "complement": [17, 19], "parent": [17, 18, 22, 47, 62, 85, 90], "aim": [17, 90], "sometim": [17, 18], "literatur": [17, 18, 47, 88], "less": [17, 18], "insur": 17, "At": [17, 45], "degener": 17, "non": 17, "exhaust": 17, "fix_constraint_violation_bitstr": [17, 22], "subgraph": [17, 82, 90], "induc": [17, 82], "flip": 17, "low": 17, "carri": [18, 68, 90], "miss": [18, 95], "mis_problem": [19, 20], "recurs": 19, "find_cliqu": 19, "document": [19, 90, 92, 93], "therein": 19, "genet": 21, "recommend": 21, "structur": [21, 23, 90], "sub": [21, 23], "sherringtonkirkpatrick": [21, 25, 27], "arrai": 21, "my_qubo_inst": 21, "my_square_np_arrai": 21, "your": [21, 94], "mycustomconstrainedinst": 21, "cqm": 22, "privat": 22, "_recalculate_bqm": 22, "soft": 22, "penal": 22, "break": 22, "encod": [22, 45], "pass": [22, 43, 47, 59, 90], "numer": [22, 88], "represent": [22, 23, 47, 53, 82, 90], "implic": 22, "impli": [22, 30, 93], "qubo_matrix": [22, 23, 47, 90], "ndarrai": [22, 23, 26, 45, 47, 88], "diagon": [22, 23, 47], "entri": [22, 23, 77], "local": [22, 23, 32, 47, 67, 85, 88, 90], "field": [22, 23, 47, 67, 85, 88], "act": [22, 23, 36, 53, 67], "j": [22, 23, 47, 95], "below": [22, 23, 93], "qubo_graph": [22, 23, 90], "bia": [22, 23, 47, 49], "loss": [22, 93], "ask": 22, "bruteforc": 22, "search": [22, 92], "fix_constraint_viol": 22, "map": [22, 24, 53, 62, 64, 65, 67, 78, 81, 82, 85], "unchang": 22, "qubo_object": 23, "beyond": 23, "valid": [23, 76], "2d": [23, 55, 56, 62, 90], "squar": [23, 47, 55, 72, 90], "treat": 23, "regardless": 23, "__init__": [23, 90], "descript": [23, 72, 86, 90], "x_i": 23, "c": [23, 93, 95], "sum_": [23, 47], "q_": 23, "ij": [23, 47], "x_j": 23, "ii": 23, "Then": [23, 53, 94], "throughout": [23, 64], "lazili": [23, 66, 90], "come": [23, 32, 33, 34], "deriv": [23, 93], "ones": 24, "number_of_nod": 24, "keep": [24, 90], "track": 24, "relabel": 24, "tupl": [24, 62, 77, 78, 82, 85], "old": 24, "vice": 24, "versa": 24, "sk_iter": 25, "111111111": 25, "sk": [26, 27, 90, 91, 92], "interaction_matrix": [26, 27], "suggest": 26, "spin": 26, "deviat": 27, "intraction_matrix": 27, "element": [27, 47, 85], "normal": [27, 47, 90], "estimatorbackend": [29, 31, 32, 33, 34, 47, 90], "samplerbackend": [29, 31, 36, 37, 38, 47, 90], "estimatorquimb": 29, "samplerrandombitstr": 29, "those": [30, 35, 42, 67], "qaoa_object": [30, 31, 32, 33, 34, 35, 36, 37, 38], "threshold": 31, "docstr": [31, 90], "serv": [31, 46, 80, 90], "tensor": [32, 42], "quimb": [32, 39, 42, 90], "contract": [32, 93], "rcc": [32, 41], "quimb_tn": 32, "local_expect": 32, "full": 32, "constant": [32, 33, 34], "term": [32, 33, 34, 45], "translat": [32, 33, 34], "exp": 33, "val": 33, "express": [33, 93], "equat": 33, "12": [33, 95], "quantumcircuit": [34, 37, 40, 41, 43, 67, 85], "arrang": [36, 67, 85], "api": [37, 90, 92], "send": 37, "aer_simulator_statevector": [38, 43], "backendv2": [38, 43], "assum": [38, 40], "exclud": 40, "starting_qubit": 41, "revers": [41, 90], "causal": 41, "cone": 41, "influenc": [41, 90], "appli": [42, 65, 67, 72, 85], "qtn": 42, "kwarg": [43, 62, 90], "tailor": 43, "highli": 43, "vari": 43, "otherwis": [43, 62, 65, 75, 76, 93], "stochast": 43, "ensur": 43, "reproduc": [43, 93], "addit": [43, 47], "keyword": [43, 62], "argument": [43, 62], "insid": [43, 90], "laid": 43, "generic_qaoa": [45, 46, 47, 87, 88], "_internal_angle_log": 45, "linear_ramp_schedul": 45, "flavor": 45, "sequenc": [45, 47, 88], "flag": [45, 90, 94], "later": 45, "effect": 45, "associ": [45, 65, 66], "num_qubit": 45, "special": [45, 59, 90, 93], "control": [45, 90], "mixer": 45, "delta_beta": 45, "delta_gamma": 45, "ramp": 45, "adapt": [45, 72], "choic": 45, "mostli": 46, "facilit": 46, "unconstrain": 47, "One": 47, "coeffici": [47, 49], "form": [47, 93], "hamiltonian_graph": 47, "commonli": [47, 88], "triangular": 47, "zz": [47, 49], "h": 47, "j_": 47, "z_i": 47, "z_j": 47, "sum_i": 47, "h_i": 47, "local_field": 47, "h_": 47, "min_method": 47, "cobyla": 47, "scipi": 47, "respons": [47, 66], "appropri": 47, "signatur": 47, "fo": 47, "Not": 47, "anoth": 48, "transforming_funct": 49, "ham_graph": 49, "sparsepauliop": 49, "befor": [49, 67, 85], "folder": 50, "submodul": [51, 70, 73, 83, 90], "hard": [51, 52, 55], "wire": [51, 52], "believ": 52, "fulli": 52, "problem_bqm": [53, 66, 67, 72, 80, 82, 85, 86], "design": [53, 55, 88], "code": [53, 55, 74, 90, 93, 94], "written": [53, 93], "apollo": 53, "expand": [53, 90], "had": 53, "trulli": 53, "dummi": [53, 72], "underlying_graph": 53, "suitabl": 53, "hardware_graph": [53, 59, 62, 65], "inverse_iso": 53, "apply_int": [53, 67], "apply_swap": [53, 67], "entir": [53, 80, 85], "inclus": 53, "architectur": [54, 62], "four": 54, "alias": 54, "hint": [54, 90], "grid2dqpu": 54, "lineqpu": 54, "starqpu": [54, 85, 86], "lattic": [55, 72], "initialit": 55, "iqmbackend": [55, 90], "identifi": [55, 72], "coordin": [55, 62, 72, 90], "global": [55, 94], "shift": [55, 94], "howev": [55, 93], "appear": 55, "difficult": 55, "helper": [55, 74, 77, 79, 87, 90], "public": [55, 90], "iqmbackendbas": 55, "num_row": 56, "num_column": 56, "rectangular": [56, 72], "determin": 56, "embedded_chain": [56, 59], "emb": [56, 59, 90], "chain": [56, 59, 82], "grid": [56, 67, 85], "snake": 56, "index": [56, 59, 92], "hardqubit": [56, 57, 59, 62, 66, 67, 85], "alia": [57, 58, 60, 61], "frozenset": [57, 60], "typealia": [58, 61], "noth": [59, 65, 67, 85], "fanci": 59, "path": [59, 62, 90], "hardware_layout": [59, 62], "logqubit": [60, 66], "main": [62, 79, 85], "shortest_path": 62, "plot": [62, 65, 67, 78, 85], "has_edg": 62, "involv": [62, 65, 85], "hardedg": [62, 65, 66, 67], "shortest": 62, "target": [62, 85], "ly": 62, "ax": [62, 65], "gate_list": 62, "pictur": [62, 65], "pop": 62, "window": 62, "color": [62, 65, 67, 74, 75, 76, 77, 78, 81, 82, 85], "area": 62, "letter": [62, 95], "decid": [62, 65], "shown": [62, 65, 67, 85], "arbitrari": [62, 74], "shape": [63, 67, 85], "daneb": 63, "importantli": 63, "central": [63, 85], "alwai": 63, "spoke": 63, "whole": 63, "vertic": 63, "vertex": [63, 86], "int_gat": 65, "swap_gat": 65, "phase": [65, 67, 82, 85], "consist": [65, 90], "know": 65, "copi": [65, 77, 90], "along": [65, 67, 82, 85], "occupi": [65, 85], "underli": 65, "further": 65, "apply_int_g": 65, "apply_swap_g": 65, "int_gate_applic": 65, "propos": 65, "goe": [65, 67, 85], "exist": [65, 67], "combin": [65, 67], "outcom": 65, "whatev": 65, "reason": 65, "cannot": 65, "swap_gate_applic": 65, "cancel": 65, "sketch": 65, "coupler": 65, "yellow": [65, 67], "blue": [65, 67], "green": [65, 67, 85], "No": [65, 67, 85, 90], "black": [65, 67, 85], "happen": [65, 67, 85], "specift": 65, "somehow": 65, "partial_initial_map": 66, "maintain": [66, 67], "log2hard": 66, "hard2log": 66, "automat": [66, 90], "kept": 66, "sync": 66, "partial": 66, "point": 66, "biject": 66, "swap_log": 66, "updat": [66, 90], "logedg": [66, 82], "swap_hard": 66, "move_hard": 66, "source_qubit": 66, "target_qubit": 66, "move": [66, 85], "formerli": [66, 90], "correspondingli": 66, "conveni": 66, "initial_map": [67, 85], "To": 67, "yet": [67, 78, 85], "statu": 67, "attempt_apply_int": 67, "won": [67, 85], "active_subgraph": 67, "attempt_int": 67, "earliest": 67, "tri": [67, 72], "That": [67, 94], "earli": 67, "softer": 67, "version": [67, 94], "oppos": 67, "made": 67, "count_swap_g": 67, "far": 67, "hadamard": [67, 85], "driver": [67, 85], "barrier": [67, 85], "rx": [67, 85], "rz": [67, 85], "batch": [67, 85, 90], "seri": [67, 85], "screen": [67, 85], "3x3": [67, 85], "drawn": [67, 85], "what": [67, 85, 90], "preserv": 69, "multigraph": 69, "pygraph": 69, "pydigraph": 69, "sn": 72, "suffici": 72, "rectangl": [72, 90], "correctli": 72, "runtimeerror": 72, "larg": 72, "file": [74, 81, 88, 90], "almost": [74, 82, 90], "find_edge_color": [74, 81], "extern": 74, "plot_edge_color": 74, "debug": 74, "edge_color": [75, 76, 77, 78], "input_graph": 77, "elabor": 77, "color_palett": 78, "default_color": 78, "00000000": 78, "care": 78, "convei": 78, "r": 78, "red": 78, "posit": 78, "circular": 78, "wrapper": 80, "decompos": [82, 85], "loop": 82, "down": 82, "small": [82, 90], "big": 82, "embed": 82, "routingstar": [84, 86, 90], "simpler": 85, "apply_move_in": 85, "apply_move_out": 85, "apply_directed_int": 85, "outer": 85, "rotat": 85, "count_move_g": 85, "move_in": [85, 90], "move_out": [85, 90], "theori": [85, 93], "unforseen": 85, "situat": 85, "procedur": 85, "teal": 85, "plum": 85, "minimum": 86, "cover": 86, "center": 86, "littl": 87, "_find_nearest": 87, "precalcul": 88, "high": 88, "girth": 88, "bodi": 88, "d_av": 88, "h_av": 88, "j_av": 88, "interpol": 88, "ferromagnet": 88, "neg": 88, "jiri": 89, "guth": 89, "jarkovski": 89, "guthjarkovski": 89, "elisabeth": [89, 90, 95], "wybo": [89, 95], "martin": [89, 90, 95], "leib": [89, 95], "jalil": 89, "khatibi": 89, "moqadam": 89, "ricarda": 89, "brazinka": 89, "jami": 89, "r\u00f6nkk\u00f6": 89, "creation": 90, "_bqm": 90, "everytim": 90, "date": [90, 92], "agre": 90, "sn_router": 90, "still": 90, "fake": 90, "address": 90, "liskov": 90, "substitut": [90, 93], "principl": 90, "iqmfakeapollo": 90, "fallback": 90, "routin": 90, "_get_embed": 90, "jupyt": 90, "enabl": 90, "mypi": 90, "ci": 90, "temporari": 90, "issu": 90, "sw": 90, "1615": 90, "lf": 90, "wasn": 90, "py": 90, "citat": 90, "paper": 90, "link": 90, "readm": 90, "pyproject": 90, "toml": 90, "project": 90, "visibl": 90, "pypi": 90, "bump": 90, "repo": 90, "organ": 90, "1578": 90, "exa": 90, "core": 90, "mapomat": 90, "patch": 90, "cosmet": 90, "polish": 90, "outsid": 90, "ipynb": 90, "portfolio": [90, 91, 92], "renam": 90, "small_sk_model_exampl": 90, "three": 90, "mention": 90, "myst": 90, "nb": 90, "minor": 90, "moveg": 90, "ovewrit": 90, "twine": 90, "remak": 90, "itself": 90, "planar_layout": 90, "circl": 90, "account": 90, "constrainedquboinst": 90, "role": 90, "setter": 90, "sphinx": 90, "upload": 90, "gitlab": 90, "page": [90, 92], "releas": [90, 92, 94], "hw": 90, "ays": [90, 95], "fedor": [90, 95], "scheme": 90, "checker": 90, "refin": 90, "duplic": 90, "latest": [90, 94], "licens": [90, 92], "downgrad": 90, "setuptools_scm": 90, "configur": 90, "ish": 90, "2025": [92, 93], "09": 92, "python": [92, 94], "compat": 92, "instal": 92, "contributor": [92, 93], "changelog": 92, "copyright": 93, "2024": [93, 95], "reserv": 93, "redistribut": 93, "modif": 93, "permit": 93, "subject": 93, "limit": 93, "disclaim": 93, "met": 93, "must": 93, "retain": 93, "notic": 93, "materi": 93, "endors": 93, "promot": 93, "product": 93, "softwar": 93, "prior": 93, "permiss": 93, "NO": 93, "OR": 93, "TO": 93, "parti": 93, "patent": 93, "grant": 93, "BY": 93, "THE": 93, "holder": 93, "AND": 93, "AS": 93, "warranti": 93, "BUT": 93, "NOT": 93, "OF": 93, "merchant": 93, "FOR": 93, "IN": 93, "event": 93, "shall": 93, "BE": 93, "liabl": 93, "direct": 93, "indirect": 93, "incident": 93, "exemplari": 93, "consequenti": 93, "damag": 93, "procur": 93, "servic": 93, "profit": 93, "busi": 93, "interrupt": 93, "caus": 93, "ON": 93, "liabil": 93, "strict": 93, "tort": 93, "neglig": 93, "aris": 93, "IF": 93, "advis": 93, "SUCH": 93, "usual": 94, "isol": 94, "setup": 94, "plai": 94, "mess": 94, "system": 94, "uv": 94, "termin": 94, "venv": 94, "11": 94, "bin": 94, "activ": 94, "conda": 94, "visual": 94, "studio": 94, "open": 94, "command": 94, "ctrl": 94, "pip": 94, "upgrad": 94, "onlin": 94, "michel": 95, "david": 95, "acm": 95, "42": 95, "1115": 95, "1145": 95, "novemb": 95, "1995": 95, "doi": 95, "org": 95, "227683": 95, "227684": 95, "asier": 95, "ozaeta": 95, "wim": 95, "van": 95, "dam": 95, "peter": 95, "l": 95, "mcmahon": 95, "ising": 95, "scienc": 95, "technologi": 95, "dec": 95, "2020": 95, "arxiv": 95, "2012": 95, "03421": 95, "montanez": 95, "barrera": 95, "kristel": 95, "michielsen": 95, "toward": 95, "univers": 95, "protocol": 95, "evid": 95, "combinatori": 95, "ab": 95, "2405": 95, "09169": 95, "johann": 95, "weidenfel": 95, "lucia": 95, "valor": 95, "julien": 95, "gacon": 95, "carolin": 95, "tornow": 95, "luciano": 95, "bello": 95, "stefan": 95, "woerner": 95, "daniel": 95, "egger": 95, "superconduct": 95, "870": 95, "2022": 95, "dx": 95, "22331": 95, "07": 95, "misra": 95, "gri": 95, "proof": 95, "vize": 95, "theorem": 95, "41": 95, "131": 95, "133": 95, "1992": 95, "www": 95, "sciencedirect": 95, "articl": 95, "pii": 95, "002001909290041": 95, "1016": 95, "0020": 95, "0190": 95, "92": 95, "90041": 95, "kotil": 95, "simkov": 95, "2312": 95, "15982": 95, "2023": 95, "puzzl": 95, "piec": 95, "landscap": 95, "2406": 95, "14618": 95}, "objects": {"iqm": [[6, 0, 0, "-", "applications"], [28, 0, 0, "-", "qaoa"]], "iqm.applications": [[7, 0, 0, "-", "applications"], [9, 0, 0, "-", "maxcut"], [15, 0, 0, "-", "mis"], [21, 0, 0, "-", "qubo"], [25, 0, 0, "-", "sk"]], "iqm.applications.applications": [[8, 1, 1, "", "ProblemInstance"]], "iqm.applications.applications.ProblemInstance": [[8, 2, 1, "", "average_quality"], [8, 3, 1, "", "average_quality_counts"], [8, 3, 1, "", "average_quality_renormalized"], [8, 2, 1, "", "best_quality"], [8, 3, 1, "", "cvar"], [8, 2, 1, "", "dim"], [8, 3, 1, "", "fix_variables"], [8, 3, 1, "", "initialize_properties"], [8, 3, 1, "", "local_bitflip_bitstring"], [8, 3, 1, "", "local_bitflip_postprocessing"], [8, 2, 1, "", "lower_bound"], [8, 3, 1, "", "percentile_counts"], [8, 3, 1, "", "quality"], [8, 3, 1, "", "quality_renormalized"], [8, 3, 1, "", "restore_fixed_variables"], [8, 2, 1, "", "upper_bound"]], "iqm.applications.maxcut": [[10, 1, 1, "", "MaxCutInstance"], [11, 1, 1, "", "WeightedMaxCutInstance"], [12, 4, 1, "", "goemans_williamson"], [13, 4, 1, "", "greedy_max_cut"], [14, 4, 1, "", "maxcut_generator"]], "iqm.applications.maxcut.MaxCutInstance": [[10, 3, 1, "", "cut_size"], [10, 2, 1, "", "graph"]], "iqm.applications.maxcut.WeightedMaxCutInstance": [[11, 3, 1, "", "cut_size"], [11, 2, 1, "", "graph"]], "iqm.applications.mis": [[16, 1, 1, "", "ISInstance"], [17, 1, 1, "", "MISInstance"], [18, 1, 1, "", "MaximumWeightISInstance"], [19, 4, 1, "", "bron_kerbosch"], [20, 4, 1, "", "greedy_mis"]], "iqm.applications.mis.ISInstance": [[16, 3, 1, "", "fix_variables"], [16, 2, 1, "", "graph"]], "iqm.applications.mis.MISInstance": [[17, 2, 1, "", "best_quality"], [17, 3, 1, "", "fix_constraint_violation_bitstring"]], "iqm.applications.qubo": [[22, 1, 1, "", "ConstrainedQuadraticInstance"], [23, 1, 1, "", "QUBOInstance"], [24, 4, 1, "", "relabel_graph_nodes"]], "iqm.applications.qubo.ConstrainedQuadraticInstance": [[22, 2, 1, "", "bqm"], [22, 3, 1, "", "constraints_checker"], [22, 2, 1, "", "cqm"], [22, 2, 1, "", "dim"], [22, 3, 1, "", "fix_constraint_violation"], [22, 3, 1, "", "fix_constraint_violation_bitstring"], [22, 3, 1, "", "fix_variables"], [22, 3, 1, "", "initialize_properties"], [22, 3, 1, "", "loss"], [22, 2, 1, "", "penalty"], [22, 3, 1, "", "quality"], [22, 2, 1, "", "qubo_graph"], [22, 2, 1, "", "qubo_matrix"], [22, 3, 1, "", "satisfy_constraints"]], "iqm.applications.qubo.QUBOInstance": [[23, 2, 1, "", "bqm"], [23, 2, 1, "", "dim"], [23, 3, 1, "", "fix_variables"], [23, 3, 1, "", "quality"], [23, 2, 1, "", "qubo_graph"], [23, 2, 1, "", "qubo_matrix"]], "iqm.applications.sk": [[26, 1, 1, "", "SherringtonKirkpatrick"], [27, 4, 1, "", "sk_generator"]], "iqm.qaoa": [[29, 0, 0, "-", "backends"], [39, 0, 0, "-", "circuits"], [44, 0, 0, "-", "generic_qaoa"], [46, 0, 0, "-", "qubo_qaoa"], [48, 0, 0, "-", "transforming_functions"], [50, 0, 0, "-", "transpiler"], [87, 0, 0, "-", "tree_qaoa"]], "iqm.qaoa.backends": [[30, 1, 1, "", "EstimatorBackend"], [31, 1, 1, "", "EstimatorFromSampler"], [32, 1, 1, "", "EstimatorQUIMB"], [33, 1, 1, "", "EstimatorSingleLayer"], [34, 1, 1, "", "EstimatorStateVector"], [35, 1, 1, "", "SamplerBackend"], [36, 1, 1, "", "SamplerRandomBitstrings"], [37, 1, 1, "", "SamplerResonance"], [38, 1, 1, "", "SamplerSimulation"]], "iqm.qaoa.backends.EstimatorBackend": [[30, 3, 1, "", "estimate"]], "iqm.qaoa.backends.EstimatorFromSampler": [[31, 3, 1, "", "estimate"]], "iqm.qaoa.backends.EstimatorQUIMB": [[32, 3, 1, "", "estimate"]], "iqm.qaoa.backends.EstimatorSingleLayer": [[33, 3, 1, "", "estimate"]], "iqm.qaoa.backends.EstimatorStateVector": [[34, 3, 1, "", "estimate"]], "iqm.qaoa.backends.SamplerBackend": [[35, 3, 1, "", "sample"]], "iqm.qaoa.backends.SamplerRandomBitstrings": [[36, 3, 1, "", "sample"]], "iqm.qaoa.backends.SamplerResonance": [[37, 3, 1, "", "sample"]], "iqm.qaoa.backends.SamplerSimulation": [[38, 3, 1, "", "sample"]], "iqm.qaoa.circuits": [[40, 4, 1, "", "qiskit_circuit"], [41, 4, 1, "", "qiskit_circuit_specific_nodes"], [42, 4, 1, "", "quimb_tn"], [43, 4, 1, "", "transpiled_circuit"]], "iqm.qaoa.generic_qaoa": [[45, 1, 1, "", "QAOA"]], "iqm.qaoa.generic_qaoa.QAOA": [[45, 2, 1, "", "angles"], [45, 2, 1, "", "betas"], [45, 2, 1, "", "gammas"], [45, 3, 1, "", "linear_ramp_schedule"], [45, 2, 1, "", "num_layers"], [45, 2, 1, "", "num_qubits"], [45, 2, 1, "", "problem"], [45, 3, 1, "", "train"], [45, 2, 1, "", "trained"]], "iqm.qaoa.qubo_qaoa": [[47, 1, 1, "", "QUBOQAOA"]], "iqm.qaoa.qubo_qaoa.QUBOQAOA": [[47, 2, 1, "", "bqm"], [47, 3, 1, "", "estimate"], [47, 2, 1, "", "hamiltonian_graph"], [47, 2, 1, "", "interactions"], [47, 2, 1, "", "local_fields"], [47, 3, 1, "", "sample"], [47, 3, 1, "", "train"]], "iqm.qaoa.transforming_functions": [[49, 4, 1, "", "ham_graph_to_ham_operator"]], "iqm.qaoa.transpiler": [[51, 0, 0, "-", "hardwired"], [54, 0, 0, "-", "quantum_hardware"], [64, 0, 0, "-", "routing"], [68, 0, 0, "-", "rx_to_nx"], [70, 0, 0, "-", "sn"], [73, 0, 0, "-", "sparse"], [83, 0, 0, "-", "star"]], "iqm.qaoa.transpiler.hardwired": [[52, 0, 0, "-", "hardwired"]], "iqm.qaoa.transpiler.hardwired.hardwired": [[53, 4, 1, "", "hardwired_router"]], "iqm.qaoa.transpiler.quantum_hardware": [[55, 1, 1, "", "CrystalQPUFromBackend"], [56, 1, 1, "", "Grid2DQPU"], [57, 5, 1, "", "HardEdge"], [58, 5, 1, "", "HardQubit"], [59, 1, 1, "", "LineQPU"], [60, 5, 1, "", "LogEdge"], [61, 5, 1, "", "LogQubit"], [62, 1, 1, "", "QPU"], [63, 1, 1, "", "StarQPU"]], "iqm.qaoa.transpiler.quantum_hardware.Grid2DQPU": [[56, 3, 1, "", "embedded_chain"]], "iqm.qaoa.transpiler.quantum_hardware.LineQPU": [[59, 3, 1, "", "embedded_chain"]], "iqm.qaoa.transpiler.quantum_hardware.QPU": [[62, 3, 1, "", "draw"], [62, 2, 1, "", "hardware_graph"], [62, 2, 1, "", "hardware_layout"], [62, 3, 1, "", "has_edge"], [62, 2, 1, "", "qubits"], [62, 2, 1, "", "shortest_path"]], "iqm.qaoa.transpiler.routing": [[65, 1, 1, "", "Layer"], [66, 1, 1, "", "Mapping"], [67, 1, 1, "", "Routing"]], "iqm.qaoa.transpiler.routing.Layer": [[65, 3, 1, "", "apply_int_gate"], [65, 3, 1, "", "apply_swap_gate"], [65, 3, 1, "", "draw"], [65, 3, 1, "", "int_gate_applicable"], [65, 3, 1, "", "swap_gate_applicable"]], "iqm.qaoa.transpiler.routing.Mapping": [[66, 2, 1, "", "hard2log"], [66, 2, 1, "", "log2hard"], [66, 3, 1, "", "move_hard"], [66, 3, 1, "", "swap_hard"], [66, 3, 1, "", "swap_log"], [66, 3, 1, "", "update"]], "iqm.qaoa.transpiler.routing.Routing": [[67, 2, 1, "", "active_subgraph"], [67, 3, 1, "", "apply_int"], [67, 3, 1, "", "apply_swap"], [67, 3, 1, "", "attempt_apply_int"], [67, 3, 1, "", "build_qiskit"], [67, 3, 1, "", "count_swap_gates"], [67, 3, 1, "", "draw"]], "iqm.qaoa.transpiler.rx_to_nx": [[69, 4, 1, "", "rustworkx_to_networkx"]], "iqm.qaoa.transpiler.sn": [[71, 0, 0, "-", "sn"]], "iqm.qaoa.transpiler.sn.sn": [[72, 4, 1, "", "sn_router"]], "iqm.qaoa.transpiler.sparse": [[74, 0, 0, "-", "edge_coloring"], [79, 0, 0, "-", "greedy_router"], [81, 0, 0, "-", "two_color_mapper"]], "iqm.qaoa.transpiler.sparse.edge_coloring": [[75, 4, 1, "", "ec_is_complete"], [76, 4, 1, "", "ec_is_valid"], [77, 4, 1, "", "find_edge_coloring"], [78, 4, 1, "", "plot_edge_coloring"]], "iqm.qaoa.transpiler.sparse.greedy_router": [[80, 4, 1, "", "greedy_router"]], "iqm.qaoa.transpiler.sparse.two_color_mapper": [[82, 4, 1, "", "two_color_mapper"]], "iqm.qaoa.transpiler.star": [[84, 0, 0, "-", "star"]], "iqm.qaoa.transpiler.star.star": [[85, 1, 1, "", "RoutingStar"], [86, 4, 1, "", "star_router"]], "iqm.qaoa.transpiler.star.star.RoutingStar": [[85, 3, 1, "", "apply_directed_int"], [85, 3, 1, "", "apply_move_in"], [85, 3, 1, "", "apply_move_out"], [85, 3, 1, "", "build_qiskit"], [85, 3, 1, "", "count_move_gates"], [85, 3, 1, "", "draw"]], "iqm.qaoa.tree_qaoa": [[88, 1, 1, "", "TreeQAOA"]], "iqm.qaoa.tree_qaoa.TreeQAOA": [[88, 3, 1, "", "set_tree_angles"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "refer": [0, 95], "portfolio": 1, "optim": 1, "sk": [2, 25], "model": 2, "transpil": [2, 50, 51, 52, 54, 64, 68, 70, 71, 73, 74, 79, 81, 83, 84], "spars": [3, 73, 74, 79, 81], "maxcut": [3, 9], "train": 4, "qaoa": [4, 28, 29, 39, 44, 45, 46, 48, 50, 51, 52, 54, 64, 68, 70, 71, 73, 74, 79, 81, 83, 84, 87, 92, 94], "which": 5, "qubit": 5, "qpu": [5, 62], "ar": 5, "us": 5, "iqm": [6, 7, 9, 15, 21, 25, 28, 29, 39, 44, 46, 48, 50, 51, 52, 54, 64, 68, 70, 71, 73, 74, 79, 81, 83, 84, 87, 92, 94], "applic": [6, 7, 9, 15, 21, 25], "probleminst": 8, "maxcutinst": 10, "weightedmaxcutinst": 11, "goemans_williamson": 12, "greedy_max_cut": 13, "maxcut_gener": 14, "mi": 15, "isinst": 16, "misinst": 17, "maximumweightisinst": 18, "bron_kerbosch": 19, "greedy_mi": 20, "qubo": 21, "constrainedquadraticinst": 22, "quboinst": 23, "relabel_graph_nod": 24, "sherringtonkirkpatrick": 26, "sk_gener": 27, "backend": 29, "estimatorbackend": 30, "estimatorfromsampl": 31, "estimatorquimb": 32, "estimatorsinglelay": 33, "estimatorstatevector": 34, "samplerbackend": 35, "samplerrandombitstr": 36, "samplerreson": 37, "samplersimul": 38, "circuit": 39, "qiskit_circuit": 40, "qiskit_circuit_specific_nod": 41, "quimb_tn": 42, "transpiled_circuit": 43, "generic_qaoa": 44, "qubo_qaoa": 46, "quboqaoa": 47, "transforming_funct": 48, "ham_graph_to_ham_oper": 49, "hardwir": [51, 52], "hardwired_rout": 53, "quantum_hardwar": 54, "crystalqpufrombackend": 55, "grid2dqpu": 56, "hardedg": 57, "hardqubit": 58, "lineqpu": 59, "logedg": 60, "logqubit": 61, "starqpu": 63, "rout": [64, 67], "layer": 65, "map": 66, "rx_to_nx": 68, "rustworkx_to_networkx": 69, "sn": [70, 71], "sn_router": 72, "edge_color": 74, "ec_is_complet": 75, "ec_is_valid": 76, "find_edge_color": 77, "plot_edge_color": 78, "greedy_rout": [79, 80], "two_color_mapp": [81, 82], "star": [83, 84], "routingstar": 85, "star_rout": 86, "tree_qaoa": 87, "treeqaoa": 88, "contributor": 89, "changelog": 90, "version": 90, "1": 90, "15": 90, "0": 90, "2025": 90, "08": 90, "bug": 90, "fix": 90, "14": 90, "01": 90, "13": 90, "07": 90, "28": 90, "12": 90, "24": 90, "11": 90, "23": 90, "10": 90, "21": 90, "9": 90, "featur": 90, "8": 90, "09": 90, "7": 90, "6": 90, "06": 90, "25": 90, "5": 90, "4": 90, "3": 90, "20": 90, "2": 90, "19": 90, "30": 90, "05": 90, "29": 90, "27": 90, "26": 90, "04": 90, "03": 90, "22": 90, "02": 90, "18": 90, "17": 90, "16": 90, "31": 90, "2024": 90, "usag": 91, "exampl": 91, "content": 92, "indic": 92, "tabl": 92, "licens": 93, "instal": 94, "document": 94}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"SamplerBackend": [[35, "samplerbackend"]], "iqm.qaoa.circuits": [[39, "module-iqm.qaoa.circuits"]], "EstimatorSingleLayer": [[33, "estimatorsinglelayer"]], "qiskit_circuit_specific_nodes": [[41, "qiskit-circuit-specific-nodes"]], "EstimatorStateVector": [[34, "estimatorstatevector"]], "SamplerResonance": [[37, "samplerresonance"]], "SamplerSimulation": [[38, "samplersimulation"]], "EstimatorQUIMB": [[32, "estimatorquimb"]], "qiskit_circuit": [[40, "qiskit-circuit"]], "EstimatorBackend": [[30, "estimatorbackend"]], "iqm.qaoa.generic_qaoa": [[44, "module-iqm.qaoa.generic_qaoa"]], "quimb_tn": [[42, "quimb-tn"]], "SamplerRandomBitstrings": [[36, "samplerrandombitstrings"]], "transpiled_circuit": [[43, "transpiled-circuit"]], "EstimatorFromSampler": [[31, "estimatorfromsampler"]], "iqm.applications": [[6, "module-iqm.applications"]], "maxcut_generator": [[14, "maxcut-generator"]], "API Reference": [[0, "api-reference"]], "Which Qubits on the QPU Are Used?": [[5, "which-qubits-on-the-qpu-are-used"]], "WeightedMaxCutInstance": [[11, "weightedmaxcutinstance"]], "MaxCutInstance": [[10, "maxcutinstance"]], "SK Model and Transpilation": [[2, "sk-model-and-transpilation"]], "ProblemInstance": [[8, "probleminstance"]], "Sparse Maxcut": [[3, "sparse-maxcut"]], "iqm.applications.maxcut": [[9, "module-iqm.applications.maxcut"]], "goemans_williamson": [[12, "goemans-williamson"]], "Training the QAOA": [[4, "training-the-qaoa"]], "Portfolio Optimization": [[1, "portfolio-optimization"]], "iqm.applications.applications": [[7, "module-iqm.applications.applications"]], "greedy_max_cut": [[13, "greedy-max-cut"]], "SherringtonKirkpatrick": [[26, "sherringtonkirkpatrick"]], "iqm.applications.sk": [[25, "module-iqm.applications.sk"]], "QUBOInstance": [[23, "quboinstance"]], "iqm.qaoa": [[28, "module-iqm.qaoa"]], "ISInstance": [[16, "isinstance"]], "relabel_graph_nodes": [[24, "relabel-graph-nodes"]], "MISInstance": [[17, "misinstance"]], "iqm.applications.mis": [[15, "module-iqm.applications.mis"]], "ConstrainedQuadraticInstance": [[22, "constrainedquadraticinstance"]], "sk_generator": [[27, "sk-generator"]], "greedy_mis": [[20, "greedy-mis"]], "iqm.applications.qubo": [[21, "module-iqm.applications.qubo"]], "iqm.qaoa.backends": [[29, "module-iqm.qaoa.backends"]], "bron_kerbosch": [[19, "bron-kerbosch"]], "MaximumWeightISInstance": [[18, "maximumweightisinstance"]], "iqm.qaoa.transforming_functions": [[48, "module-iqm.qaoa.transforming_functions"]], "iqm.qaoa.transpiler.hardwired.hardwired": [[52, "module-iqm.qaoa.transpiler.hardwired.hardwired"]], "hardwired_router": [[53, "hardwired-router"]], "iqm.qaoa.transpiler.quantum_hardware": [[54, "module-iqm.qaoa.transpiler.quantum_hardware"]], "iqm.qaoa.transpiler": [[50, "module-iqm.qaoa.transpiler"]], "CrystalQPUFromBackend": [[55, "crystalqpufrombackend"]], "QUBOQAOA": [[47, "quboqaoa"]], "HardQubit": [[58, "hardqubit"]], "LineQPU": [[59, "lineqpu"]], "iqm.qaoa.qubo_qaoa": [[46, "module-iqm.qaoa.qubo_qaoa"]], "QAOA": [[45, "qaoa"]], "iqm.qaoa.transpiler.hardwired": [[51, "module-iqm.qaoa.transpiler.hardwired"]], "Grid2DQPU": [[56, "grid2dqpu"]], "HardEdge": [[57, "hardedge"]], "ham_graph_to_ham_operator": [[49, "ham-graph-to-ham-operator"]], "References": [[95, "references"]], "Usage Examples": [[91, "usage-examples"]], "IQM QAOA": [[92, "iqm-qaoa"], [94, "iqm-qaoa"]], "Contents": [[92, "contents"]], "Indices and tables": [[92, "indices-and-tables"]], "Changelog": [[90, "changelog"]], "Version 1.15.0 (2025-08-08)": [[90, "version-1-15-0-2025-08-08"]], "Bug Fixes": [[90, "bug-fixes"]], "Version 1.14.0 (2025-08-01)": [[90, "version-1-14-0-2025-08-01"]], "Bug fixes": [[90, "id1"], [90, "id2"], [90, "id3"], [90, "id4"], [90, "id5"], [90, "id8"], [90, "id9"], [90, "id11"]], "Version 1.13.0 (2025-07-28)": [[90, "version-1-13-0-2025-07-28"]], "Version 1.12.0 (2025-07-24)": [[90, "version-1-12-0-2025-07-24"]], "Version 1.11.0 (2025-07-23)": [[90, "version-1-11-0-2025-07-23"]], "Version 1.10.0 (2025-07-21)": [[90, "version-1-10-0-2025-07-21"]], "Version 1.9.0 (2025-07-21)": [[90, "version-1-9-0-2025-07-21"]], "Features": [[90, "features"], [90, "id6"], [90, "id7"], [90, "id10"], [90, "id12"]], "Version 1.8.0 (2025-07-09)": [[90, "version-1-8-0-2025-07-09"]], "Version 1.7.0 (2025-07-09)": [[90, "version-1-7-0-2025-07-09"]], "Version 1.6.0 (2025-06-25)": [[90, "version-1-6-0-2025-06-25"]], "Version 1.5.0 (2025-06-23)": [[90, "version-1-5-0-2025-06-23"]], "Version 1.4.0 (2025-06-23)": [[90, "version-1-4-0-2025-06-23"]], "Version 1.3.0 (2025-06-20)": [[90, "version-1-3-0-2025-06-20"]], "Version 1.2.0 (2025-06-19)": [[90, "version-1-2-0-2025-06-19"]], "Version 1.1 (2025-06-06)": [[90, "version-1-1-2025-06-06"]], "Version 1.0 (2025-06-06)": [[90, "version-1-0-2025-06-06"]], "Version 0.30 (2025-05-21)": [[90, "version-0-30-2025-05-21"]], "Version 0.29 (2025-05-15)": [[90, "version-0-29-2025-05-15"]], "Version 0.28 (2025-05-09)": [[90, "version-0-28-2025-05-09"]], "Version 0.27 (2025-05-09)": [[90, "version-0-27-2025-05-09"]], "Version 0.26 (2025-04-29)": [[90, "version-0-26-2025-04-29"]], "Version 0.25 (2025-04-29)": [[90, "version-0-25-2025-04-29"]], "Version 0.24 (2025-05-09)": [[90, "version-0-24-2025-05-09"]], "Version 0.23 (2025-03-27)": [[90, "version-0-23-2025-03-27"]], "Version 0.22 (2025-03-26)": [[90, "version-0-22-2025-03-26"]], "Version 0.21 (2025-02-20)": [[90, "version-0-21-2025-02-20"]], "Version 0.20 (2025-02-20)": [[90, "version-0-20-2025-02-20"]], "Version 0.19 (2025-02-18)": [[90, "version-0-19-2025-02-18"]], "Version 0.18 (2025-02-11)": [[90, "version-0-18-2025-02-11"]], "Version 0.17 (2025-02-04)": [[90, "version-0-17-2025-02-04"]], "Version 0.16 (2025-01-31)": [[90, "version-0-16-2025-01-31"]], "Version 0.15 (2025-01-24)": [[90, "version-0-15-2025-01-24"]], "Version 0.14 (2025-01-08)": [[90, "version-0-14-2025-01-08"]], "Version 0.13 (2025-01-07)": [[90, "version-0-13-2025-01-07"]], "Version 0.12 (2024-12-16)": [[90, "version-0-12-2024-12-16"]], "Version 0.11 (2024-11-22)": [[90, "version-0-11-2024-11-22"]], "Version 0.10 (2024-11-11)": [[90, "version-0-10-2024-11-11"]], "Version 0.9 (2024-11-05)": [[90, "version-0-9-2024-11-05"]], "Version 0.8 (2024-10-30)": [[90, "version-0-8-2024-10-30"]], "Version 0.7 (2024-10-23)": [[90, "version-0-7-2024-10-23"]], "Version 0.6 (2024-10-21)": [[90, "version-0-6-2024-10-21"]], "Version 0.5 (2024-10-16)": [[90, "version-0-5-2024-10-16"]], "Version 0.4 (2024-10-16)": [[90, "version-0-4-2024-10-16"]], "Version 0.3 (2024-10-16)": [[90, "version-0-3-2024-10-16"]], "Version 0.2 (2024-10-15)": [[90, "version-0-2-2024-10-15"]], "Version 0.1 (2024-10-15)": [[90, "version-0-1-2024-10-15"]], "License": [[93, "license"]], "Installation": [[94, "installation"]], "Documentation": [[94, "documentation"]], "ec_is_complete": [[75, "ec-is-complete"]], "two_color_mapper": [[82, "two-color-mapper"]], "iqm.qaoa.transpiler.star": [[83, "module-iqm.qaoa.transpiler.star"]], "ec_is_valid": [[76, "ec-is-valid"]], "plot_edge_coloring": [[78, "plot-edge-coloring"]], "star_router": [[86, "star-router"]], "greedy_router": [[80, "greedy-router"]], "iqm.qaoa.transpiler.sparse.two_color_mapper": [[81, "module-iqm.qaoa.transpiler.sparse.two_color_mapper"]], "RoutingStar": [[85, "routingstar"]], "TreeQAOA": [[88, "treeqaoa"]], "Contributors": [[89, "contributors"]], "iqm.qaoa.transpiler.sparse.greedy_router": [[79, "module-iqm.qaoa.transpiler.sparse.greedy_router"]], "iqm.qaoa.tree_qaoa": [[87, "module-iqm.qaoa.tree_qaoa"]], "find_edge_coloring": [[77, "find-edge-coloring"]], "iqm.qaoa.transpiler.star.star": [[84, "module-iqm.qaoa.transpiler.star.star"]], "Mapping": [[66, "mapping"]], "iqm.qaoa.transpiler.sparse.edge_coloring": [[74, "module-iqm.qaoa.transpiler.sparse.edge_coloring"]], "iqm.qaoa.transpiler.rx_to_nx": [[68, "module-iqm.qaoa.transpiler.rx_to_nx"]], "rustworkx_to_networkx": [[69, "rustworkx-to-networkx"]], "sn_router": [[72, "sn-router"]], "LogEdge": [[60, "logedge"]], "Routing": [[67, "routing"]], "Layer": [[65, "layer"]], "iqm.qaoa.transpiler.sn.sn": [[71, "module-iqm.qaoa.transpiler.sn.sn"]], "LogQubit": [[61, "logqubit"]], "iqm.qaoa.transpiler.routing": [[64, "module-iqm.qaoa.transpiler.routing"]], "iqm.qaoa.transpiler.sn": [[70, "module-iqm.qaoa.transpiler.sn"]], "StarQPU": [[63, "starqpu"]], "QPU": [[62, "qpu"]], "iqm.qaoa.transpiler.sparse": [[73, "module-iqm.qaoa.transpiler.sparse"]]}, "indexentries": {"iqm.applications": [[6, "module-iqm.applications"]], "module": [[6, "module-iqm.applications"], [7, "module-iqm.applications.applications"], [9, "module-iqm.applications.maxcut"], [15, "module-iqm.applications.mis"], [21, "module-iqm.applications.qubo"], [25, "module-iqm.applications.sk"], [28, "module-iqm.qaoa"], [29, "module-iqm.qaoa.backends"], [39, "module-iqm.qaoa.circuits"], [44, "module-iqm.qaoa.generic_qaoa"], [46, "module-iqm.qaoa.qubo_qaoa"], [48, "module-iqm.qaoa.transforming_functions"], [50, "module-iqm.qaoa.transpiler"], [51, "module-iqm.qaoa.transpiler.hardwired"], [52, "module-iqm.qaoa.transpiler.hardwired.hardwired"], [54, "module-iqm.qaoa.transpiler.quantum_hardware"], [64, "module-iqm.qaoa.transpiler.routing"], [68, "module-iqm.qaoa.transpiler.rx_to_nx"], [70, "module-iqm.qaoa.transpiler.sn"], [71, "module-iqm.qaoa.transpiler.sn.sn"], [73, "module-iqm.qaoa.transpiler.sparse"], [74, "module-iqm.qaoa.transpiler.sparse.edge_coloring"], [79, "module-iqm.qaoa.transpiler.sparse.greedy_router"], [81, "module-iqm.qaoa.transpiler.sparse.two_color_mapper"], [83, "module-iqm.qaoa.transpiler.star"], [84, "module-iqm.qaoa.transpiler.star.star"], [87, "module-iqm.qaoa.tree_qaoa"]], "iqm.applications.applications": [[7, "module-iqm.applications.applications"]], "probleminstance (class in iqm.applications.applications)": [[8, "iqm.applications.applications.ProblemInstance"]], "average_quality (iqm.applications.applications.probleminstance property)": [[8, "iqm.applications.applications.ProblemInstance.average_quality"]], "average_quality_counts() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.average_quality_counts"]], "average_quality_renormalized() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.average_quality_renormalized"]], "best_quality (iqm.applications.applications.probleminstance property)": [[8, "iqm.applications.applications.ProblemInstance.best_quality"]], "cvar() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.cvar"]], "dim (iqm.applications.applications.probleminstance property)": [[8, "iqm.applications.applications.ProblemInstance.dim"]], "fix_variables() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.fix_variables"]], "initialize_properties() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.initialize_properties"]], "local_bitflip_bitstring() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.local_bitflip_bitstring"]], "local_bitflip_postprocessing() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.local_bitflip_postprocessing"]], "lower_bound (iqm.applications.applications.probleminstance property)": [[8, "iqm.applications.applications.ProblemInstance.lower_bound"]], "percentile_counts() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.percentile_counts"]], "quality() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.quality"]], "quality_renormalized() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.quality_renormalized"]], "restore_fixed_variables() (iqm.applications.applications.probleminstance method)": [[8, "iqm.applications.applications.ProblemInstance.restore_fixed_variables"]], "upper_bound (iqm.applications.applications.probleminstance property)": [[8, "iqm.applications.applications.ProblemInstance.upper_bound"]], "iqm.applications.maxcut": [[9, "module-iqm.applications.maxcut"]], "maxcutinstance (class in iqm.applications.maxcut)": [[10, "iqm.applications.maxcut.MaxCutInstance"]], "cut_size() (iqm.applications.maxcut.maxcutinstance method)": [[10, "iqm.applications.maxcut.MaxCutInstance.cut_size"]], "graph (iqm.applications.maxcut.maxcutinstance property)": [[10, "iqm.applications.maxcut.MaxCutInstance.graph"]], "weightedmaxcutinstance (class in iqm.applications.maxcut)": [[11, "iqm.applications.maxcut.WeightedMaxCutInstance"]], "cut_size() (iqm.applications.maxcut.weightedmaxcutinstance method)": [[11, "iqm.applications.maxcut.WeightedMaxCutInstance.cut_size"]], "graph (iqm.applications.maxcut.weightedmaxcutinstance property)": [[11, "iqm.applications.maxcut.WeightedMaxCutInstance.graph"]], "goemans_williamson() (in module iqm.applications.maxcut)": [[12, "iqm.applications.maxcut.goemans_williamson"]], "greedy_max_cut() (in module iqm.applications.maxcut)": [[13, "iqm.applications.maxcut.greedy_max_cut"]], "maxcut_generator() (in module iqm.applications.maxcut)": [[14, "iqm.applications.maxcut.maxcut_generator"]], "iqm.applications.mis": [[15, "module-iqm.applications.mis"]], "isinstance (class in iqm.applications.mis)": [[16, "iqm.applications.mis.ISInstance"]], "fix_variables() (iqm.applications.mis.isinstance method)": [[16, "iqm.applications.mis.ISInstance.fix_variables"]], "graph (iqm.applications.mis.isinstance property)": [[16, "iqm.applications.mis.ISInstance.graph"]], "misinstance (class in iqm.applications.mis)": [[17, "iqm.applications.mis.MISInstance"]], "best_quality (iqm.applications.mis.misinstance property)": [[17, "iqm.applications.mis.MISInstance.best_quality"]], "fix_constraint_violation_bitstring() (iqm.applications.mis.misinstance method)": [[17, "iqm.applications.mis.MISInstance.fix_constraint_violation_bitstring"]], "maximumweightisinstance (class in iqm.applications.mis)": [[18, "iqm.applications.mis.MaximumWeightISInstance"]], "bron_kerbosch() (in module iqm.applications.mis)": [[19, "iqm.applications.mis.bron_kerbosch"]], "greedy_mis() (in module iqm.applications.mis)": [[20, "iqm.applications.mis.greedy_mis"]], "iqm.applications.qubo": [[21, "module-iqm.applications.qubo"]], "constrainedquadraticinstance (class in iqm.applications.qubo)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance"]], "bqm (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.bqm"]], "constraints_checker() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.constraints_checker"]], "cqm (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.cqm"]], "dim (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.dim"]], "fix_constraint_violation() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.fix_constraint_violation"]], "fix_constraint_violation_bitstring() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.fix_constraint_violation_bitstring"]], "fix_variables() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.fix_variables"]], "initialize_properties() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.initialize_properties"]], "loss() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.loss"]], "penalty (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.penalty"]], "quality() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.quality"]], "qubo_graph (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.qubo_graph"]], "qubo_matrix (iqm.applications.qubo.constrainedquadraticinstance property)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.qubo_matrix"]], "satisfy_constraints() (iqm.applications.qubo.constrainedquadraticinstance method)": [[22, "iqm.applications.qubo.ConstrainedQuadraticInstance.satisfy_constraints"]], "quboinstance (class in iqm.applications.qubo)": [[23, "iqm.applications.qubo.QUBOInstance"]], "bqm (iqm.applications.qubo.quboinstance property)": [[23, "iqm.applications.qubo.QUBOInstance.bqm"]], "dim (iqm.applications.qubo.quboinstance property)": [[23, "iqm.applications.qubo.QUBOInstance.dim"]], "fix_variables() (iqm.applications.qubo.quboinstance method)": [[23, "iqm.applications.qubo.QUBOInstance.fix_variables"]], "quality() (iqm.applications.qubo.quboinstance method)": [[23, "iqm.applications.qubo.QUBOInstance.quality"]], "qubo_graph (iqm.applications.qubo.quboinstance property)": [[23, "iqm.applications.qubo.QUBOInstance.qubo_graph"]], "qubo_matrix (iqm.applications.qubo.quboinstance property)": [[23, "iqm.applications.qubo.QUBOInstance.qubo_matrix"]], "relabel_graph_nodes() (in module iqm.applications.qubo)": [[24, "iqm.applications.qubo.relabel_graph_nodes"]], "iqm.applications.sk": [[25, "module-iqm.applications.sk"]], "sherringtonkirkpatrick (class in iqm.applications.sk)": [[26, "iqm.applications.sk.SherringtonKirkpatrick"]], "sk_generator() (in module iqm.applications.sk)": [[27, "iqm.applications.sk.sk_generator"]], "iqm.qaoa": [[28, "module-iqm.qaoa"]], "iqm.qaoa.backends": [[29, "module-iqm.qaoa.backends"]], "estimatorbackend (class in iqm.qaoa.backends)": [[30, "iqm.qaoa.backends.EstimatorBackend"]], "estimate() (iqm.qaoa.backends.estimatorbackend method)": [[30, "iqm.qaoa.backends.EstimatorBackend.estimate"]], "estimatorfromsampler (class in iqm.qaoa.backends)": [[31, "iqm.qaoa.backends.EstimatorFromSampler"]], "estimate() (iqm.qaoa.backends.estimatorfromsampler method)": [[31, "iqm.qaoa.backends.EstimatorFromSampler.estimate"]], "estimatorquimb (class in iqm.qaoa.backends)": [[32, "iqm.qaoa.backends.EstimatorQUIMB"]], "estimate() (iqm.qaoa.backends.estimatorquimb method)": [[32, "iqm.qaoa.backends.EstimatorQUIMB.estimate"]], "estimatorsinglelayer (class in iqm.qaoa.backends)": [[33, "iqm.qaoa.backends.EstimatorSingleLayer"]], "estimate() (iqm.qaoa.backends.estimatorsinglelayer method)": [[33, "iqm.qaoa.backends.EstimatorSingleLayer.estimate"]], "estimatorstatevector (class in iqm.qaoa.backends)": [[34, "iqm.qaoa.backends.EstimatorStateVector"]], "estimate() (iqm.qaoa.backends.estimatorstatevector method)": [[34, "iqm.qaoa.backends.EstimatorStateVector.estimate"]], "samplerbackend (class in iqm.qaoa.backends)": [[35, "iqm.qaoa.backends.SamplerBackend"]], "sample() (iqm.qaoa.backends.samplerbackend method)": [[35, "iqm.qaoa.backends.SamplerBackend.sample"]], "samplerrandombitstrings (class in iqm.qaoa.backends)": [[36, "iqm.qaoa.backends.SamplerRandomBitstrings"]], "sample() (iqm.qaoa.backends.samplerrandombitstrings method)": [[36, "iqm.qaoa.backends.SamplerRandomBitstrings.sample"]], "samplerresonance (class in iqm.qaoa.backends)": [[37, "iqm.qaoa.backends.SamplerResonance"]], "sample() (iqm.qaoa.backends.samplerresonance method)": [[37, "iqm.qaoa.backends.SamplerResonance.sample"]], "samplersimulation (class in iqm.qaoa.backends)": [[38, "iqm.qaoa.backends.SamplerSimulation"]], "sample() (iqm.qaoa.backends.samplersimulation method)": [[38, "iqm.qaoa.backends.SamplerSimulation.sample"]], "iqm.qaoa.circuits": [[39, "module-iqm.qaoa.circuits"]], "qiskit_circuit() (in module iqm.qaoa.circuits)": [[40, "iqm.qaoa.circuits.qiskit_circuit"]], "qiskit_circuit_specific_nodes() (in module iqm.qaoa.circuits)": [[41, "iqm.qaoa.circuits.qiskit_circuit_specific_nodes"]], "quimb_tn() (in module iqm.qaoa.circuits)": [[42, "iqm.qaoa.circuits.quimb_tn"]], "transpiled_circuit() (in module iqm.qaoa.circuits)": [[43, "iqm.qaoa.circuits.transpiled_circuit"]], "iqm.qaoa.generic_qaoa": [[44, "module-iqm.qaoa.generic_qaoa"]], "qaoa (class in iqm.qaoa.generic_qaoa)": [[45, "iqm.qaoa.generic_qaoa.QAOA"]], "angles (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.angles"]], "betas (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.betas"]], "gammas (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.gammas"]], "linear_ramp_schedule() (iqm.qaoa.generic_qaoa.qaoa method)": [[45, "iqm.qaoa.generic_qaoa.QAOA.linear_ramp_schedule"]], "num_layers (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.num_layers"]], "num_qubits (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.num_qubits"]], "problem (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.problem"]], "train() (iqm.qaoa.generic_qaoa.qaoa method)": [[45, "iqm.qaoa.generic_qaoa.QAOA.train"]], "trained (iqm.qaoa.generic_qaoa.qaoa property)": [[45, "iqm.qaoa.generic_qaoa.QAOA.trained"]], "iqm.qaoa.qubo_qaoa": [[46, "module-iqm.qaoa.qubo_qaoa"]], "quboqaoa (class in iqm.qaoa.qubo_qaoa)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA"]], "bqm (iqm.qaoa.qubo_qaoa.quboqaoa property)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.bqm"]], "estimate() (iqm.qaoa.qubo_qaoa.quboqaoa method)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.estimate"]], "hamiltonian_graph (iqm.qaoa.qubo_qaoa.quboqaoa property)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.hamiltonian_graph"]], "interactions (iqm.qaoa.qubo_qaoa.quboqaoa property)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.interactions"]], "local_fields (iqm.qaoa.qubo_qaoa.quboqaoa property)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.local_fields"]], "sample() (iqm.qaoa.qubo_qaoa.quboqaoa method)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.sample"]], "train() (iqm.qaoa.qubo_qaoa.quboqaoa method)": [[47, "iqm.qaoa.qubo_qaoa.QUBOQAOA.train"]], "iqm.qaoa.transforming_functions": [[48, "module-iqm.qaoa.transforming_functions"]], "ham_graph_to_ham_operator() (in module iqm.qaoa.transforming_functions)": [[49, "iqm.qaoa.transforming_functions.ham_graph_to_ham_operator"]], "iqm.qaoa.transpiler": [[50, "module-iqm.qaoa.transpiler"]], "iqm.qaoa.transpiler.hardwired": [[51, "module-iqm.qaoa.transpiler.hardwired"]], "iqm.qaoa.transpiler.hardwired.hardwired": [[52, "module-iqm.qaoa.transpiler.hardwired.hardwired"]], "hardwired_router() (in module iqm.qaoa.transpiler.hardwired.hardwired)": [[53, "iqm.qaoa.transpiler.hardwired.hardwired.hardwired_router"]], "iqm.qaoa.transpiler.quantum_hardware": [[54, "module-iqm.qaoa.transpiler.quantum_hardware"]], "crystalqpufrombackend (class in iqm.qaoa.transpiler.quantum_hardware)": [[55, "iqm.qaoa.transpiler.quantum_hardware.CrystalQPUFromBackend"]], "grid2dqpu (class in iqm.qaoa.transpiler.quantum_hardware)": [[56, "iqm.qaoa.transpiler.quantum_hardware.Grid2DQPU"]], "embedded_chain() (iqm.qaoa.transpiler.quantum_hardware.grid2dqpu method)": [[56, "iqm.qaoa.transpiler.quantum_hardware.Grid2DQPU.embedded_chain"]], "hardedge (in module iqm.qaoa.transpiler.quantum_hardware)": [[57, "iqm.qaoa.transpiler.quantum_hardware.HardEdge"]], "hardqubit (in module iqm.qaoa.transpiler.quantum_hardware)": [[58, "iqm.qaoa.transpiler.quantum_hardware.HardQubit"]], "lineqpu (class in iqm.qaoa.transpiler.quantum_hardware)": [[59, "iqm.qaoa.transpiler.quantum_hardware.LineQPU"]], "embedded_chain() (iqm.qaoa.transpiler.quantum_hardware.lineqpu method)": [[59, "iqm.qaoa.transpiler.quantum_hardware.LineQPU.embedded_chain"]], "logedge (in module iqm.qaoa.transpiler.quantum_hardware)": [[60, "iqm.qaoa.transpiler.quantum_hardware.LogEdge"]], "logqubit (in module iqm.qaoa.transpiler.quantum_hardware)": [[61, "iqm.qaoa.transpiler.quantum_hardware.LogQubit"]], "qpu (class in iqm.qaoa.transpiler.quantum_hardware)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU"]], "draw() (iqm.qaoa.transpiler.quantum_hardware.qpu method)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.draw"]], "hardware_graph (iqm.qaoa.transpiler.quantum_hardware.qpu property)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.hardware_graph"]], "hardware_layout (iqm.qaoa.transpiler.quantum_hardware.qpu property)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.hardware_layout"]], "has_edge() (iqm.qaoa.transpiler.quantum_hardware.qpu method)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.has_edge"]], "qubits (iqm.qaoa.transpiler.quantum_hardware.qpu property)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.qubits"]], "shortest_path (iqm.qaoa.transpiler.quantum_hardware.qpu property)": [[62, "iqm.qaoa.transpiler.quantum_hardware.QPU.shortest_path"]], "starqpu (class in iqm.qaoa.transpiler.quantum_hardware)": [[63, "iqm.qaoa.transpiler.quantum_hardware.StarQPU"]], "iqm.qaoa.transpiler.routing": [[64, "module-iqm.qaoa.transpiler.routing"]], "layer (class in iqm.qaoa.transpiler.routing)": [[65, "iqm.qaoa.transpiler.routing.Layer"]], "apply_int_gate() (iqm.qaoa.transpiler.routing.layer method)": [[65, "iqm.qaoa.transpiler.routing.Layer.apply_int_gate"]], "apply_swap_gate() (iqm.qaoa.transpiler.routing.layer method)": [[65, "iqm.qaoa.transpiler.routing.Layer.apply_swap_gate"]], "draw() (iqm.qaoa.transpiler.routing.layer method)": [[65, "iqm.qaoa.transpiler.routing.Layer.draw"]], "int_gate_applicable() (iqm.qaoa.transpiler.routing.layer method)": [[65, "iqm.qaoa.transpiler.routing.Layer.int_gate_applicable"]], "swap_gate_applicable() (iqm.qaoa.transpiler.routing.layer method)": [[65, "iqm.qaoa.transpiler.routing.Layer.swap_gate_applicable"]], "mapping (class in iqm.qaoa.transpiler.routing)": [[66, "iqm.qaoa.transpiler.routing.Mapping"]], "hard2log (iqm.qaoa.transpiler.routing.mapping property)": [[66, "iqm.qaoa.transpiler.routing.Mapping.hard2log"]], "log2hard (iqm.qaoa.transpiler.routing.mapping property)": [[66, "iqm.qaoa.transpiler.routing.Mapping.log2hard"]], "move_hard() (iqm.qaoa.transpiler.routing.mapping method)": [[66, "iqm.qaoa.transpiler.routing.Mapping.move_hard"]], "swap_hard() (iqm.qaoa.transpiler.routing.mapping method)": [[66, "iqm.qaoa.transpiler.routing.Mapping.swap_hard"]], "swap_log() (iqm.qaoa.transpiler.routing.mapping method)": [[66, "iqm.qaoa.transpiler.routing.Mapping.swap_log"]], "update() (iqm.qaoa.transpiler.routing.mapping method)": [[66, "iqm.qaoa.transpiler.routing.Mapping.update"]], "routing (class in iqm.qaoa.transpiler.routing)": [[67, "iqm.qaoa.transpiler.routing.Routing"]], "active_subgraph (iqm.qaoa.transpiler.routing.routing property)": [[67, "iqm.qaoa.transpiler.routing.Routing.active_subgraph"]], "apply_int() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.apply_int"]], "apply_swap() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.apply_swap"]], "attempt_apply_int() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.attempt_apply_int"]], "build_qiskit() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.build_qiskit"]], "count_swap_gates() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.count_swap_gates"]], "draw() (iqm.qaoa.transpiler.routing.routing method)": [[67, "iqm.qaoa.transpiler.routing.Routing.draw"]], "iqm.qaoa.transpiler.rx_to_nx": [[68, "module-iqm.qaoa.transpiler.rx_to_nx"]], "rustworkx_to_networkx() (in module iqm.qaoa.transpiler.rx_to_nx)": [[69, "iqm.qaoa.transpiler.rx_to_nx.rustworkx_to_networkx"]], "iqm.qaoa.transpiler.sn": [[70, "module-iqm.qaoa.transpiler.sn"]], "iqm.qaoa.transpiler.sn.sn": [[71, "module-iqm.qaoa.transpiler.sn.sn"]], "sn_router() (in module iqm.qaoa.transpiler.sn.sn)": [[72, "iqm.qaoa.transpiler.sn.sn.sn_router"]], "iqm.qaoa.transpiler.sparse": [[73, "module-iqm.qaoa.transpiler.sparse"]], "iqm.qaoa.transpiler.sparse.edge_coloring": [[74, "module-iqm.qaoa.transpiler.sparse.edge_coloring"]], "ec_is_complete() (in module iqm.qaoa.transpiler.sparse.edge_coloring)": [[75, "iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_complete"]], "ec_is_valid() (in module iqm.qaoa.transpiler.sparse.edge_coloring)": [[76, "iqm.qaoa.transpiler.sparse.edge_coloring.ec_is_valid"]], "find_edge_coloring() (in module iqm.qaoa.transpiler.sparse.edge_coloring)": [[77, "iqm.qaoa.transpiler.sparse.edge_coloring.find_edge_coloring"]], "plot_edge_coloring() (in module iqm.qaoa.transpiler.sparse.edge_coloring)": [[78, "iqm.qaoa.transpiler.sparse.edge_coloring.plot_edge_coloring"]], "iqm.qaoa.transpiler.sparse.greedy_router": [[79, "module-iqm.qaoa.transpiler.sparse.greedy_router"]], "greedy_router() (in module iqm.qaoa.transpiler.sparse.greedy_router)": [[80, "iqm.qaoa.transpiler.sparse.greedy_router.greedy_router"]], "iqm.qaoa.transpiler.sparse.two_color_mapper": [[81, "module-iqm.qaoa.transpiler.sparse.two_color_mapper"]], "two_color_mapper() (in module iqm.qaoa.transpiler.sparse.two_color_mapper)": [[82, "iqm.qaoa.transpiler.sparse.two_color_mapper.two_color_mapper"]], "iqm.qaoa.transpiler.star": [[83, "module-iqm.qaoa.transpiler.star"]], "iqm.qaoa.transpiler.star.star": [[84, "module-iqm.qaoa.transpiler.star.star"]], "routingstar (class in iqm.qaoa.transpiler.star.star)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar"]], "apply_directed_int() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.apply_directed_int"]], "apply_move_in() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.apply_move_in"]], "apply_move_out() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.apply_move_out"]], "build_qiskit() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.build_qiskit"]], "count_move_gates() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.count_move_gates"]], "draw() (iqm.qaoa.transpiler.star.star.routingstar method)": [[85, "iqm.qaoa.transpiler.star.star.RoutingStar.draw"]], "star_router() (in module iqm.qaoa.transpiler.star.star)": [[86, "iqm.qaoa.transpiler.star.star.star_router"]], "iqm.qaoa.tree_qaoa": [[87, "module-iqm.qaoa.tree_qaoa"]], "treeqaoa (class in iqm.qaoa.tree_qaoa)": [[88, "iqm.qaoa.tree_qaoa.TreeQAOA"]], "set_tree_angles() (iqm.qaoa.tree_qaoa.treeqaoa method)": [[88, "iqm.qaoa.tree_qaoa.TreeQAOA.set_tree_angles"]]}})