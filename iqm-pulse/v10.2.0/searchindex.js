Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_Cosine", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.PrxGateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.register_operation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.PolynomialCosine", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_Cosine.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.PrxGateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.register_operation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.PolynomialCosine.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "Shelved_Measure_Constant", "Shelved_Measure_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_SLEPIAN_CRF", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_Cosine", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "PrxGateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "iqm.pulse.gates.register_operation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "PolynomialCosine", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 53, 55, 58, 69, 71, 74, 121, 122, 124, 125, 130, 131, 136, 152, 154, 159, 168, 169, 170, 197, 198, 203, 209, 213, 216, 217, 218, 219, 221, 222, 223, 224], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 185, 187, 189, 207, 217, 218, 220, 222, 223, 224], "instruct": [1, 4, 6, 16, 20, 32, 35, 49, 53, 55, 69, 70, 71, 74, 75, 77, 80, 81, 82, 84, 85, 99, 100, 108, 112, 114, 121, 124, 125, 127, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 207, 208, 211, 213, 215, 216, 217, 220, 222, 224], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 71, 74, 80, 81, 82, 84, 85, 88, 99, 100, 108, 110, 112, 114, 121, 125, 154, 166, 167, 169, 171, 187, 194, 199, 200, 201, 202, 203, 208, 210, 217, 219, 220, 222], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 71, 77, 82, 100, 104, 107, 108, 110, 114, 121, 159, 186, 187, 188, 190, 207, 217, 218, 219, 220, 223, 224], "comput": [1, 5, 6, 16, 31, 69, 77, 107, 118, 121, 125, 136, 137, 140, 141, 143, 144, 145, 146, 157, 159, 170, 171, 187, 191, 195, 196, 203, 207, 217, 218, 219, 220, 221, 224], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 75, 83, 104, 109, 116, 118, 121, 122, 132, 136, 142, 152, 167, 168, 173, 174, 176, 183, 186, 191, 199, 204, 208, 217, 219], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 73, 75, 76, 78, 79, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 104, 109, 111, 116, 118, 121, 122, 132, 142, 152, 167, 168, 170, 173, 174, 176, 186, 191, 199, 203, 204, 208, 217], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 199, 200, 201, 202, 203, 204, 208, 209, 217, 218, 219, 221, 222, 224], "subpackag": [1, 33, 121, 173], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 108, 110, 111, 112, 113, 114, 117, 119, 121, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 142, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 200, 201, 202, 203, 209, 217, 218, 219, 220], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 141, 142, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 194, 200, 201, 202, 203, 209, 217, 221, 222], "util": [2, 6, 217, 219], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 75, 77, 83, 99, 107, 108, 109, 110, 118, 122, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 174, 185, 186, 187, 191, 203, 204, 208, 217, 219], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 110, 114, 144, 156, 217, 219], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 71, 74, 77, 99, 108, 169, 179, 187, 195, 196, 201, 203, 213, 216, 217, 218, 219, 221, 222, 223, 224], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 199, 200, 201, 202, 203, 204, 208, 209, 217, 218, 219, 223, 224], "A": [3, 6, 7, 11, 14, 18, 37, 69, 71, 73, 74, 137, 154, 177, 187, 191, 197, 198, 200, 203, 205, 217, 218, 219, 220, 221, 222, 223, 224], "b": [3, 14, 55, 69, 71, 74, 142, 191, 197, 198, 203, 221], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 111, 112, 125, 127, 136, 170, 187, 217, 224], "merg": [3, 6, 195], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 74, 75, 77, 86, 88, 137, 141, 187, 195, 203, 217, 218, 219, 222, 224], "dictionari": [3, 58, 143, 219], "recurs": [3, 6, 203, 218, 224], "leav": 3, "origin": [3, 11, 15, 170, 171, 217, 221], "unchang": [3, 170], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 194, 195, 196, 197, 198, 200, 203, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 222, 224], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 71, 77, 87, 88, 97, 102, 103, 108, 114, 129, 133, 144, 170, 177, 179, 183, 184, 185, 187, 188, 195, 196, 197, 198, 200, 203, 216, 217, 219], "anoth": [3, 6, 35, 49, 77, 80, 120, 187, 197, 198, 217, 218, 219, 224], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 111, 112, 125, 127, 131, 133, 134, 135, 136, 144, 145, 146, 170, 187, 194, 195, 196, 217], "whether": [3, 6, 13, 18, 82, 102, 125, 131, 136, 195, 196, 219, 221, 224], "also": [3, 6, 11, 17, 19, 20, 31, 35, 48, 49, 55, 70, 77, 81, 89, 90, 98, 99, 107, 108, 110, 124, 170, 187, 191, 195, 196, 198, 203, 207, 217, 219, 221, 222, 224], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 107, 108, 111, 112, 113, 117, 119, 159, 170, 171, 187, 189, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 214, 216, 217, 219], "empti": [3, 11, 20, 63, 69, 70, 71, 74, 163, 170, 187, 217, 219], "size": [3, 13, 219], "valu": [3, 6, 11, 13, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 71, 73, 74, 76, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 111, 136, 137, 144, 145, 146, 154, 158, 160, 162, 163, 166, 177, 182, 190, 201, 202, 217, 218, 219, 224], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 77, 81, 88, 89, 90, 98, 99, 107, 113, 117, 119, 125, 130, 133, 136, 137, 140, 141, 143, 144, 153, 157, 160, 163, 170, 171, 175, 176, 177, 179, 182, 183, 184, 185, 194, 196, 200, 203, 213, 217, 218, 219, 221, 222, 224], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 71, 74, 77, 81, 82, 84, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 107, 108, 110, 114, 115, 117, 119, 120, 124, 125, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 162, 170, 171, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 194, 195, 196, 197, 198, 200, 203, 205, 206, 207, 214, 216, 217, 219], "copi": [3, 6, 11, 81, 159, 170, 171, 187, 221], "content": [3, 6, 7, 11, 125, 159, 170, 171, 187, 194, 202, 203, 217, 218, 219, 221, 224], "take": [3, 7, 11, 20, 37, 49, 97, 170, 183, 185, 187, 217, 219, 222, 224], "preced": [3, 34, 35, 55, 114, 207], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 162, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 209, 214, 216, 217, 219, 221], "tool": [4, 191, 194, 220], "build": [4, 6, 7, 18, 20, 69, 70, 71, 81, 87, 88, 89, 90, 200, 203, 217, 219], "class": [4, 5, 6, 7, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 199, 200, 201, 202, 203, 208, 209, 217, 220, 221], "inherit": [4, 10, 16, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 75, 77, 83, 87, 88, 89, 90, 97, 98, 100, 104, 107, 108, 109, 110, 114, 116, 118, 122, 132, 142, 152, 168, 176, 186, 191, 199, 208, 217, 219], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 82, 217], "schedulebuild": [4, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 114, 117, 119, 203, 217, 218, 219, 220], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 217, 218, 219, 222, 224], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 112, 113, 114, 117, 119, 124, 130, 157, 170, 187, 188, 189, 196, 200, 201, 202, 203, 217, 218, 219, 221, 224], "locu": [5, 6, 7, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 187, 189, 200, 203, 217, 218, 219, 222, 224], "arg": [5, 11, 20, 31, 35, 48, 49, 77, 107, 108, 110, 219], "factori": [5, 6, 125, 127, 157, 187, 200, 203], "implement": [5, 6, 7, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 107, 108, 110, 111, 112, 113, 114, 117, 119, 133, 136, 170, 187, 189, 190, 207, 217, 218, 220, 222, 223, 224], "object": [5, 6, 11, 17, 32, 123, 124, 125, 141, 153, 159, 170, 171, 187, 194, 203, 209, 217, 219, 221], "specif": [5, 6, 20, 31, 33, 34, 35, 48, 49, 53, 77, 99, 107, 108, 110, 114, 124, 136, 170, 185, 187, 209, 213, 217, 218, 219, 221, 224], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 74, 75, 77, 100, 102, 103, 104, 106, 107, 108, 110, 113, 114, 117, 119, 186, 187, 188, 189, 190, 203, 209, 217, 218, 219, 220, 222, 224], "appli": [5, 6, 37, 49, 55, 74, 75, 77, 80, 81, 99, 108, 159, 187, 217, 218, 219, 221, 222, 224], "part": [5, 6, 20, 84, 163, 178, 180, 181, 182, 183, 187, 194, 203, 217, 218, 219, 221, 222, 224], "qpu": [5, 6, 20, 21, 35, 63, 166, 187, 195, 199, 203, 217, 218, 219, 224], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 77, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 109, 110, 114, 116, 118, 133, 144, 151, 177, 179, 183, 184, 185, 187, 191, 195, 196, 197, 198, 203, 217, 219, 223, 224], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 110, 114, 133, 137, 144, 145, 146, 147, 148, 149, 150, 151, 177, 179, 183, 184, 185, 195, 196, 203, 217, 219, 223], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 71, 74, 82, 108, 114, 187, 217, 218, 219, 220, 222, 224], "attribut": [5, 6, 7, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 108, 110, 111, 112, 113, 114, 117, 119, 124, 125, 126, 127, 128, 133, 134, 135, 136, 142, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 200, 201, 202, 203, 209, 217, 219, 221, 222], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 194, 200, 201, 202, 203, 209, 217, 219, 224], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 112, 113, 114, 117, 119, 124, 125, 129, 133, 144, 153, 155, 156, 157, 163, 164, 170, 175, 177, 179, 183, 184, 185, 187, 188, 189, 195, 196, 197, 198, 200, 203, 216, 219], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 37, 63, 69, 70, 71, 107, 108, 113, 117, 119, 125, 127, 129, 141, 151, 156, 157, 158, 159, 160, 161, 162, 170, 187, 200, 203, 205, 207, 209, 219], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 71, 74, 77, 107, 108, 110, 136, 160, 169, 170, 185, 187, 195, 196, 200, 203, 217, 218, 219, 221, 224], "inform": [5, 6, 32, 82, 187, 217, 218, 219, 221, 222, 224], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 71, 74, 76, 77, 78, 79, 85, 107, 108, 111, 112, 125, 130, 133, 134, 135, 144, 145, 146, 160, 166, 185, 187, 195, 196, 200, 203, 217, 218, 219, 224], "qubit": [5, 6, 11, 12, 13, 14, 15, 20, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 88, 99, 100, 104, 108, 109, 110, 114, 116, 118, 185, 187, 195, 196, 217, 218, 219, 222, 223, 224], "reson": [5, 75, 76, 77, 78, 79, 80, 81, 110, 119, 125, 195, 196, 207, 217, 218, 223, 224], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 77, 107, 108, 114, 187, 195, 196, 217, 218, 219, 221, 222, 224], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 71, 88, 108, 110, 114, 136, 187, 217, 219, 224], "valid": [5, 6, 9, 18, 20, 75, 82, 156, 158, 159, 162, 170, 189, 190, 203, 209, 217, 224], "op_tabl": [5, 6, 9, 11, 18, 37, 38, 39, 107, 113, 117, 119, 219], "against": [5, 6, 163, 190, 221, 224], "tabl": [5, 6, 7, 9, 11, 12, 13, 103, 124, 188, 217], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 77, 103, 120, 132, 142, 176, 187, 188, 217, 218, 219, 221], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 112, 114, 117, 119, 186, 188, 189, 217, 220, 224], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 71, 74, 82, 108, 124, 137, 140, 141, 143, 149, 156, 158, 159, 162, 170, 187, 200, 203, 213, 217, 218, 219, 221, 224], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 102, 103, 114, 125, 136, 141, 160, 170, 195, 217, 218, 219, 222, 224], "rais": [5, 6, 7, 9, 61, 82, 102, 103, 125, 156, 158, 159, 162, 177, 187, 189, 190, 205, 210, 211, 212, 217, 218], "valueerror": [5, 6, 7, 9, 82, 102, 103, 125, 156, 158, 159, 162, 187, 189, 190, 205], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 118, 125, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 162, 163, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 196, 197, 198, 203, 207, 213, 216, 217, 218, 219, 220, 221, 222, 224], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 111, 112, 113, 114, 117, 119, 133, 144, 177, 179, 183, 184, 185, 187, 189, 190, 217, 218, 224], "chip_topologi": [6, 20, 63, 108, 129, 130, 219, 224], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 107, 108, 110, 114, 123, 124, 125, 126, 127, 128, 154, 157, 158, 159, 165, 169, 170, 171, 191, 195, 196, 197, 198, 200, 201, 203, 213, 214, 216, 217, 218, 219, 222, 224], "component_channel": 6, "out": [6, 11, 87, 89, 217, 218, 219, 221, 222], "individu": [6, 54, 187, 218, 221], "encapsul": [6, 20, 33, 82, 224], "known": [6, 7, 61, 102, 103, 170, 185, 187, 188, 190, 218, 219], "op": [6, 7, 12, 13, 16, 18, 103, 187, 188, 189, 190, 219], "them": [6, 11, 12, 18, 37, 70, 74, 97, 107, 108, 113, 114, 117, 119, 187, 203, 217, 220], "topologi": [6, 130, 224], "properti": [6, 11, 20, 75, 122, 124, 125, 129, 130, 170, 171, 187, 194, 196, 197, 198, 217, 224], "quantumopt": [6, 11, 12, 13, 190, 217], "opcalibrationdatatre": [6, 20, 190], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 111, 112, 114, 124, 133, 144, 153, 177, 179, 183, 184, 185, 187, 189, 190, 209, 213, 216, 217, 218], "tree": [6, 8, 20, 130, 189, 190], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 71, 100, 107, 108, 114, 129, 130, 219], "chip": [6, 11, 130, 217], "deriv": [6, 99, 133, 136, 142, 143, 144, 145, 146, 147, 148, 149, 151, 182, 185, 217, 219, 221], "chad": [6, 187], "channelproperti": [6, 20, 122, 127, 129, 131, 170, 196, 197, 198, 214, 216], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 63, 69, 70, 71, 100, 107, 108, 114, 124, 130, 133, 141, 143, 144, 156, 170, 177, 179, 183, 184, 185, 187, 188, 196, 203, 205, 217, 219], "configur": [6, 7, 123, 126, 128, 213, 216, 221], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 71, 74, 80, 81, 84, 97, 99, 107, 110, 114, 119, 125, 151, 157, 165, 207, 217, 218, 219, 222], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 76, 77, 78, 79, 157, 187, 217, 219], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 71, 72, 73, 74, 107, 153, 161, 170, 200, 217, 222], "respons": [6, 125, 128, 219, 221, 222], "_cach": 6, "gateimplement": [6, 7, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 75, 77, 83, 100, 102, 104, 107, 108, 109, 110, 114, 116, 118, 187, 189, 203, 217, 220, 222, 224], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 71, 77, 107, 108, 110, 141, 170, 203, 217, 219], "The": [6, 11, 12, 17, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 74, 75, 77, 80, 83, 84, 88, 97, 99, 102, 104, 105, 107, 108, 109, 110, 114, 116, 118, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 158, 163, 165, 170, 175, 177, 179, 180, 181, 182, 183, 185, 187, 191, 195, 196, 197, 198, 203, 213, 215, 216, 217, 218, 219, 221, 222, 224], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 70, 71, 74, 75, 77, 108, 110, 114, 124, 133, 144, 159, 160, 163, 170, 177, 179, 182, 183, 184, 185, 187, 195, 196, 197, 198, 203, 213, 216, 217, 218, 219, 221, 222, 224], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 80, 84, 85, 99, 111, 112, 131, 134, 135, 138, 139, 141, 145, 146, 147, 148, 149, 158, 163, 177, 179, 180, 181, 182, 183, 184, 185, 196, 203, 213, 216, 217, 218, 219, 221, 222, 224], "structur": [6, 217], "composite_cach": 6, "compositeg": [6, 16, 17, 20, 36, 37, 38, 39, 104, 107, 109, 113, 116, 117, 118, 119, 217, 219], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 71, 74, 77, 84, 88, 99, 100, 107, 108, 110, 114, 117, 119, 195, 200, 201, 202, 217, 219, 220, 222], "flush": [6, 17, 217], "whenev": [6, 17, 69, 71, 74, 217], "inject": [6, 217], "_channel_to_compon": 6, "self": [6, 11, 19, 20, 48, 49, 69, 70, 71, 74, 89, 90, 98, 108, 170, 187, 194, 203, 218, 219], "invert": 6, "algorithm": [6, 191, 195, 197, 201, 203, 217, 219, 224], "perform": [6, 49, 155, 163, 170, 221], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 55, 58, 60, 63, 69, 70, 71, 74, 75, 77, 80, 84, 87, 88, 89, 90, 97, 98, 99, 100, 105, 106, 107, 108, 110, 114, 124, 125, 133, 136, 141, 143, 144, 158, 160, 161, 163, 166, 170, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 197, 198, 201, 203, 217, 218, 219, 221, 222, 224], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 84, 87, 88, 99, 105, 106, 107, 108, 110, 113, 114, 117, 118, 119, 124, 125, 133, 136, 137, 141, 143, 144, 151, 154, 163, 165, 166, 169, 170, 175, 177, 179, 181, 183, 184, 185, 187, 195, 196, 201, 203, 207, 213, 216, 217, 218, 219, 220, 221, 222, 223], "determin": [6, 32, 195, 203, 218, 221, 224], "block": [6, 35, 37, 49, 69, 70, 71, 74, 99, 107, 108, 125, 152, 166, 169, 193, 195, 196, 200, 203, 217, 218, 222, 224], "associ": [6, 11, 69, 71, 74, 108, 124, 125, 161, 163, 219, 221, 222], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 74, 75, 76, 77, 78, 79, 85, 99, 107, 111, 112, 125, 170, 180, 181, 185, 187, 194, 203, 217, 218, 221, 222, 223, 224], "ar": [6, 7, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 83, 85, 88, 89, 90, 98, 107, 111, 112, 113, 114, 117, 118, 119, 124, 125, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 151, 158, 160, 163, 170, 171, 177, 179, 182, 183, 184, 185, 187, 190, 194, 195, 196, 197, 198, 201, 202, 203, 213, 216, 217, 218, 219, 220, 221, 222, 224], "includ": [6, 9, 17, 19, 20, 69, 70, 71, 77, 87, 88, 97, 124, 136, 187, 203, 217, 219, 221], "non": [6, 11, 18, 63, 68, 69, 71, 74, 104, 108, 133, 136, 144, 177, 179, 183, 184, 185, 205, 219, 221, 224], "certain": [6, 19, 20, 48, 49, 89, 90, 98, 125, 136, 219, 224], "virtual": [6, 37, 49, 77, 80, 81, 108, 114, 119, 125, 217, 222, 224], "do": [6, 9, 11, 32, 63, 114, 116, 125, 170, 176, 179, 195, 207, 217, 218, 219, 221, 224], "just": [6, 11, 17, 31, 69, 71, 74, 88, 107, 187, 203, 217, 218, 219], "themselv": [6, 20, 70, 218, 219], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 71, 72, 74, 108, 127, 153, 161, 196, 200, 217, 219], "_require_scheduling_in_second": 6, "requir": [6, 18, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 76, 77, 78, 79, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 106, 108, 111, 112, 114, 125, 133, 144, 177, 179, 181, 183, 184, 185, 187, 189, 190, 200, 207, 213, 216, 217, 218, 219, 221], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 74, 75, 108, 110, 114, 125, 133, 137, 141, 144, 170, 177, 179, 183, 184, 185, 194, 196, 197, 198, 217, 219, 222, 224], "instead": [6, 20, 80, 166, 195, 217, 218, 219, 222, 224], "sampl": [6, 20, 32, 80, 125, 127, 128, 131, 133, 134, 135, 136, 144, 145, 146, 153, 154, 158, 159, 160, 164, 166, 170, 171, 177, 179, 180, 181, 182, 183, 184, 185, 195, 196, 200, 213, 216, 217, 218, 219, 220], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 71, 74, 77, 84, 88, 89, 90, 98, 99, 107, 108, 110, 113, 114, 117, 119, 124, 125, 133, 140, 144, 154, 156, 157, 159, 160, 163, 165, 169, 170, 175, 177, 179, 183, 184, 185, 187, 191, 193, 197, 198, 203, 207, 217, 218, 219, 222, 224], "happen": [6, 75, 80, 114, 166, 181, 191, 203, 218, 219], "reason": [6, 17, 88, 185, 203, 211, 218, 219, 221], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112, 125, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 158, 171, 177, 178, 182, 185, 187, 195, 201, 202, 203, 219, 221, 222, 223, 224], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 75, 77, 81, 88, 100, 107, 114, 163, 170, 187, 196, 202, 203, 217, 219, 221, 222, 224], "rate": [6, 32, 80, 125, 128, 131, 158, 159, 170, 195, 196, 213, 216, 219, 220], "uhfqa": [6, 125], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 73, 74, 75, 83, 88, 93, 94, 95, 96, 97, 109, 110, 116, 117, 118, 119, 120, 125, 134, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 177, 178, 179, 182, 183, 184, 185, 195, 203, 219, 220, 221, 222, 223, 224], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 71, 74, 77, 84, 99, 107, 108, 131, 137, 145, 146, 151, 160, 170, 176, 187, 190, 195, 196, 203, 207, 217, 218, 219, 221, 222, 224], "granular": [6, 55, 125, 131, 160, 170, 196, 209, 213, 216, 217, 218, 222], "some": [6, 17, 18, 53, 118, 133, 144, 176, 177, 179, 183, 184, 185, 197, 198, 203, 217, 218, 219, 224], "mix": [6, 74], "station": [6, 37, 82, 125, 130, 187, 217, 218], "ro": 6, "devic": [6, 70, 222], "vendor": 6, "than": [6, 11, 74, 108, 170, 187, 194, 197, 198, 213, 216, 217], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 77, 84, 99, 170, 210, 213, 216, 217, 222], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 101, 115, 120, 133, 137, 156, 157, 170, 187, 188, 218, 219, 221, 222], "inject_calibr": [6, 217], "partial_calibr": 6, "new": [6, 11, 14, 17, 102, 103, 170, 187, 195, 196, 197, 198, 200, 203, 217, 218, 219], "chang": [6, 17, 18, 63, 114, 159, 165, 187, 194, 207, 219, 221, 222], "after": [6, 63, 74, 88, 90, 92, 94, 96, 97, 114, 127, 158, 166, 193, 194, 195, 207, 217, 218, 222, 224], "initialis": [6, 19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108], "invalid": [6, 7, 211], "affect": [6, 11, 35, 69, 114, 158, 170, 171, 187, 203, 217, 222], "loci": [6, 11, 24, 69, 108, 187, 218, 219, 224], "factoriz": [6, 20, 69, 107, 108, 187, 217], "its": [6, 17, 18, 20, 33, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 76, 77, 78, 79, 85, 111, 112, 130, 136, 159, 160, 170, 171, 180, 181, 187, 196, 197, 198, 201, 203, 217, 218, 219, 221, 224], "wa": [6, 37, 77, 81, 185, 217, 221, 222, 224], "must": [6, 7, 9, 11, 12, 18, 20, 37, 49, 63, 107, 113, 117, 119, 125, 131, 141, 151, 170, 171, 185, 187, 203, 217, 219, 221], "doe": [6, 11, 37, 49, 61, 69, 70, 71, 74, 82, 102, 108, 158, 160, 166, 187, 217, 218, 219, 221, 222, 224], "all": [6, 11, 12, 15, 18, 19, 20, 27, 28, 29, 30, 31, 32, 35, 37, 49, 55, 60, 69, 70, 71, 74, 75, 81, 87, 88, 97, 99, 107, 108, 113, 114, 117, 119, 125, 130, 131, 133, 144, 156, 158, 159, 162, 165, 170, 171, 177, 179, 183, 184, 185, 191, 195, 201, 213, 216, 217, 218, 219, 220, 221, 222, 224], "found": [6, 11, 18, 38, 39, 61, 170, 187], "actual": [6, 7, 20, 37, 55, 69, 71, 74, 134, 135, 145, 146, 177, 179, 180, 181, 182, 183, 184, 185, 195, 213, 216, 217, 219, 222, 224], "previou": [6, 217, 222], "validate_calibr": 6, "check": [6, 13, 125, 213, 216, 217], "match": [6, 7, 63, 151, 170, 171, 213, 215, 216, 217, 224], "someth": [6, 19, 69, 70, 125, 156, 158, 159, 162, 189, 190, 207], "wrong": [6, 189, 190, 217], "get_drive_channel": [6, 224], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 84, 85, 103, 110, 111, 112, 125, 131, 133, 136, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 159, 170, 171, 175, 187, 196, 203, 206, 213, 216, 218, 219, 224], "exist": [6, 18, 61, 102, 103, 170, 217, 218, 219, 224], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 71, 74, 86, 89, 90, 91, 92, 93, 94, 95, 96, 120, 133, 140, 144, 176, 183, 203, 217, 218, 219, 221, 222], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 71, 74, 127, 217, 219], "belong": [6, 69, 71, 74, 217], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 71, 74, 105, 106, 107, 163, 217, 220, 224], "signal": [6, 16, 37, 69, 70, 71, 74, 155, 163, 164, 180, 181, 183, 217, 218, 220, 222, 223], "between": [6, 16, 20, 53, 55, 69, 75, 77, 80, 82, 108, 156, 170, 182, 185, 191, 218, 222], "sourc": [6, 77, 194, 217, 221, 222], "destin": [6, 222], "either": [6, 7, 35, 114, 165, 203, 217, 218, 221], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 89, 90, 98, 170, 171, 194, 217, 218, 219, 221], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 217, 222], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 71, 100, 107, 114, 124, 129, 130, 187, 194, 217, 219, 222, 224], "node": [6, 18, 20, 37, 107, 113, 117, 119], "receiv": [6, 163, 221, 222], "bit": [6, 37, 217, 222], "which": [6, 11, 15, 20, 35, 48, 69, 77, 84, 102, 103, 110, 114, 136, 137, 138, 139, 140, 141, 147, 148, 149, 170, 171, 178, 179, 183, 184, 185, 187, 195, 203, 207, 217, 218, 219, 220, 221, 222, 224], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 111, 112, 114, 118, 124, 125, 131, 133, 136, 137, 140, 141, 144, 151, 170, 177, 179, 183, 184, 185, 200, 205, 217, 218, 219, 220, 221, 224], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 71, 72, 73, 74, 106, 107, 114, 125, 187, 196, 217, 218, 219, 220, 224], "result": [6, 11, 17, 20, 37, 69, 70, 71, 74, 81, 86, 107, 114, 141, 155, 161, 163, 170, 217, 218, 221, 224], "support": [6, 33, 37, 63, 69, 71, 74, 108, 182, 185, 205, 213, 216, 217, 218, 219, 221, 222], "fast": [6, 48, 69, 71, 74, 93, 94, 105, 106, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 163, 217, 220, 223, 224], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 102, 219], "impl_nam": [6, 11, 18, 20, 102, 189, 217, 219], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 111, 112, 125, 187], "request": [6, 7, 11, 18, 20, 55, 100, 126, 128, 217, 218, 224], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 18, 70, 136, 165, 217], "neighbor": [6, 195, 196, 203, 224], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 76, 77, 78, 79, 108, 185, 187, 195, 196, 203, 217, 218, 219, 223, 224], "ad": [6, 11, 17, 18, 37, 69, 71, 74, 81, 102, 103, 107, 113, 117, 119, 124, 170, 191, 195, 196, 217, 218, 219, 224], "separ": [6, 18, 32, 37, 107, 113, 117, 119, 217, 218, 221, 224], "resolut": [6, 203, 224], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 72, 73, 75, 77, 81, 83, 84, 86, 88, 99, 100, 101, 110, 111, 114, 116, 157, 158, 165, 177, 178, 179, 183, 184, 187, 207, 217, 218, 219, 224], "Will": [6, 55, 201], "iter": [6, 9, 11, 12, 20, 63, 82, 108, 131, 170, 171, 187, 200, 203, 224], "wait": [6, 35, 37, 55, 75, 80, 107, 108, 125, 152, 154, 169, 170, 193, 195, 217, 218, 222, 224], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 111, 112, 114, 125, 131, 133, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 177, 179, 180, 181, 182, 183, 184, 185, 191, 194, 195, 196, 197, 198, 200, 203, 213, 216, 217, 218, 219, 222, 224], "round": [6, 55, 125, 131, 217, 222, 224], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 71, 73, 74, 76, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 111, 125, 127, 131, 136, 170, 187, 217, 219], "everi": [6, 20, 158, 213, 216, 217, 219, 224], "guarante": [6, 55, 218], "idl": [6, 108, 166, 170, 217], "cannot": [6, 17, 154, 170, 203, 217, 219, 221, 222], "replac": [6, 11, 20, 102, 103, 154, 166, 217, 221], "dynam": [6, 166, 217], "decoupl": [6, 166, 217], "sequenc": [6, 9, 11, 12, 16, 21, 77, 113, 154, 166, 167, 171, 175, 187, 194, 203, 207, 217, 218, 220, 222, 224], "thei": [6, 11, 18, 19, 20, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 114, 118, 124, 125, 170, 171, 187, 203, 213, 216, 217, 218, 219, 222, 224], "treat": [6, 195, 203, 217, 224], "remain": [6, 191, 194, 207, 221], "align": [6, 218, 222, 224], "time": [6, 11, 20, 37, 53, 55, 69, 70, 75, 77, 80, 85, 99, 108, 112, 114, 125, 127, 131, 137, 138, 139, 141, 147, 148, 149, 154, 159, 163, 169, 170, 171, 180, 181, 185, 191, 194, 195, 197, 198, 203, 217, 218, 219, 220, 224], "dure": [6, 55, 74, 77, 125, 136, 144, 154, 169, 180, 181, 185, 203, 218, 224], "particular": [6, 11, 20, 23, 24, 25, 189, 217, 221, 222, 224], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 107, 108, 110, 111, 112, 114, 163, 166, 187, 203, 218, 219, 221, 222], "thu": [6, 32, 75, 84, 114, 136, 140, 218, 222], "less": [6, 11, 74, 191, 217], "space": [6, 13, 14, 15, 185, 222], "side": [6, 34, 35, 74, 125, 197, 198, 218], "todo": [6, 37, 63, 69, 71, 74, 125, 172], "For": [6, 11, 14, 17, 23, 24, 69, 125, 140, 170, 177, 187, 217, 218, 219, 221, 222, 224], "now": [6, 63, 114, 217], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 71, 74, 77, 81, 108, 124, 137, 141, 160, 170, 187, 195, 196, 200, 203, 216, 218, 219, 221, 222, 224], "benefit": 6, "exa": [6, 20, 181, 205, 217, 219, 220, 224], "sweep": 6, "over": [6, 7, 12, 69, 71, 74, 137, 141, 170, 217], "In": [6, 7, 11, 37, 53, 55, 69, 70, 71, 74, 75, 80, 99, 108, 154, 159, 163, 170, 187, 195, 217, 218, 219, 221, 222, 224], "futur": 6, "gener": [6, 11, 20, 69, 70, 71, 74, 99, 114, 141, 175, 203, 217, 219, 221], "should": [6, 18, 20, 37, 49, 69, 70, 71, 74, 84, 105, 106, 124, 125, 136, 137, 141, 185, 187, 191, 195, 196, 217, 219, 221, 222], "experi": [6, 11, 60, 187, 217], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 108, 110, 111, 112, 114, 115, 119, 120, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 157, 158, 162, 163, 165, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 194, 196, 197, 198, 206, 207, 209, 217, 219], "how": [6, 187, 203, 218, 219, 221, 222, 224], "long": [6, 75, 84, 125, 180, 181, 217, 218, 219], "start": [6, 58, 60, 137, 141, 147, 148, 170, 191, 194, 195, 196, 201, 202, 217, 218, 219, 222], "simultan": [6, 69, 71, 74, 191, 203, 218, 224], "box": [6, 37, 84, 99, 100, 195, 201, 202, 203, 217, 224], "get_implement": [6, 18, 20, 69, 217, 219, 224], "use_priority_ord": 6, "strict_locu": [6, 18], "priority_calibr": [6, 18, 224], "provid": [6, 11, 18, 19, 20, 31, 32, 52, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 141, 187, 213, 216, 217, 218, 219, 220, 221, 224], "an": [6, 7, 11, 13, 14, 16, 18, 19, 20, 29, 34, 48, 53, 61, 63, 69, 71, 75, 83, 84, 85, 87, 89, 99, 102, 103, 110, 111, 112, 114, 115, 118, 120, 124, 125, 126, 133, 156, 158, 160, 170, 171, 175, 185, 187, 195, 197, 200, 203, 207, 210, 211, 217, 218, 219, 220, 221, 222, 224], "mean": [6, 11, 69, 71, 74, 75, 163, 187, 203, 217, 219, 221, 222, 224], "chosen": [6, 119, 136, 218], "automat": [6, 11, 19, 70, 217, 219], "logic": [6, 19, 20, 31, 35, 48, 49, 77, 107, 108, 110, 136, 170, 217, 219, 224], "describ": [6, 11, 12, 20, 136, 137, 141, 153, 187, 203, 218, 221, 224], "below": [6, 20, 145, 146, 217, 218, 221, 222, 224], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 111, 112, 137, 187, 217, 219], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 77, 145, 146, 149, 170, 185, 187, 203, 218, 219, 220, 222, 224], "avail": [6, 18, 20, 218, 219, 221, 222, 224], "effect": [6, 20, 37, 75, 99, 110, 187, 191, 203, 218, 219, 220, 222, 224], "get_default_implementation_for_locu": [6, 187, 217, 219], "otherwis": [6, 18, 20, 49, 69, 71, 74, 80, 107, 125, 170, 171, 182, 217, 219, 221], "first": [6, 11, 13, 34, 35, 37, 49, 69, 71, 74, 137, 140, 141, 170, 185, 187, 219, 222, 224], "prioriti": [6, 7, 187, 217], "follow": [6, 55, 69, 70, 75, 107, 114, 130, 140, 165, 185, 191, 195, 203, 213, 216, 217, 218, 221, 222, 224], "defin": [6, 7, 11, 18, 19, 20, 22, 28, 29, 30, 32, 38, 39, 48, 49, 69, 70, 75, 83, 89, 90, 98, 108, 109, 125, 134, 135, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 176, 177, 185, 187, 189, 190, 201, 203, 217, 218, 219, 220, 221, 224], "defaults_for_locu": [6, 187, 217], "global": [6, 63, 187, 217], "load": [6, 8, 217], "common": [6, 18, 19, 37, 38, 39, 69, 70, 71, 87, 88, 97, 107, 113, 117, 118, 119, 131, 195, 217, 220, 221], "singl": [6, 20, 31, 33, 60, 67, 68, 69, 70, 72, 83, 87, 88, 90, 99, 109, 114, 116, 118, 170, 171, 187, 200, 203, 214, 217, 218, 219, 222, 223, 224], "note": [6, 7, 16, 49, 69, 137, 141, 151, 158, 170, 190, 194, 203, 219, 222], "prevent": [6, 218, 219], "could": [6, 17, 55, 187, 219, 222], "_find_implementation_and_locu": 6, "find": [6, 185, 224], "instanc": [6, 11, 13, 18, 20, 33, 69, 71, 74, 80, 84, 85, 99, 110, 111, 112, 158, 161, 187, 207, 219, 224], "compat": [6, 69, 71, 74, 213, 216, 217], "both": [6, 49, 77, 84, 197, 217, 219, 222, 224], "caller": 6, "highest": [6, 187], "we": [6, 17, 55, 63, 77, 114, 125, 136, 137, 140, 141, 144, 185, 187, 207, 219, 221, 222, 224], "equival": [6, 74, 114, 191, 203, 207, 218, 224], "one": [6, 9, 11, 18, 20, 38, 39, 42, 45, 49, 56, 69, 70, 74, 84, 170, 187, 195, 196, 200, 203, 217, 218, 219, 221, 222, 224], "had": [6, 217], "_get_implement": 6, "built": [6, 11, 118, 217], "when": [6, 11, 17, 18, 20, 35, 37, 55, 69, 71, 74, 75, 108, 133, 144, 170, 172, 177, 179, 183, 184, 185, 195, 196, 203, 210, 211, 212, 217, 218, 219, 222, 224], "later": [6, 11], "needs_calibr": [6, 18, 20], "interact": [6, 49], "nontrivi": 6, "wai": [6, 11, 153, 203, 217, 218, 219, 224], "composit": [6, 17, 18, 37, 38, 39, 107, 113, 117, 119, 201, 202, 203, 217, 218, 219, 224], "yet": [6, 63, 195, 196, 217], "constant": [6, 67, 68, 69, 72, 73, 84, 85, 106, 112, 180, 181, 182, 217, 222], "cc_prx": [6, 107, 217, 219, 222], "prx_composit": 6, "prx": [6, 11, 19, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 109, 113, 114, 117, 119, 187, 207, 217, 218, 219, 222, 223, 224], "drag_crf": [6, 11, 38, 217], "reset": [6, 107, 108, 158, 187, 217, 218, 219, 222], "condit": [6, 37, 38, 39, 107, 156, 163, 213, 216, 217, 219, 221, 222], "meaning": [6, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 111, 112, 187], "rz": [6, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 88, 90, 92, 94, 96, 110, 111, 112, 113, 114, 119, 157, 207, 217], "overrid": [6, 18, 19, 20, 31, 35, 48, 49, 69, 70, 71, 77, 87, 88, 89, 90, 97, 98, 100, 107, 108, 110, 114, 136, 217, 219, 224], "work": [6, 11, 77, 108, 170, 194, 217, 218, 219, 221, 224], "sinc": [6, 32, 49, 77, 114, 185, 187, 217, 219], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 69, 70, 71, 74, 77, 100, 102, 107, 108, 110, 113, 114, 117, 119, 133, 144, 158, 163, 177, 178, 179, 183, 184, 185, 187, 190, 217, 218, 219, 224], "validate_quantum_circuit": [6, 217], "require_measur": [6, 9], "constitut": [6, 9, 221], "least": [6, 9, 20, 55, 125, 131, 137, 141, 195, 196, 213, 216, 218, 219, 221, 224], "circuit_to_timebox": [6, 217], "scheduling_algorithm": [6, 200, 203], "schedulingalgorithm": [6, 199, 200, 203], "hard_boundari": [6, 200, 201, 203], "locus_map": [6, 217], "convert": [6, 11, 20, 88, 119, 125, 133, 144, 154, 169, 177, 179, 183, 184, 185, 193, 203, 217, 218, 219, 220], "resolv": [6, 20, 181, 201, 203, 218, 220], "option": [6, 11, 12, 13, 18, 20, 32, 69, 170, 187, 217, 219, 222], "placehold": [6, 11, 217], "physic": [6, 11, 21, 125, 195, 217, 218, 219], "while": [6, 88, 201, 218, 219, 221, 224], "unresolv": 6, "fail": [6, 210, 212], "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 201, 203, 217], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 108, 111, 112, 118, 119, 125, 127, 133, 134, 135, 140, 143, 144, 145, 146, 147, 148, 151, 156, 158, 175, 177, 178, 179, 180, 182, 183, 184, 185, 194, 200, 203, 207, 219, 220, 221, 224], "temporari": [6, 217], "helper": [6, 20], "playlist": [6, 75, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 208, 212, 213, 216, 217, 220, 222, 224], "front": [6, 170], "pad": [6, 35, 85, 112, 137, 140, 141, 170, 195, 201, 224], "equal": [6, 11, 37, 75, 114, 117, 180, 181, 194, 197, 198, 217, 218, 224], "delai": [6, 37, 67, 68, 69, 70, 73, 107, 153, 160, 217, 218, 222], "befor": [6, 74, 80, 88, 90, 92, 94, 96, 125, 127, 207, 217, 224], "final": [6, 20, 97, 177, 218, 219, 224], "wish": 6, "lose": [6, 217], "coher": [6, 158], "done": [6, 88, 165, 172, 185, 191, 196, 217, 219], "onc": [6, 217, 218, 219], "handl": [6, 19, 32, 55, 70, 107, 124, 125, 131, 195, 198, 207, 217, 219], "better": [6, 20, 125, 203, 217], "remov": [6, 71, 114, 125, 170, 171, 172, 217, 224], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 80, 84, 87, 88, 93, 94, 97, 110, 124, 125, 127, 131, 133, 134, 135, 136, 137, 141, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 194, 195, 200, 203, 209, 217], "far": 6, "By": [6, 18, 20, 37, 48, 49, 69, 70, 71, 77, 100, 107, 113, 114, 117, 119, 133, 144, 177, 179, 183, 184, 185, 207], "occupi": [6, 170, 195, 196, 203, 218], "unnecessari": [6, 37, 195, 217], "pack": [6, 201], "assum": [6, 35, 49, 81, 99, 107, 114, 119, 131, 147, 148, 151, 170, 180, 181, 185, 218, 219, 221, 224], "refer": [6, 7, 88, 118, 124, 165, 217, 219, 220, 224], "ensur": [6, 145, 146, 218, 222, 224], "intend": [6, 77, 108, 187, 218, 219], "properli": 6, "higher": [6, 142, 144, 145, 146, 217, 218, 222], "help": [6, 11, 218, 219, 222], "defend": [6, 221], "crosstalk": [6, 62, 63, 157, 191, 217, 219], "expens": 6, "longer": [6, 108, 217], "more": [6, 19, 55, 133, 154, 187, 203, 217, 218, 221, 222], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 108, 217], "readi": [6, 220], "execut": [6, 34, 35, 124, 159, 167, 170, 187, 191, 217, 218, 219, 220, 221, 222, 224], "sample_r": [6, 125, 126, 127, 128], "_finish_schedul": 6, "fuse": [6, 88, 217], "distanc": [6, 217], "correct": [6, 13, 62, 63, 77, 81, 116, 157, 217, 219, 224], "_fuse_long_distance_virtual_rz": 6, "virtualrz": [6, 77, 80, 81, 114, 152, 217, 218], "next": [6, 194, 218, 219, 222], "fluxpuls": [6, 152], "resolve_timebox": [6, 203, 217, 224], "compute_neighborhood_hard_boundari": 6, "children": [6, 200, 203, 218, 224], "concaten": [6, 203, 218, 224], "strategi": [6, 195, 196, 202, 203], "solid": 6, "rectangl": [6, 224], "longest": [6, 55, 195, 201], "within": [6, 13, 163, 170, 202, 218, 221], "tetri": [6, 154, 201], "tightli": [6, 201], "possibl": [6, 20, 55, 114, 156, 170, 185, 195, 196, 201, 202, 203, 217, 218, 221, 222, 224], "still": [6, 11, 63, 171], "overlap": [6, 154, 160, 169, 195, 218, 224], "regardless": [6, 222], "boundari": [6, 58, 60, 195, 201, 202], "modifi": [6, 7, 11, 170, 171, 194, 195, 196, 197, 198, 207, 217, 219, 221, 224], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 114, 170, 171, 191, 203, 217, 218, 219, 220, 224], "becom": [6, 11, 37, 177, 224], "atom": [6, 20, 200, 201, 203, 218, 219, 224], "isn": 6, "t": [6, 7, 63, 84, 97, 118, 134, 135, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 176, 177, 179, 182, 184, 185, 217, 221], "alreadi": [6, 11, 61, 170, 203, 217, 219], "precomput": [6, 170, 203, 219], "typic": [6, 49, 69, 125, 137, 140, 187, 191, 218, 219, 222, 224], "want": [6, 11, 19, 48, 49, 69, 71, 74, 89, 90, 98, 137, 141, 166, 219], "top": [6, 18, 20, 219], "layer": 6, "would": [6, 11, 17, 49, 80, 217, 219, 222, 224], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 104, 107, 111, 130, 141, 170, 178, 187, 195, 196, 200, 203, 217, 218, 219, 220, 222, 224], "lower": [6, 220], "where": [6, 48, 49, 55, 63, 69, 70, 71, 74, 75, 83, 97, 109, 110, 118, 125, 134, 135, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 160, 170, 177, 179, 182, 184, 185, 187, 195, 198, 217, 218, 219, 221], "improv": [6, 37, 69, 71, 74, 217, 221], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 71, 74, 77, 107, 108, 110, 133, 144, 170, 171, 177, 179, 183, 184, 185, 187, 217, 218, 219, 220, 224], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 20, 60, 163, 219, 224], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 61, 108, 124, 170, 197, 198, 217, 218, 219, 221, 224], "addit": [6, 11, 18, 20, 31, 32, 35, 48, 49, 69, 75, 77, 107, 108, 110, 116, 158, 170, 183, 187, 203, 219, 221, 224], "ideal": [6, 16, 53, 187, 191], "model": [6, 132, 142, 176, 191, 218], "correctli": [6, 17, 217, 219], "frame": [6, 77, 157, 185, 207, 217, 219], "subspac": [6, 75, 187, 191, 218, 219], "connect": [6, 11, 108, 187, 203, 218, 219, 224], "those": [6, 32, 69, 71, 74, 107, 140, 187, 203, 217, 219, 221, 224], "henc": [6, 207], "evolut": 6, "Of": 6, "cours": [6, 53, 219], "realiti": [6, 53], "possibli": [6, 49, 222], "applic": [6, 219, 221], "essenti": [6, 140, 141, 219], "precis": [6, 218], "interest": 6, "howev": [6, 18, 55, 107, 133, 144, 166, 177, 179, 183, 184, 185, 218, 219, 221], "well": [6, 82, 108, 159, 170, 187, 213, 216, 217, 219, 220, 222, 224], "local": [6, 77, 114, 157, 165, 207], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 71, 74, 108, 133, 144, 153, 177, 179, 183, 184, 185, 217, 218, 219, 224], "end": [6, 11, 40, 74, 77, 80, 81, 114, 118, 137, 141, 147, 148, 154, 169, 170, 171, 182, 217, 218, 221, 222], "carri": [6, 218, 221], "meant": [6, 11], "zero": [6, 11, 35, 49, 55, 63, 64, 77, 88, 99, 104, 136, 137, 140, 141, 154, 160, 166, 183, 185, 187, 194, 197, 198, 217, 218], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 77, 125, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 147, 148, 150, 151, 155, 160, 170, 185, 187, 200, 203, 213, 216, 217, 218, 219, 222, 224], "involv": [6, 20, 35, 218, 220, 224], "compress": [6, 218], "duplic": 6, "transfer": [6, 99, 221], "drop": 6, "point": [6, 114, 137, 138, 139, 141, 147, 148, 149, 194, 195, 196, 219], "finalis": 6, "unless": [6, 20, 133, 144, 177, 179, 183, 184, 185, 203, 217, 219, 221, 224], "process": [6, 81, 154, 218, 223], "call": [6, 11, 13, 17, 18, 20, 77, 108, 117, 217, 219, 224], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 20, 31, 37, 49, 84, 175, 217, 218, 219, 220], "shortcut": [6, 11, 217, 224], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 114, 124, 125, 133, 136, 144, 166, 170, 171, 177, 179, 183, 184, 185, 187, 197, 203, 217, 218, 219, 221, 224], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 219], "nativ": [7, 33, 187, 224], "extend": [7, 13, 15, 55, 137, 169, 170, 171, 195, 196, 197, 198, 203], "ones": [7, 34, 35, 201, 203, 219], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 71, 99, 108, 110, 114, 170, 179, 182, 187, 195, 198, 207, 217, 218, 219], "gate_definit": 7, "section": [7, 218, 219, 221, 222, 224], "yaml": [7, 8, 217], "file": [7, 8, 221], "expos": 7, "canon": [7, 52, 103, 217, 219], "being": [7, 49, 99, 137, 187, 217, 219, 222], "redefin": [7, 11, 133, 144, 177, 179, 183, 184, 185], "undefin": [7, 75, 218], "don": [7, 176, 221], "config": [8, 124, 217], "circuitoperationlist": [10, 217], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 18, 40, 83, 99, 107, 108, 114, 116, 118, 160, 185, 203, 217, 218, 219], "mostli": [11, 218], "conveni": [11, 20, 69, 71, 74, 203, 217, 220], "enabl": [11, 55, 77, 84, 180, 181, 217], "easi": [11, 224], "creation": [11, 217, 219], "calcul": [11, 12, 15, 77, 182, 185, 217], "onto": 11, "import": [11, 56, 219, 221, 224], "present": [11, 12, 18, 20, 75, 170, 195], "think": 11, "about": [11, 82, 156, 158, 159, 162, 217, 218, 222, 224], "qiskit": [11, 217], "quantumregist": 11, "most": [11, 219, 220], "simpli": [11, 37, 114, 187, 218], "taken": [11, 217], "you": [11, 18, 69, 70, 77, 166, 187, 217, 220, 221, 224], "good": 11, "practic": [11, 219, 222, 224], "mutabl": [11, 170], "regist": [11, 12, 13, 18, 102, 103, 187, 217, 218, 220, 224], "usabl": [11, 20, 37, 217], "fundament": 11, "popul": [11, 74, 75], "qb1": [11, 69, 187, 219, 224], "qbn": 11, "qb2": [11, 69, 187, 219, 222, 224], "altern": [11, 218, 222], "To": [11, 37, 55, 170, 219, 220, 221, 222, 224], "your": [11, 219, 221], "own": [11, 17, 20, 33, 187, 217, 218, 219, 221], "initi": [11, 32, 33, 136, 144, 177, 185, 217, 218, 219], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 187, 217, 218, 219], "__add__": [11, 69, 71, 74, 217], "__mul__": [11, 217], "__getitem__": [11, 217], "3": [11, 37, 63, 67, 68, 69, 73, 85, 112, 143, 195, 221, 223, 224], "circuit1": [11, 224], "circuit2": [11, 224], "4": [11, 57, 93, 94, 95, 96, 116, 118, 143, 221, 223], "produc": [11, 197, 217, 218, 222, 224], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 83, 84, 88, 99, 100, 101, 107, 109, 114, 115, 117, 118, 120, 157, 187, 206, 207, 217, 219, 224], "abov": [11, 218, 219, 220, 221, 224], "shorten": 11, "exactli": [11, 20, 187, 200], "syntax": [11, 217, 218, 219, 221, 224], "usual": [11, 17, 55, 161, 185, 218, 219, 222, 224], "attach": [11, 221], "init": [11, 217, 219], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 76, 77, 78, 79, 85, 111, 112, 187, 219], "unitari": [11, 12, 13, 15, 40, 58, 60, 75, 101, 104, 115, 120, 187, 217, 218, 219], "propag": [11, 15, 58, 60, 107, 217, 222], "entir": [11, 13, 125, 217], "u": [11, 57, 119, 217], "get_unitari": 11, "dimens": [11, 137, 140], "alwai": [11, 20, 34, 35, 37, 77, 145, 146, 187, 191, 195, 197, 219], "qb3": [11, 69, 187, 222, 224], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 118, 137, 187, 217, 219], "correspond": [11, 13, 18, 37, 53, 57, 58, 59, 60, 63, 107, 113, 117, 119, 133, 136, 137, 140, 156, 187, 195, 203, 218, 222], "three": [11, 84], "big": [11, 12, 13, 187], "endian": [11, 12, 13, 187], "convent": [11, 12, 77, 130], "With": [11, 19, 69, 70, 71, 74, 222], "action": [11, 12, 187, 218], "ident": [11, 15, 53, 59, 99, 217], "physical_circuit": 11, "map_loci": [11, 217], "physical_qubit": 11, "exampl": [11, 14, 17, 77, 125, 136, 187, 217, 218, 219, 221, 224], "alic": 11, "zzz": 11, "qb5": [11, 187], "qb10": 11, "occurr": 11, "mani": [11, 217, 219, 224], "run": [11, 140, 217, 222], "parallel": [11, 187, 217], "larg": [11, 137, 141, 218], "left": [11, 20, 31, 35, 48, 49, 69, 70, 71, 108, 110, 114, 197, 198, 218, 219, 222], "ignor": [11, 37, 136, 217], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 125, 134, 135, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 151, 177, 185, 217], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 73, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 177, 179, 180, 181, 182, 183, 184, 185, 217, 219], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 73, 93, 94, 95, 96, 101, 115, 120, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 179, 180, 181, 182, 183, 184, 185, 187, 217, 219], "locus_indic": 11, "append": [11, 35, 69, 170, 171, 217], "store": [11, 13, 17, 20, 48, 49, 69, 70, 71, 100, 107, 114, 140, 157, 187, 219], "select": [11, 15, 222, 224], "indic": [11, 15, 80, 136, 137, 140, 175, 218, 221], "qb4": [11, 222], "param": [11, 13, 20, 187, 217, 219], "barrier": [11, 12, 187, 219], "compos": [11, 191, 220], "safer": 11, "togeth": [11, 37, 48, 69, 71, 74, 80, 195, 203, 217, 218, 219, 224], "probabl": 11, "wire": 11, "k": [11, 14, 137, 145, 146, 147, 148, 149, 150, 151, 185, 217], "achiev": [11, 219], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 180, 181, 203], "make_circuit": [11, 217], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 73, 150, 151, 164, 170, 185, 195, 201, 213, 215, 216, 217], "total": [11, 81, 171, 191, 224], "across": [11, 141, 145, 146], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 71, 74, 217, 219, 221], "skip": [12, 170], "product": [12, 140, 218, 221], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 71, 108, 110, 114, 218, 219, 224], "fetch": 13, "Then": [13, 203, 219], "hilbert": [13, 15], "whole": [13, 63, 218, 221], "perm": 14, "permut": [14, 217], "state": [14, 40, 53, 74, 75, 77, 83, 88, 104, 107, 108, 114, 116, 118, 187, 207, 218, 219, 221, 222], "vector": [14, 137, 217], "index": [14, 63, 124, 171, 194, 217, 218, 220], "th": [14, 137, 185], "old": 14, "kron": [14, 187], "c": [14, 182, 203, 221], "n_qubit": 15, "larger": [15, 170, 218], "system": [15, 20, 217, 221, 222, 224], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 108, 111, 112, 114], "hash": 15, "purpos": [15, 20, 69, 71, 74, 217, 219, 221], "rang": [15, 136, 137, 141, 147, 148, 177, 203, 217], "abstract": [16, 100, 187, 218, 219, 220], "conceptu": [16, 218], "wherea": [16, 69, 154, 187, 218, 219], "concret": [16, 187, 218, 219, 220, 224], "One": [16, 20, 100, 218], "approxim": [16, 137, 141], "abc": [16, 20, 34, 36, 40, 53, 62, 66, 75, 83, 100, 104, 109, 116, 118], "customiqwaveform": [16, 66, 69, 70, 71, 83, 87, 88, 219], "singlepulseg": [16, 83, 99, 217], "compositecach": 16, "gate_implement": [17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 75, 83, 104, 109, 116, 118], "__call__": [17, 20, 31, 35, 48, 49, 69, 71, 74, 77, 107, 108, 110, 217, 219], "normal": [17, 20, 37, 63, 145, 146, 149, 185, 187, 206, 217, 219, 221], "_timebox_cach": [17, 20], "trust": 17, "itself": [17, 18, 77, 108, 217, 219, 222], "member": [17, 18, 37, 38, 39, 58, 60, 107, 113, 117, 119, 217, 219], "consist": [17, 48, 49, 84, 88, 99, 110, 133, 144, 170, 177, 179, 183, 184, 185, 187, 217, 219, 221], "deduc": 17, "locat": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 219], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 71, 74, 105, 106, 107, 113, 117, 119, 217, 218, 219], "identifi": [17, 20, 37, 125, 153, 170, 219, 221], "cast": 17, "extra": [17, 37, 77, 88, 219], "string": [17, 63, 67, 68, 69, 73, 163, 175], "id": [17, 20], "further": [17, 183, 185, 203], "did": [17, 217], "come": [17, 219, 224], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 217, 219], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 219], "term": [18, 133, 134, 135, 138, 139, 143, 144, 145, 147, 148, 149, 151, 177, 179, 183, 184, 185, 187, 218, 219, 220, 221], "pre": [18, 136, 143, 144, 145, 146, 185], "_call": [18, 20, 31, 35, 37, 48, 49, 55, 69, 70, 71, 74, 77, 84, 88, 99, 100, 107, 108, 110, 114, 117, 119, 217, 219], "code": [18, 217, 219, 221, 222], "subclass": [18, 20, 31, 33, 35, 48, 49, 69, 70, 71, 108, 110, 114, 133, 144, 177, 179, 183, 184, 185, 187, 217, 219], "declar": 18, "abl": [18, 131, 217], "verifi": [18, 217], "registered_g": [18, 37, 107, 113, 117, 119, 217, 219], "possib": 18, "customizable_g": [18, 37, 107, 113, 117, 119], "custom": [18, 19, 20, 69, 70, 71, 217, 218, 220], "tell": 18, "oilcalibrationdata": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 189, 219], "There": [18, 37, 88, 107, 113, 117, 119, 219, 222, 224], "These": [18, 20, 37, 107, 113, 117, 119, 195, 196, 203, 217, 218, 219, 224], "ocalibrationdata": [18, 37, 107, 113, 117, 119], "under": [18, 20, 37, 102, 107, 113, 117, 119, 191, 203, 221], "subset": [18, 20, 37, 58, 107, 113, 117, 119], "customiz": [18, 37, 107, 113, 117, 119], "default_implement": [18, 38, 39, 187], "design": [18, 38, 39, 217, 221], "fill": [18, 38, 39, 218], "classmethod": [18, 20, 31, 48, 49, 63, 69, 70, 71, 84, 87, 88, 89, 90, 97, 98, 100, 107, 108, 110, 114, 217], "optional_calibration_kei": [18, 20], "item": [18, 20, 170], "level": [18, 20, 81, 82, 187, 218, 219, 220, 222, 224], "construct": [18, 20, 33, 69, 84, 85, 99, 110, 111, 112, 133, 144, 177, 179, 183, 184, 185, 217, 218, 220, 224], "sought": 18, "deprec": [18, 217], "waveform": [19, 20, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 110, 124, 132, 133, 134, 135, 136, 142, 144, 145, 146, 157, 158, 159, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 213, 215, 216, 217, 218, 220], "iqpuls": [19, 31, 48, 69, 70, 71, 84, 87, 88, 89, 90, 97, 98, 99, 110, 114, 152, 155, 160, 163, 165, 207, 215, 217, 218, 219], "info": [19, 20, 217, 219], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 110, 133, 135, 139, 146, 148, 158, 217, 219, 223, 224], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 72, 73, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 158, 219], "wave_q": [19, 67, 68, 72, 73, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 158, 219], "dependent_wav": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "consid": [19, 55, 64, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 140, 194, 197, 198, 217, 219, 224], "share": [19, 32, 49, 67, 68, 69, 70, 71, 72, 73, 74, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 221, 224], "drag": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 217, 219], "root_paramet": [19, 49, 69, 70, 71, 77, 87, 88, 97], "independ": [19, 69, 70, 71, 87, 88, 97, 170, 171, 187, 218, 222], "excluded_paramet": [19, 48, 49, 89, 90, 98], "exclud": [19, 48, 49, 89, 90, 98, 221], "__init__": [20, 217, 219], "via": [20, 63, 88, 107, 108, 119, 149, 182, 185, 217, 219], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 76, 77, 78, 79, 83, 84, 88, 99, 100, 101, 109, 114, 115, 116, 118, 120, 207, 217, 219, 224], "input": [20, 37, 69, 71, 74, 97, 218, 219], "reimplement": [20, 31, 35, 48, 49, 69, 70, 71, 108, 110, 114, 219], "without": [20, 37, 71, 137, 140, 141, 164, 169, 203, 217, 218, 219, 221, 224], "even": [20, 70, 147, 195, 196, 217, 219, 221], "though": [20, 70, 217, 218, 219], "avoid": [20, 136, 137, 217], "unpredict": 20, "raw": [20, 155, 163, 164, 175, 222], "access": [20, 219, 224], "special_implement": [20, 217], "special": [20, 49, 80, 86, 99, 176, 187, 217, 219, 221, 224], "never": [20, 217, 219], "explicitli": [20, 69, 71, 74, 217, 219, 221, 224], "uniqu": [20, 124, 187, 218, 219], "sub_implement": 20, "sub": [20, 224], "len": [20, 69, 71, 74, 137, 140, 151], "At": [20, 77, 137, 141, 219], "qualified_nam": 20, "qualifi": 20, "f": [20, 37, 63, 69, 70, 71, 74, 137, 177, 179, 182, 184, 185, 187, 217, 219], "may_have_calibr": 20, "kwarg": [20, 31, 35, 48, 49, 69, 77, 84, 89, 90, 98, 107, 108, 110], "signatur": [20, 31, 35, 48, 49, 77, 107, 108, 110, 187, 217, 219], "suffici": [20, 31, 35, 48, 49, 77, 107, 108, 110, 125, 185], "insid": [20, 31, 35, 37, 48, 49, 77, 88, 107, 108, 110, 177, 194, 203, 217, 218], "construct_factoriz": 20, "to_timebox": 20, "wrap": [20, 224], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 71, 108, 110, 114, 170], "unimpl": [20, 31, 35, 48, 49, 69, 70, 71, 108, 110, 114], "make": [20, 31, 35, 48, 49, 69, 70, 71, 77, 108, 110, 114, 159, 166, 170, 171, 187, 191, 194, 217, 219, 221, 224], "sens": [20, 31, 35, 48, 49, 69, 70, 71, 108, 110, 114], "convert_calibration_data": 20, "channel_prop": 20, "_top_level": 20, "frequenc": [20, 48, 67, 68, 69, 70, 71, 72, 73, 77, 86, 97, 98, 110, 126, 127, 133, 136, 137, 140, 141, 143, 144, 145, 147, 148, 150, 151, 158, 177, 179, 183, 184, 185, 217, 219], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 86, 93, 94, 95, 96, 97, 98, 111, 125, 126, 128, 133, 136, 137, 140, 141, 144, 151, 177, 179, 183, 184, 185, 219], "parameter": 20, "treatment": 20, "n_sampl": [20, 32, 84, 87, 88, 97, 110, 133, 134, 135, 136, 144, 145, 146, 177, 178, 179, 180, 181, 182, 183, 184, 185], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 108, 111, 112], "cl": 20, "specifi": [20, 31, 37, 133, 159, 201, 219, 222, 224], "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 170, 221], "dot": 20, "root": [20, 58], "settingnod": [20, 129, 130], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 71, 100, 107, 114, 219], "operation_nam": [20, 48, 49, 69, 70, 71, 100, 107, 114], "implementation_nam": [20, 48, 49, 69, 70, 71, 100, 107, 114], "behaviour": [20, 48, 49, 69, 70, 71, 100, 107, 114, 217, 219], "get_custom_locus_map": [20, 63, 108, 217, 219], "component_to_channel": [20, 63, 108, 130], "wrt": 20, "know": [20, 219], "often": [20, 217, 219], "set_locus_map": 20, "frozenset": [20, 63, 108, 219], "matter": [21, 77, 219], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 73, 76, 78, 79, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 111, 112, 188, 217], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 71, 74, 77, 84, 110, 158, 160, 161, 162, 200, 217, 218, 219, 224], "_get_puls": [31, 87, 88, 89, 90, 97, 98, 217], "_get_pulse_channel": 31, "basic": [31, 171, 217, 219], "insert": [31, 80, 217], "overridden": [31, 187, 219], "wave": [32, 157, 158, 162, 179, 184], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 108, 111, 112, 153, 155, 163, 164, 200, 203, 217, 218, 219], "format": [32, 217, 221], "been": [33, 37, 108, 203, 217, 218, 221, 222], "sever": [33, 154, 187, 217, 219, 222, 224], "scheme": [33, 218], "likewis": 33, "sometim": [33, 218], "metaoper": [34, 35, 187, 219], "forc": [34, 53, 125, 131], "tempor": [34, 35], "qudit": [35, 187], "metainstruct": 35, "caus": [35, 37, 55, 63, 217, 221, 222], "turn": [35, 217], "impos": 35, "relat": [35, 81, 217, 222, 224], "classic": [36, 37, 217, 222], "ccprx_composit": [36, 38, 39, 217, 222], "ccprx_composite_dragcosinerisefal": [36, 217], "ccprx_composite_draggaussian": [36, 217], "discrimin": [37, 74], "obtain": [37, 99, 133, 137, 218, 221, 223], "segment": [37, 84, 108, 163, 165, 168, 170, 175, 194, 195, 196, 217, 218, 222], "activ": [37, 161, 218], "underneath": 37, "control_delai": [37, 222], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112, 133, 138, 139, 144, 147, 148, 149, 151, 158, 170, 177, 179, 183, 184, 185, 218, 219, 222], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112, 205, 217], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112, 205], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112], "instrument": [37, 114, 125, 128, 136, 152, 168, 222], "drive_control": [37, 129], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 71, 74, 217], "conditionalinstruct": [37, 69, 71, 74, 152, 163, 222], "until": [37, 114, 218], "enough": [37, 222], "arriv": [37, 222], "place": [37, 170, 181, 183, 195, 196, 221], "sequenti": 37, "care": [37, 224], "yourself": [37, 220], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 86, 88, 90, 92, 94, 96, 101, 111, 115, 207], "multipl": [37, 69, 71, 74, 108, 125, 131, 133, 144, 149, 156, 160, 163, 177, 179, 183, 184, 185, 217, 218], "__": [37, 63, 69, 70, 71, 74, 217], "current": [37, 69, 71, 74, 77, 194], "hw": [37, 69, 71, 74, 217], "per": [37, 69, 71, 74, 187, 217], "listen": [37, 217], "user": [37, 63, 69, 71, 74, 136, 185, 203, 217, 218, 219, 222, 224], "drag_gaussian": [39, 217, 224], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 76, 77, 78, 79, 88, 109, 114, 116, 118, 120, 207, 217, 219], "flip": [40, 217], "rel": [40, 77, 133, 144, 151, 158, 177, 179, 183, 184, 185, 217, 218, 219, 224], "11": [40, 223], "text": [40, 75, 88, 182, 185, 221], "begin": [40, 77, 80, 118, 153, 160, 171, 182, 194, 197, 198, 217, 222, 224], "pmatrix": [40, 118], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 75, 77, 219], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 217], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 217], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cz": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 75, 77, 114, 187, 217, 218, 219, 223, 224], "cosinerisefal": [41, 42, 46, 50, 51, 76, 78, 79, 89, 90, 98, 183], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 76, 77, 78, 79, 219], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 111, 133, 136, 144, 177, 179, 181, 183, 184, 185, 217, 219], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 111, 112], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 76, 78, 79, 89, 90, 91, 92, 93, 94, 95, 96, 98, 111, 133, 134, 135, 144, 145, 146, 182, 183, 185, 219], "crf": [41, 42, 45, 46, 50, 51, 76, 78, 79, 89, 90, 98], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 73, 76, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 111], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 76, 78, 79, 89, 90, 91, 92, 93, 94, 95, 96, 98, 111, 133, 134, 135, 136, 144, 145, 146, 182, 183, 185], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 76, 78, 79, 85, 89, 90, 98, 111, 112, 181, 182, 183], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 76, 77, 78, 79, 219], "cosin": [42, 45, 85, 86, 98, 111, 112, 133, 134, 135, 138, 139, 140, 141, 143, 147, 148, 149, 150, 176, 177, 180, 181, 183, 184, 185, 217], "rise": [42, 45, 84, 85, 98, 111, 112, 180, 181, 182, 183, 217], "fall": [42, 45, 84, 85, 98, 111, 112, 180, 182, 183, 187, 217], "ac": [42, 45, 48, 84, 85, 110, 111, 112, 217], "stark": [42, 45, 48, 84, 85, 110, 111, 112, 217], "first_qubit": [42, 45], "mcrf": [42, 45, 111], "modulation_frequ": [42, 45, 111, 158, 183], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 111, 176], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 78, 176, 217], "coupling_strength_norm": [44, 45, 46, 78, 185], "frequency_initial_norm": [44, 45, 46, 78, 185], "frequency_to_minimize_norm": [44, 45, 46, 78, 185], "lambda_1": [44, 45, 46, 78, 185], "lambda_2": [44, 45, 46, 78, 185], "squid_asymmetri": [44, 45, 46, 78, 185], "truncatedgaussiansmoothedsquar": [47, 51, 79, 183], "tgss": [47, 51, 79], "analog": 48, "tune": [48, 132, 133, 134, 135], "_ac_stark_puls": [48, 110], "phase_incr": [48, 110, 111, 114, 158, 165], "quadratur": [48, 110, 158], "pi": [48, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 110, 116, 117, 118, 134, 135, 137, 138, 139, 140, 145, 146, 149, 150, 177, 178, 179, 182, 184, 206, 217, 219, 222, 224], "discret": 49, "mediat": [49, 75], "coupl": [49, 185], "tunabl": [49, 223], "arbitrari": [49, 70, 97, 98, 114, 118, 160, 207, 217, 222, 224], "assign": [49, 69, 70, 71, 74, 124, 217], "slot": 49, "move": [49, 76, 77, 78, 79, 80, 194, 217, 224], "flux_puls": 49, "radian": [49, 83, 84, 99, 100, 109, 114, 118, 158, 165, 179, 184, 206], "maximum": [54, 64, 108, 145, 146, 170, 185, 195], "up": [55, 69, 71, 74, 77, 81, 125, 131, 145, 146, 170, 185, 195, 217, 219], "hardwar": [55, 165, 187, 213, 216, 218, 219, 220, 222], "again": 55, "much": [55, 70, 218], "why": [55, 219], "10": [55, 64, 75, 220, 223], "except": [55, 69, 71, 88, 208, 210, 211, 212, 217, 218, 219, 221], "enumer": [56, 58, 60], "xygat": [56, 59, 100], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 223], "j": [57, 59, 63, 137, 223], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 219], "enum": [58, 60, 199, 201, 202], "qualnam": [58, 60, 201, 202], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 118, 119, 120], "clifford": [60, 100], "axi": [60, 83, 116, 118, 207, 217, 219], "xy": [60, 83, 100], "plane": [60, 83, 116], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 102, 103], "error": [61, 137, 141, 185, 189, 203, 210, 211, 212, 217, 218, 224], "fluxmultiplexer_samplelinear": [62, 217], "flux_multiplex": 63, "linear": [63, 99, 177, 178], "multiplex": [63, 69, 71, 74, 107, 200, 217], "cross": [63, 221, 224], "talk": [63, 224], "element": [63, 133, 137, 141, 203, 217, 218, 224], "c_ij": 63, "aris": [63, 221], "a_i": [63, 97], "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 137], "spars": 63, "form": [63, 185, 217, 218, 219, 221], "xarrai": 63, "matrix_index": 63, "relev": 63, "flat": [63, 130], "np": [63, 187, 219, 222, 224], "matrix_el": 63, "experiment": 63, "r": [63, 116, 182, 223], "d": [63, 137, 177, 203, 221, 223], "everyth": [63, 224], "here": [63, 88, 151, 176, 185, 219, 222, 224], "subject": [63, 218, 221], "1e": [64, 172, 197, 198], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 72, 107, 114], "basi": [66, 67, 68, 72, 107, 114, 118, 133, 136, 137, 140, 141, 143, 145, 146, 147, 148, 149, 150, 187, 221], "measure_customwaveform": [66, 67, 68, 70, 74, 219], "measure_const": [66, 217], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 71, 217], "probepulse_customwaveforms_nointegr": [66, 72, 217], "probe_const": 66, "shelved_measure_customwaveform": [66, 73, 217], "shelved_measure_const": [66, 217], "dispers": [67, 68, 69, 72, 74], "acquisition_delai": [67, 68, 69, 70, 73], "acquisit": [67, 68, 69, 70, 71, 73, 74, 153, 161, 217, 222], "acquisition_typ": [67, 68, 69, 73], "threshold": [67, 68, 69, 71, 73, 74, 163], "amplitude_i": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 112, 219], "amplitude_q": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 112, 219], "integration_length": [67, 68, 69, 70, 73, 217], "integr": [67, 68, 69, 70, 71, 73, 127, 155, 163, 164, 185, 217, 222], "integration_threshold": [67, 68, 69, 73], "integration_weights_i": [67, 68, 69, 73], "weight": [67, 68, 69, 70, 73, 93, 94, 133, 134, 135, 137, 141, 155, 163, 217], "dtype": [67, 68, 69, 73, 134, 135, 145, 146, 177, 179, 180, 181, 182, 183, 184, 185, 219], "float64": [67, 68, 69, 73], "integration_weights_q": [67, 68, 69, 73], "demolit": 68, "intermedi": [69, 219], "IF": 69, "center": [69, 127, 136, 137, 151, 182, 183, 185], "offset": [69, 160, 182, 185], "readouttrigg": [69, 70, 71, 74, 152, 163, 200, 218, 220], "_multiplexed_timebox": [69, 71], "multiplexedprobetimebox": [69, 71, 74, 199, 217], "probe_timebox": [69, 71, 74], "_time_trac": 69, "time_trac": [69, 70, 153], "_build_instruct": [69, 70, 71], "waveform_param": [69, 70, 71], "root_param": [69, 70, 71], "if_freq": [69, 71], "acquisitionmethod": [69, 70, 152, 155, 161, 164], "do_acquisit": [69, 71, 74], "nake": [69, 71, 74], "trigger": [69, 70, 71, 74, 161, 170, 200, 217, 222], "goe": [69, 71, 74], "maintain": [69, 71, 74], "backward": [69, 71, 74], "rout": [69, 71, 74, 163], "probelin": [69, 71, 74, 218, 222], "behav": [69, 71, 74, 154, 166], "featur": [69, 71, 74, 219, 220], "mode": [69, 71, 74], "pick": [69, 71, 74], "anywher": [69, 71, 74, 163, 217], "pass": [69, 71, 74, 80, 81, 82, 217, 222], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "due": [70, 75, 77, 110, 157, 181, 218], "limit": [70, 84, 117, 213, 216, 217, 221, 224], "contrari": 70, "probl": 70, "similar": [71, 124, 217, 219], "shelv": [73, 74, 217], "surround": 73, "prx_12": [73, 74, 217], "standard": [74, 130, 224], "swap": [74, 75], "back": [74, 77, 187, 194], "roughtli": 74, "collaps": 74, "advantag": 74, "suscept": 74, "t_1": 74, "decai": 74, "_skip_overrid": 74, "exchang": 75, "invari": 75, "span": 75, "00": [75, 143], "rangl": [75, 104], "01": [75, 143], "anyth": [75, 219], "orthogon": [75, 219], "involut": 75, "_": [75, 141, 145, 150, 151], "i_": 75, "langl": 75, "complex": [75, 93, 94, 95, 96, 155, 219, 222, 224], "degre": [75, 116], "freedom": [75, 222], "continuum": 75, "cancel": [75, 217], "movemark": [75, 77, 217], "move_customwaveform": [75, 76, 78, 79, 81, 217], "move_crf_crf": [75, 217], "move_slepian_crf": [75, 217], "move_tgss_crf": 75, "detun": [76, 77, 78, 79, 80, 81, 217], "bookkeep": 77, "unknown": [77, 187, 211], "pair": [77, 160, 180, 181, 187, 219], "came": 77, "sandwich": [77, 81, 82, 217], "annot": [77, 80, 221], "mark": [77, 221], "counteract": 77, "accumul": 77, "proport": 77, "sum": [77, 81, 133, 144, 160, 171, 177, 179, 183, 184, 185, 203, 224], "complet": [77, 218], "apply_move_gate_phase_correct": [77, 217], "track": [77, 171, 195, 217, 221, 224], "right": [80, 217, 218, 221, 222, 224], "link": [80, 176, 217, 221], "noth": [80, 168, 170, 191, 193, 197, 198, 219, 221], "explicit": [80, 217, 218], "aforement": [80, 171, 195, 219], "marker": 80, "post": [80, 136, 144], "compil": [80, 82, 125, 154, 220, 221, 224], "apply_detuning_correct": 81, "validate_prx": 82, "prepar": [82, 221], "conform": 82, "constraint": [82, 160, 218, 222], "unmodifi": 82, "x": [83, 84, 88, 90, 99, 100, 116, 118, 184, 217, 219, 223], "r_": [83, 88, 114], "phi": [83, 88, 109, 114, 118, 119, 120, 179, 184, 207, 217], "theta": [83, 88, 114, 118, 119, 120, 185, 207, 217], "co": [83, 97, 118, 134, 137, 138, 140, 145, 146, 149, 150, 177, 179, 184, 217], "y": [83, 100, 116, 118, 120, 217], "sin": [83, 97, 118, 135, 139, 182], "r_z": [83, 88, 109, 114, 118, 119], "r_x": 83, "dagger": 83, "around": [83, 116, 118, 137, 183, 207], "li": 83, "bloch": [83, 118, 219], "sphere": [83, 118, 219], "prxgateimplement": [83, 84, 99, 109], "prx_singlepulse_gateimplement": [83, 87, 88, 217], "prx_customwaveform": [83, 86, 89, 91, 93, 95, 97, 217, 219], "prx_draggaussian": 83, "prx_dragcosinerisefal": 83, "prx_customwaveformssx": [83, 90, 92, 94, 96, 217], "prx_draggaussiansx": [83, 217], "prx_dragcosinerisefallsx": [83, 217], "prx_fastdragsx": [83, 217], "prx_fastdrag": [83, 217], "prx_hddragsx": [83, 217], "prx_hddrag": [83, 217], "prx_cosin": [83, 217], "abc_constant_smooth": [83, 85, 109], "constant_prx_with_smooth_rise_fal": [83, 109, 112, 217], "prx_modulatedcustomwaveform": [83, 98, 217], "prx_modulateddragcosinerisefal": [83, 217], "arbitrarili": [84, 180, 181, 217], "smooth": [84, 180, 181], "rise_waveform": [84, 85, 112], "main_waveform": [84, 85, 112], "fall_waveform": [84, 85, 112], "middl": [84, 183], "memori": [84, 217, 218], "doesn": [84, 217], "_main_puls": 84, "main": [84, 218, 219], "_rise_puls": 84, "_fall_puls": 84, "cosinefal": [85, 112, 176], "cosineris": [85, 112, 176], "sideband": 86, "iq": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 125, 126, 133, 144, 155, 160, 163, 164, 207, 213, 216, 217], "hot": [87, 88, 97], "swappabl": [87, 88, 97], "rest_of_calibration_data": [87, 88, 97], "x_pi": [87, 89, 217], "sx": [88, 94, 96, 117, 217], "manipul": [88, 219], "formula": 88, "rz_after": [88, 90, 92, 94, 96], "rz_befor": [88, 90, 92, 94, 96, 217], "sqrt": [88, 90, 116, 217], "cosinerisefallderiv": [89, 90, 98, 176], "vz": [90, 92, 94, 96], "prx_customwaveformsvz": [90, 92], "truncatedgaussian": [91, 92, 219], "tg": [91, 92], "truncatedgaussianderiv": [91, 92, 219], "gaussian": [92, 219], "scale": [93, 95, 99, 136, 137, 157, 158, 162, 218, 219], "fdi": [93, 94], "coeffici": [93, 94, 95, 96, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 184, 185], "compute_coefs_from_frequ": [93, 94, 95, 96, 133, 134, 135, 136, 144, 145, 146], "boolean": [93, 94, 95, 96, 136, 163], "number_of_cos_term": [93, 94, 133, 134, 135], "5": [93, 94, 137, 143, 177, 219, 221, 223, 224], "suppressed_frequ": [93, 94, 95, 96, 133, 134, 135, 136, 144, 145, 146], "suppressed_interval_width": [93, 94, 133, 134, 135], "fastdragi": [93, 94, 132, 217], "fastdragq": [93, 94, 132, 217], "hd": [95, 96, 136, 142, 144, 145, 146, 147, 148, 149, 151, 217], "hdi": [95, 96], "hddragi": [95, 96, 142, 217], "hddragq": [95, 96, 142, 217], "baseband": 97, "shape": [97, 133, 134, 135, 140, 145, 146, 162, 177, 179, 180, 181, 182, 183, 184, 185, 220], "delta": 97, "omega_i": 97, "omega_d": 97, "a_q": 97, "omega_q": 97, "omega": [97, 177], "band": [97, 98], "static": [99, 133, 136, 144, 177, 179, 183, 184, 185, 200, 203, 217], "_single_iq_puls": [99, 217], "resonantli": 99, "x_": 99, "linearli": [99, 219], "adjust": [99, 207, 217, 218, 222], "rx": [100, 217, 222, 224], "ry": [100, 217, 224], "xy_gat": 100, "2x2": [101, 115, 120], "impl_class": [102, 219], "set_as_default": 102, "reset_condit": [104, 222], "reset_wait": [104, 217], "__default_feedback": 105, "doubl": [105, 106], "underscor": [105, 106], "emphas": [105, 106], "fact": [105, 106], "manual": [105, 106, 179, 219], "__reset": 106, "necessari": [107, 191, 218, 219, 224], "accommod": 107, "upon": 107, "relax": [108, 217], "compar": [108, 163, 170, 217], "shot": [108, 218], "destroi": 108, "wait_box": 108, "besid": 108, "rz_virtual": 109, "rz_acstarkshift": [109, 111], "rz_acstarkshift_cosinerisefal": 109, "rz_acstarkshift_smoothconst": [109, 217], "rz_prx_composit": [109, 217], "strong": 110, "off": [110, 217], "lead": [110, 217], "shift": [110, 157], "ac_stark_puls": 110, "ac_stark_waveform": 111, "increment": [111, 114, 158, 165, 207, 217], "techniqu": [114, 119], "oscil": [114, 158, 165, 207], "shortest": 114, "algebra": [114, 165], "commut": [114, 207], "toward": 114, "hit": 114, "elimin": 114, "multi": 114, "hold": [114, 221], "diagon": 114, "immedi": [114, 191, 217], "conjug": 114, "alpha": [114, 177, 178], "accomplish": 114, "assumpt": [114, 185], "negat": 114, "sigma": [116, 219, 223], "_x": 116, "xz": 116, "90": [116, 223], "sxgate": [116, 217], "parametr": [118, 185, 219, 223], "euler": [118, 119], "lambda": [118, 119, 217, 219], "subsequ": [118, 221], "r_y": [118, 119], "express": [118, 133, 185, 221], "h": [118, 137], "8": [118, 143, 221], "http": [118, 221], "openqasm": 118, "com": 118, "languag": [118, 218, 221], "html": [118, 175, 217], "ugat": [118, 217], "lam": [119, 120], "decomposit": 119, "cdot": 119, "probechannelproperti": 122, "channelconfigur": [122, 128], "realchannelconfig": [122, 124, 126], "iqchannelconfig": 122, "channeldescript": [122, 213, 214], "instruction_t": 124, "waveform_t": 124, "add_instruct": 124, "integ": [124, 125, 156, 203, 224], "manner": 124, "instruction_duration_granular": [125, 127], "instruction_duration_min": [125, 127, 131], "compatible_instruct": [125, 127, 209], "is_iq": [125, 127], "is_virtu": [125, 127], "blocks_compon": [125, 127], "zi": 125, "hdawg": 125, "shfsg": 125, "shfqa": 125, "32": [125, 218], "16": [125, 170, 218, 223], "hack": 125, "frontend": 125, "sent": [125, 217, 218, 221], "might": [125, 218, 219, 222, 224], "duration_to_sampl": 125, "duration_to_second": 125, "duration_to_int_sampl": 125, "messag": [125, 189, 203], "check_min_sampl": 125, "close": [125, 217, 224], "test": [125, 217], "output": [125, 154, 166, 175, 187, 217, 218, 222, 224], "unaccept": 125, "round_duration_to_granular": 125, "round_up": [125, 131], "force_min_dur": [125, 131], "closest": [125, 131], "upconvers": [126, 158, 165], "center_frequ": 127, "integration_start_dead_tim": 127, "integration_stop_dead_tim": 127, "dead": 127, "real": [128, 158, 162, 163, 185, 218], "flux_control": 129, "readout_control": 129, "intern": [129, 217, 218, 224], "channel_properti": [130, 170, 196], "largest": 131, "fourier": [132, 133, 134, 135, 137, 140, 141, 185], "ansatz": [132, 133, 134, 135], "spectrum": [132, 133, 134, 135, 136, 141], "suppressedpuls": [132, 133, 142, 144], "fastdrag": [132, 134, 135], "fast_drag": [133, 134, 135, 136, 142], "envelop": [133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 149, 150, 158, 217, 223], "domain": [133, 141], "suppress": [133, 136, 137, 141, 143, 144, 145, 147, 148, 150, 151], "interv": [133, 134, 135, 136, 137, 138, 139, 140, 141, 149, 150, 160, 218, 219], "accord": [133, 141, 145, 146, 203, 224], "furthermor": 133, "similarli": [133, 217, 219], "ordinari": 133, "detail": [133, 183, 185, 187, 218, 220, 222], "seri": [133, 134, 135, 136, 137, 138, 139, 149], "width": [133, 136, 170, 182, 183], "last": [133, 222, 224], "potenti": [133, 217], "cutoff": 133, "non_timelike_attribut": [133, 144, 177, 179, 183, 184, 185, 217, 219], "timelik": [133, 144, 177, 179, 183, 184, 185], "dimensionless": [133, 144, 177, 179, 183, 184, 185], "window": [133, 144, 153, 164, 177, 179, 182, 183, 184, 185], "invers": [133, 137, 144, 177, 179, 183, 184, 185], "sum_": [134, 135, 137, 138, 139, 145, 146, 147, 148, 149, 150, 217], "c_n": [134, 135, 138, 139, 141], "t_p": [134, 135, 137, 138, 139, 140, 145, 146, 149, 150], "_sampl": [134, 135, 145, 146, 177, 179, 180, 181, 182, 183, 184, 185, 219], "sample_coord": [134, 135, 145, 146, 177, 179, 180, 181, 182, 183, 184, 185, 219], "coordin": [134, 135, 145, 146, 177, 179, 180, 181, 182, 183, 184, 185], "expans": [136, 137], "choos": [136, 219, 221], "neglect": [136, 144], "_normal": 136, "clip": 136, "re": 136, "n_arr": [137, 140], "suppressed_freq_ranges_2darr": 137, "pulse_dur": [137, 138, 139, 140, 141, 147, 148, 149, 151], "time_scaling_factor": 137, "n_points_for_integr": [137, 141], "60": [137, 141], "evalu": [137, 138, 139, 140, 141, 147, 148, 149, 156], "eq": [137, 140, 141, 144, 145, 146, 151], "a_": 137, "nm": 137, "int_": 137, "f_": [137, 177], "l": [137, 223], "hat": 137, "_n": 137, "_m": 137, "mathrm": [137, 177], "m": [137, 217, 223], "row": 137, "column": 137, "denot": [137, 145, 146, 219], "transform": [137, 140, 141, 217, 218, 220, 221], "g_n": [137, 140], "importantli": [137, 218], "fulli": 137, "1d": [137, 140, 141], "2d": [137, 141], "give": [137, 218, 219, 221, 224], "factor": [137, 158, 162, 185, 219], "excess": 137, "small": [137, 217, 218], "integrand": [137, 141], "50": [137, 141, 221], "recommend": [137, 141, 221], "numer": [137, 141, 185], "low": [137, 141, 219], "t_arr": [138, 139, 147, 148, 149], "nth": [140, 149], "analyt": [140, 185, 223], "a7": [140, 141], "frequency_arr": 140, "tensor": 140, "dim": 140, "cartesian": 140, "dimension": 140, "number_of_cosin": 141, "weights_tupl": 141, "suppressed_freq_ranges_2d_tupl": 141, "solv": [141, 150, 151], "optim": [141, 185, 197, 217], "a5": 141, "a12": 141, "a13": 141, "effici": [141, 222], "rb": 141, "outer": 141, "appendix": [142, 221], "hddrag": [142, 145, 146], "33333333": 143, "6": [143, 221, 223], "22857143": 143, "02857143": 143, "66666667": 143, "95238095": 143, "35714286": 143, "07936508": 143, "00793651": 143, "71428571": 143, "07142857": 143, "47619048": 143, "14285714": 143, "02597403": 143, "0021645": 143, "75000000e": 143, "16666667e": 143, "83333333e": 143, "12121212e": 143, "30303030e": 143, "02": 143, "15850816e": 143, "03": 143, "82750583e": 143, "04": 143, "7": [143, 221], "77777778e": 143, "24444444e": 143, "78787879e": 143, "82828283e": 143, "70240870e": 143, "86480186e": 143, "48640249e": 143, "55400155e": 143, "0th": 143, "solve_cosine_coefs_for_hd_drag": 143, "hd_drag": [144, 145, 146], "b1": [144, 145, 146], "b2": 144, "beta_": [145, 146, 147, 148, 151], "2n": [145, 146, 147, 148, 151], "d_k": [145, 146, 149, 150], "continu": [145, 146], "2k": [145, 146], "slightli": [145, 146], "derivative_coefs_arr": [147, 148], "cosine_coefs_arr": [147, 148, 149], "number_of_suppressed_freq": 150, "suppressed_freq_arr": 151, "b5": 151, "beta_0": 151, "ghz": 151, "realpuls": [152, 157, 213, 215, 216, 219], "multiplexediqpuls": [152, 161], "timetrac": 152, "complexintegr": [152, 163], "thresholdstatediscrimin": 152, "delay_sampl": [153, 155, 163, 164], "acquir": [153, 161, 218], "qb1__readout": 153, "strictli": [154, 218, 219], "strict": [154, 217, 218], "version": [154, 220, 221], "dd": 154, "outcom": 156, "choic": 156, "ok": [156, 158, 159, 162], "get_child_instruct": [156, 159], "child": [156, 159, 195, 196, 213, 216], "collect": [157, 218], "scale_i": [158, 219], "scale_q": [158, 219], "upconvert": 158, "carrier": 158, "success": 158, "get_waveform": [158, 159, 162], "command": [159, 218, 222], "entri": [160, 219], "outsid": [160, 218, 219], "truncat": [160, 194, 217], "neg": 160, "probe_puls": 161, "feedback_signal_label": [163, 217], "transmit": 163, "field": [163, 217, 219, 221], "duration_sampl": 164, "captur": [164, 220], "updat": [165, 217, 222], "step": [166, 185, 217], "sure": 166, "synchron": 170, "program": 170, "critic": 170, "constructor": 170, "account": [170, 185, 217], "pprint": 170, "time_unit": 170, "fix": [170, 218], "graphic": 170, "represent": [170, 203, 218], "symbol": 170, "keysview": 170, "mutat": [170, 171], "vice": [170, 171], "versa": [170, 171], "immut": [170, 171], "add_channel": 170, "channel_nam": [170, 224], "front_pad": 170, "to_dur": 170, "variabl": [170, 195, 217], "front_pad_in_second": 170, "pad_to_hard_box": 170, "pad_to_hard_box_in_second": 170, "smallest": 170, "revers": 170, "preserv": [170, 191, 218, 224], "rear": 170, "reverse_hard_box": 170, "No": [170, 217], "synchronis": 170, "break": 170, "cleanup": [170, 217], "clean": [170, 217], "thing": [170, 180, 181], "has_content_in": 170, "keep": [171, 195], "_instruct": 171, "_durat": 171, "prepend": 171, "pop": 171, "idx": [171, 194], "12": [172, 197, 198], "comp": [172, 217], "1281": 172, "visualis": [174, 217], "view": [175, 217], "browser": 175, "jupyt": 175, "notebook": 175, "ipython": 175, "core": [175, 217], "displai": [175, 217, 221], "inspect": 175, "serial": 176, "reimport": 176, "document": [176, 217, 221], "appear": [176, 218, 221], "polynomialcosin": [176, 217], "chirp": [176, 178, 217], "chirpimag": [176, 217], "freq_start": [177, 178], "freq_stop": [177, 178], "05": [177, 178], "taper": 177, "rectangular": [177, 195], "hann": 177, "nyquist": 177, "zone": 177, "constrain": 177, "5707963267948966": 178, "imaginari": 178, "period": [179, 184], "sinusoid": [179, 182, 183, 184], "made": [180, 181, 203, 219, 220, 221, 224], "dummi": 181, "bug": 181, "fixm": 181, "p": [182, 184, 223], "plateau": 182, "Its": [182, 218], "midpoint": [182, 185], "descript": [183, 203, 221], "polynomi": [184, 217], "minim": [185, 191, 217], "adiabat": [185, 223], "prior": 185, "lambda_n": 185, "tau_": 185, "acceler": 185, "reconstruct": 185, "tau": 185, "lab": 185, "interpol": 185, "v": [185, 213, 216, 217], "voltag": 185, "go": [185, 218, 219], "advis": [185, 221], "look": [185, 219], "mathemat": [185, 220], "heavi": 185, "leakag": [185, 223], "strength": 185, "squid": [185, 217], "asymmetri": [185, 217], "_sample_normalized_slepian": 185, "coord": 185, "_t_tau": 185, "num_sampl": 185, "129": 185, "convers": [185, 219, 221], "solut": 185, "therefor": [185, 218], "scipi": [185, 217], "romb": 185, "_theta_tau": 185, "shown": [185, 217, 222], "tau_puls": 185, "quantum_op": 187, "short": [187, 197], "simpl": [187, 203, 218, 219, 223], "unambigu": [187, 218, 219], "subsystem": 187, "qumod": 187, "pictur": [187, 222], "famili": [187, 218], "plural": 187, "intent": 187, "target": [187, 217, 224], "callabl": [187, 219], "lowest": [187, 218], "docstr": [187, 217], "exact": [187, 219], "first_qubit_basis_ket": 187, "second_qubit_basis_ket": 187, "set_default_implement": [187, 219], "set_default_implementation_for_locu": [187, 219], "cal_data": 189, "impl": [189, 219], "noiseless": 191, "sync": 191, "spacer": 191, "try": [191, 217], "segmentpoint": 191, "nonsolid": 192, "nevertheless": 192, "tol": [194, 197, 198], "frac": 194, "serv": 194, "pointer": 194, "smaller": [194, 197, 198], "toler": 194, "remaind": 194, "cut_tail": 194, "cut": 194, "tail": 194, "onward": 194, "rewind": 194, "fastforward": 194, "forward": 194, "child_schedul": [195, 196], "child_compon": [195, 196], "neighborhood_compon": [195, 196, 200, 203], "component_dur": [195, 196], "is_alap": [195, 196], "respect": [195, 201, 213, 216, 218, 219], "hard": [195, 217], "rag": [195, 197, 198], "edg": [195, 217], "earliest": [195, 196], "max": 195, "combin": [195, 221], "extend_hard_boundary_in_second": 195, "computational_reson": [195, 196], "addition": [195, 196, 222], "ever": [195, 196], "alap": [195, 196, 202, 203, 218, 224], "As": [195, 196, 203, 219, 222], "late": [195, 196, 202, 203], "extend_hard_boundari": 196, "incom": 196, "extens": [197, 198, 217], "reserv": 199, "resourc": 199, "schedulingstrategi": [199, 200, 201, 203, 224], "locus_compon": [200, 203, 219], "asap": [200, 202, 203, 218, 222, 224], "from_readout_trigg": 200, "readout_trigg": 200, "probe_channel": 200, "block_channel": 200, "block_dur": 200, "soon": [202, 203, 217, 222], "fragment": 203, "human": [203, 218, 219], "readabl": [203, 217, 218, 221], "union": [203, 221, 224], "rule": [203, 207, 217, 218, 219, 224], "operand": [203, 224], "pipe": [203, 224], "group": [203, 219, 224], "let": [203, 219], "a_then_b": 203, "c_then_d": 203, "set_alap": [203, 224], "abcd": 203, "abb": 203, "ccd": 203, "all_togeth": 203, "dictat": 203, "flatten": 203, "ancestor": 203, "set_asap": 203, "print": [203, 217, 221, 224], "_idx": 203, "type_hint": 205, "python": [205, 217, 219], "typehint": 205, "psi_1": 207, "psi_2": 207, "decrement": 207, "beforehand": 207, "opposit": 207, "direct": [207, 221], "playlistvalidationerror": 208, "awgschedulevalidationdata": [208, 213], "awgschedulevalidationerror": 208, "invalidinstructionerror": 208, "sampling_r": 209, "min_number_of_sampl": 209, "issue_str": 211, "encount": 211, "channel_descript": [213, 214], "device_constraint": [213, 214, 216], "minimum": [213, 216, 218], "a_k": 217, "iq_puls": 217, "register_implement": [217, 218, 219], "register_oper": [217, 218, 219], "introduc": [217, 219], "mypi": 217, "ci": 217, "issu": [217, 221], "sw": 217, "1615": 217, "were": 217, "visual": [217, 218, 222], "faster": 217, "numpi": [217, 224], "inspector": 217, "render": 217, "mr": 217, "1086": 217, "bump": 217, "coco": 217, "ruff": 217, "isort": 217, "patch": 217, "1429": 217, "usag": [217, 219], "broken": 217, "inspect_playlist": [217, 218], "miss": 217, "ifram": 217, "tag": 217, "licens": [217, 220], "vulner": 217, "safe_load": 217, "harm": 217, "remot": 217, "1378": 217, "modulated_drag_crf": 217, "baseclass": 217, "packag": 217, "publish": 217, "doc": [217, 219], "footer": 217, "1392": 217, "pep": 217, "604": 217, "lint": 217, "1230": 217, "rework": 217, "delet": 217, "major": 217, "stai": 217, "split": [217, 218], "seen": 217, "register_g": 217, "validate_oper": 217, "compare_oper": 217, "add_implement": 217, "validate_implement": 217, "set_default": 217, "build_quantum_op": [217, 218], "py": 217, "yield": 217, "didn": 217, "renam": 217, "crystal": 217, "star": 217, "architectur": 217, "crystal_5": 217, "star_6": 217, "mini": 217, "mini_crystal_20": 217, "crystal_20": 217, "1059": 217, "electron": [217, 219, 221], "refactor": 217, "register_gate_implement": 217, "imposs": 217, "retain": [217, 221], "rapidjson": 217, "685": 217, "previous": 217, "x90": 217, "codebas": 217, "467": 217, "speed": 217, "reshap": 217, "neither": [217, 219], "assing": 217, "signific": 217, "speedup": 217, "anywai": 217, "diffrenet": 217, "broader": 217, "compatibili": 217, "migrat": 217, "guid": 217, "builtin": 217, "easili": [217, 220, 224], "quantumcircuit": 217, "extract": 217, "crf_acstarkcrf": 217, "slepian_acstarkcrf": 217, "repo": 217, "organ": [217, 224], "1042": 217, "disabl": 217, "horizont": 217, "scroll": 217, "toggl": 217, "cover": 217, "concept": [217, 219, 220], "531": 217, "gitlab": 217, "public": 217, "page": [217, 220, 221], "776": 217, "514": 217, "client": [217, 218, 219, 220], "apach": [217, 221], "extlink": 217, "sphinx": 217, "916": 217, "intersphinx": 217, "665": 217, "becaus": [217, 219], "proper": 217, "realiz": [217, 223], "former": 217, "semant": [217, 218], "disturb": 217, "774": 217, "leak": 217, "web": 217, "artifact": 217, "resetwait": 217, "comfort": [217, 219], "timelin": [217, 218], "redisplai": 217, "upcom": 217, "releas": 217, "prefer": [217, 219, 221], "font": 217, "viewer": 217, "358": 217, "typo": 217, "api": [217, 219, 220, 224], "workflow": [217, 224], "meth": 217, "pulla": [217, 220, 224], "crash": 217, "discoveri": 217, "throw": 217, "sc": 217, "nonsens": 217, "mcm": 217, "merge_dict": 217, "crf_crf": 217, "interfac": [217, 219, 221], "feedback_label": 217, "conditional_prx": 217, "hopefulli": 217, "yml": 217, "conditionalreset": 217, "mid": 217, "constant_qnd": 217, "qndness": 217, "phase_increment_befor": 217, "sign": 217, "phase_transform": 217, "fulfil": 217, "satisfi": [217, 222], "conditionalprx": 217, "accept": [217, 221], "signifi": 217, "weigth": 217, "whitelist": 217, "2112": 217, "write": [217, 219, 221], "1831": 217, "drag_crf_sx": 217, "drag_gaussian_sx": 217, "prx_u": 217, "prx_sx": 217, "_x_pi_puls": 217, "547": 217, "prioritis": 217, "1929": 217, "1468": 217, "programm": 217, "1925": 217, "crude": 217, "measure_nop": 217, "validate_move_instruct": 217, "2056": 217, "pipelin": [217, 222], "overview": 218, "terminologi": 218, "deliv": 218, "send": [218, 222], "assembli": 218, "batch": 218, "summar": 218, "imag": [218, 222], "illustr": [218, 222], "visibl": 218, "microwav": [218, 220], "ambigu": 218, "machin": 218, "violat": 218, "concern": 218, "philosophi": 218, "inaccess": 218, "attempt": 218, "smart": 218, "magic": 218, "inconsist": 218, "transpar": 218, "technic": 218, "apart": 218, "few": 218, "instant": 218, "thought": [218, 222], "desir": [218, 224], "read": [218, 222, 224], "disjoint": [218, 224], "partli": 218, "figur": [218, 222], "demonstr": 218, "explain": 218, "nonunitari": 218, "variou": [218, 219], "runtim": [218, 224], "bridg": 218, "gap": 218, "despit": 218, "appropri": [218, 221], "repeat": [218, 224], "repetit": 218, "encod": 218, "aim": 218, "fit": [218, 221], "chunk": 218, "neat": 218, "metadata": 219, "question": [219, 224], "cnot": 219, "NOT": 219, "On": [219, 222], "hand": 219, "frozen": 219, "programmat": 219, "procedur": 219, "invok": 219, "random": 219, "benchmark": 219, "qc": 219, "emphasi": 219, "def": 219, "superclass": 219, "triplet": 219, "_default": 219, "implementation_": 219, "default_prx_qb1": 219, "necessarili": [219, 221], "special_prx_qb1": 219, "my_special_prx": 219, "default_box": 219, "chain": [219, 222], "default_cz_box": 219, "pure": 219, "develop": 219, "thumb": 219, "rest": 219, "simplifi": [219, 222], "educ": 219, "__class__": 219, "__name__": 219, "subsect": 219, "relai": 219, "live": 219, "asymmetr": 219, "tri": 219, "replic": 219, "mandatori": 219, "alter": 219, "physcial": 219, "averag": 219, "mu": 219, "spread": 219, "recip": 219, "offset_coord": 219, "exp": 219, "resampl": 219, "understand": [219, 222, 223], "unitless": 219, "scalar_coeffieci": 219, "quick": [219, 220, 224], "simplest": 219, "compositehadamard": 219, "hadamard": 219, "member_prx": 219, "onelin": 219, "prx_mycoolwaveform": 219, "coolwaveformi": 219, "coolwaveformq": 219, "my": 219, "cool": 219, "cz_mycoolwaveform": 219, "coolcouplerwaveform": 219, "coolqubitwaveform": 219, "measure_mycoolwaveform": 219, "preload": 219, "snippet": 219, "cnot_matrix": 219, "cnot_op": 219, "my_build": 219, "my_cnot_impl": 219, "mycnotclass": 219, "default_g": 219, "_default_implement": 219, "date": [220, 221], "2025": 220, "09": 220, "14": 220, "high": [220, 223], "unifi": 220, "hide": 220, "But": 220, "framework": [220, 224], "machineri": 220, "standalon": 220, "librari": [220, 222], "encourag": [220, 224], "familiar": 220, "especi": [220, 224], "miscellan": 220, "pitfal": 220, "changelog": 220, "search": 220, "januari": 221, "2004": [221, 223], "www": 221, "org": 221, "AND": 221, "FOR": 221, "reproduct": 221, "distribut": 221, "shall": 221, "9": [221, 222, 224], "licensor": 221, "copyright": 221, "owner": 221, "entiti": 221, "author": 221, "grant": 221, "legal": 221, "power": 221, "indirect": 221, "manag": 221, "contract": 221, "ii": 221, "ownership": 221, "fifti": 221, "percent": 221, "outstand": 221, "iii": 221, "benefici": 221, "exercis": 221, "permiss": 221, "modif": 221, "softwar": [221, 223], "mechan": 221, "translat": 221, "media": 221, "authorship": 221, "notic": [221, 224], "editori": 221, "revis": 221, "elabor": 221, "mere": 221, "bind": 221, "thereof": 221, "contribut": 221, "intention": 221, "submit": 221, "inclus": 221, "behalf": 221, "verbal": 221, "written": 221, "commun": 221, "mail": 221, "discuss": 221, "conspicu": 221, "Not": [221, 224], "contributor": 221, "whom": 221, "incorpor": 221, "herebi": 221, "perpetu": 221, "worldwid": 221, "exclus": 221, "charg": 221, "royalti": 221, "free": [221, 223], "irrevoc": 221, "reproduc": 221, "publicli": 221, "sublicens": 221, "patent": 221, "offer": 221, "sell": 221, "claim": 221, "infring": 221, "alon": 221, "institut": 221, "litig": 221, "counterclaim": 221, "lawsuit": 221, "alleg": 221, "contributori": 221, "termin": 221, "redistribut": 221, "medium": 221, "meet": 221, "recipi": 221, "promin": 221, "trademark": 221, "pertain": 221, "along": 221, "wherev": 221, "third": 221, "parti": 221, "alongsid": 221, "addendum": 221, "constru": 221, "statement": [221, 222], "compli": 221, "submiss": 221, "notwithstand": 221, "herein": 221, "supersed": 221, "agreement": 221, "regard": 221, "trade": 221, "servic": 221, "customari": 221, "disclaim": 221, "warranti": 221, "law": 221, "agre": 221, "AS": 221, "OR": 221, "OF": 221, "kind": 221, "impli": 221, "titl": 221, "merchant": 221, "sole": 221, "risk": 221, "liabil": 221, "event": 221, "theori": 221, "tort": 221, "neglig": 221, "deliber": 221, "grossli": 221, "liabl": 221, "damag": 221, "incident": 221, "consequenti": 221, "inabl": 221, "loss": 221, "goodwil": 221, "stoppag": 221, "failur": 221, "malfunct": 221, "commerci": 221, "fee": 221, "indemn": 221, "oblig": 221, "indemnifi": 221, "harmless": 221, "incur": 221, "assert": 221, "boilerpl": 221, "enclos": 221, "bracket": 221, "comment": 221, "easier": 221, "identif": 221, "archiv": 221, "2024": [221, 223], "complianc": 221, "govern": 221, "show": 222, "flexibl": 222, "goal": 222, "finit": 222, "condition": 222, "qccsw": 222, "excut": 222, "too": 222, "earli": 222, "facilit": 222, "travel": 222, "conditionalinstrucion": 222, "equaival": 222, "feedaback_kei": 222, "reset_qb2": 222, "set_qb3_to_1": 222, "cc_prx_qb4": 222, "2nd": [222, 223], "prx_qb3": 222, "prx_qb4": 222, "80e": [222, 224], "clariti": 222, "bottom": 222, "master": 222, "slave": 222, "compens": 222, "trigger_delai": 222, "explan": 222, "end_delai": 222, "spcecifi": 222, "trigger_mast": 222, "emit": 222, "daisi": 222, "central": 222, "cabl": 222, "eric": 223, "hyypp": 223, "\u00e4": 223, "antti": 223, "vep": 223, "inen": 223, "miha": 223, "papi": 223, "\u010d": 223, "chun": 223, "fai": 223, "chan": 223, "sinan": 223, "inel": 223, "alessandro": 223, "landra": 223, "wei": 223, "liu": 223, "\u00fc": 223, "rgen": 223, "luu": 223, "fabian": 223, "marxer": 223, "caspar": 223, "ockeloen": 223, "korppi": 223, "reduc": 223, "superconduct": 223, "processor": 223, "030353": 223, "doi": 223, "1103": 223, "prxquantum": 223, "john": 223, "martini": 223, "michael": 223, "geller": 223, "_z": 223, "phy": 223, "rev": 223, "022307": 223, "aug": 223, "2014": 223, "arxiv": 223, "1402": 223, "5467": 223, "physreva": 223, "lyon": 223, "digit": 223, "prentic": 223, "hall": 223, "edit": 223, "isbn": 223, "978": 223, "0131089891": 223, "cecilia": 223, "gisel": 223, "jarn": 223, "heurist": 223, "approach": 223, "anal": 223, "afa": 223, "29": 223, "51": 223, "57": 223, "2018": 223, "1703": 223, "06812": 223, "31527": 223, "analesafa": 223, "eyob": 223, "sete": 223, "nicola": 223, "didier": 223, "angela": 223, "chen": 223, "shobhan": 223, "kulshreshtha": 223, "riccardo": 223, "manenti": 223, "stefano": 223, "poletto": 223, "entangl": 223, "appl": 223, "024050": 223, "2021": 223, "2104": 223, "03511": 223, "physrevappli": 223, "youngkyu": 223, "sung": 223, "leon": 223, "ding": 223, "jochen": 223, "braum\u00fcller": 223, "veps\u00e4l\u00e4inen": 223, "bharath": 223, "kannan": 223, "morten": 223, "kjaergaard": 223, "ami": 223, "green": 223, "gabriel": 223, "o": 223, "samach": 223, "chri": 223, "mcnalli": 223, "david": 223, "kim": 223, "alexand": 223, "melvil": 223, "bethani": 223, "niedzielski": 223, "molli": 223, "schwartz": 223, "jonilyn": 223, "yoder": 223, "terri": 223, "orlando": 223, "simon": 223, "gustavsson": 223, "william": 223, "oliv": 223, "fidel": 223, "zz": 223, "021058": 223, "jun": 223, "2011": 223, "01261": 223, "physrevx": 223, "capabl": 224, "ask": 224, "recogn": 224, "cz_gate_impl": 224, "prx_gate_impl": 224, "measure_gate_impl": 224, "keyword": 224, "instanti": 224, "x180": 224, "y90": 224, "100e": 224, "p1": 224, "p2": 224, "handi": 224, "circuit3": 224, "word": 224, "slide": 224, "past": 224, "neighbour": 224, "neighbourhood": 224, "worri": 224, "advers": 224, "ruin": 224, "best": 224, "arrang": 224, "aid": 224, "discov": 224, "all_qubit": 224, "get_neighbor_locus_compon": 224, "160e": 224, "cz_schedul": 224, "forget": 224}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [121, 0, 0, "-", "playlist"], [186, 0, 0, "-", "quantum_ops"], [191, 0, 0, "-", "scheduler"], [199, 0, 0, "-", "timebox"], [204, 0, 0, "-", "utils"], [208, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "customizable_gates"], [18, 3, 1, "", "default_implementations"], [18, 4, 1, "", "optional_calibration_keys"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 3, 1, "", "_timebox_cache"], [20, 4, 1, "", "construct_factorizable"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 3, 1, "", "id"], [20, 4, 1, "", "may_have_calibration"], [20, 4, 1, "", "needs_calibration"], [20, 4, 1, "", "optional_calibration_keys"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "sub_implementations"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [75, 0, 0, "-", "move"], [83, 0, 0, "-", "prx"], [102, 1, 1, "", "register_implementation"], [103, 1, 1, "", "register_operation"], [104, 0, 0, "-", "reset"], [109, 0, 0, "-", "rz"], [116, 0, 0, "-", "sx"], [118, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "customizable_gates"], [37, 3, 1, "", "parameters"], [37, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"], [71, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [72, 2, 1, "", "Probe_Constant"], [73, 2, 1, "", "Shelved_Measure_Constant"], [74, 2, 1, "", "Shelved_Measure_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[71, 4, 1, "", "_build_instructions"], [71, 4, 1, "", "_call"], [71, 3, 1, "", "_multiplexed_timeboxes"], [71, 3, 1, "", "dependent_waves"], [71, 4, 1, "", "duration_in_seconds"], [71, 4, 1, "", "get_locus_mapping_name"], [71, 4, 1, "", "probe_timebox"], [71, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[72, 3, 1, "", "dependent_waves"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "wave_i"], [72, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_Constant": [[73, 3, 1, "", "dependent_waves"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "wave_i"], [73, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms": [[74, 4, 1, "", "_call"], [74, 3, 1, "", "dependent_waves"], [74, 4, 1, "", "probe_timebox"]], "iqm.pulse.gates.move": [[76, 2, 1, "", "MOVE_CRF_CRF"], [77, 2, 1, "", "MOVE_CustomWaveforms"], [78, 2, 1, "", "MOVE_SLEPIAN_CRF"], [79, 2, 1, "", "MOVE_TGSS_CRF"], [80, 2, 1, "", "MoveMarker"], [81, 1, 1, "", "apply_move_gate_phase_corrections"], [82, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[76, 3, 1, "", "coupler_wave"], [76, 3, 1, "", "parameters"], [76, 3, 1, "", "qubit_wave"], [76, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[77, 4, 1, "", "_call"], [77, 3, 1, "", "coupler_wave"], [77, 3, 1, "", "parameters"], [77, 3, 1, "", "qubit_wave"], [77, 3, 1, "", "root_parameters"], [77, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF": [[78, 3, 1, "", "coupler_wave"], [78, 3, 1, "", "parameters"], [78, 3, 1, "", "qubit_wave"], [78, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[79, 3, 1, "", "coupler_wave"], [79, 3, 1, "", "parameters"], [79, 3, 1, "", "qubit_wave"], [79, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[80, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[84, 2, 1, "", "ABC_Constant_smooth"], [85, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [86, 2, 1, "", "PRX_Cosine"], [87, 2, 1, "", "PRX_CustomWaveforms"], [88, 2, 1, "", "PRX_CustomWaveformsSX"], [89, 2, 1, "", "PRX_DRAGCosineRiseFall"], [90, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [91, 2, 1, "", "PRX_DRAGGaussian"], [92, 2, 1, "", "PRX_DRAGGaussianSX"], [93, 2, 1, "", "PRX_FastDrag"], [94, 2, 1, "", "PRX_FastDragSX"], [95, 2, 1, "", "PRX_HdDrag"], [96, 2, 1, "", "PRX_HdDragSX"], [97, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [98, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [99, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [100, 2, 1, "", "PrxGateImplementation"], [101, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[84, 4, 1, "", "_call"], [84, 4, 1, "", "_fall_pulse"], [84, 4, 1, "", "_main_pulse"], [84, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[85, 3, 1, "", "fall_waveform"], [85, 3, 1, "", "main_waveform"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "rise_waveform"], [85, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_Cosine": [[86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "wave_i"], [86, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[87, 4, 1, "", "_get_pulse"], [87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[88, 4, 1, "", "_call"], [88, 4, 1, "", "_get_pulse"], [88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[89, 4, 1, "", "_get_pulse"], [89, 3, 1, "", "dependent_waves"], [89, 3, 1, "", "excluded_parameters"], [89, 3, 1, "", "parameters"], [89, 3, 1, "", "wave_i"], [89, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[90, 4, 1, "", "_get_pulse"], [90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "excluded_parameters"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[91, 3, 1, "", "dependent_waves"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "wave_i"], [91, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "wave_i"], [92, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "parameters"], [94, 3, 1, "", "wave_i"], [94, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "parameters"], [95, 3, 1, "", "wave_i"], [95, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[96, 3, 1, "", "dependent_waves"], [96, 3, 1, "", "parameters"], [96, 3, 1, "", "wave_i"], [96, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[97, 4, 1, "", "_get_pulse"], [97, 3, 1, "", "dependent_waves"], [97, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[98, 4, 1, "", "_get_pulse"], [98, 3, 1, "", "dependent_waves"], [98, 3, 1, "", "excluded_parameters"], [98, 3, 1, "", "parameters"], [98, 3, 1, "", "wave_i"], [98, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[99, 4, 1, "", "_call"]], "iqm.pulse.gates.prx.PrxGateImplementation": [[100, 4, 1, "", "_call"], [100, 4, 1, "", "clifford"], [100, 4, 1, "", "get_locus_mapping_name"], [100, 4, 1, "", "rx"], [100, 4, 1, "", "ry"]], "iqm.pulse.gates.reset": [[105, 6, 1, "", "RESET_FEEDBACK_KEY"], [106, 6, 1, "", "RESET_MEASUREMENT_KEY"], [107, 2, 1, "", "Reset_Conditional"], [108, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[107, 4, 1, "", "_call"], [107, 3, 1, "", "customizable_gates"], [107, 4, 1, "", "get_locus_mapping_name"], [107, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[108, 4, 1, "", "_call"], [108, 4, 1, "", "duration_in_seconds"], [108, 4, 1, "", "get_custom_locus_mapping"], [108, 3, 1, "", "parameters"], [108, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[110, 2, 1, "", "RZ_ACStarkShift"], [111, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [112, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [113, 2, 1, "", "RZ_PRX_Composite"], [114, 2, 1, "", "RZ_Virtual"], [115, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[110, 4, 1, "", "_ac_stark_pulse"], [110, 4, 1, "", "_call"], [110, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[111, 3, 1, "", "ac_stark_waveform"], [111, 3, 1, "", "parameters"], [111, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[112, 3, 1, "", "fall_waveform"], [112, 3, 1, "", "main_waveform"], [112, 3, 1, "", "parameters"], [112, 3, 1, "", "rise_waveform"], [112, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[113, 3, 1, "", "customizable_gates"], [113, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[114, 4, 1, "", "_call"], [114, 4, 1, "", "duration_in_seconds"], [114, 4, 1, "", "get_locus_mapping_name"], [114, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[117, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[117, 4, 1, "", "_call"], [117, 3, 1, "", "customizable_gates"], [117, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[119, 2, 1, "", "UGate"], [120, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[119, 4, 1, "", "_call"], [119, 3, 1, "", "customizable_gates"], [119, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[122, 0, 0, "-", "channel"], [132, 0, 0, "-", "fast_drag"], [142, 0, 0, "-", "hd_drag"], [152, 0, 0, "-", "instructions"], [167, 0, 0, "-", "playlist"], [168, 0, 0, "-", "schedule"], [173, 0, 0, "-", "visualisation"], [176, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[123, 2, 1, "", "ChannelConfiguration"], [124, 2, 1, "", "ChannelDescription"], [125, 2, 1, "", "ChannelProperties"], [126, 2, 1, "", "IQChannelConfig"], [127, 2, 1, "", "ProbeChannelProperties"], [128, 2, 1, "", "RealChannelConfig"], [129, 1, 1, "", "get_channel_properties"], [130, 1, 1, "", "get_channel_properties_from_station_settings"], [131, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[124, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[125, 3, 1, "", "blocks_component"], [125, 3, 1, "", "compatible_instructions"], [125, 4, 1, "", "duration_to_int_samples"], [125, 4, 1, "", "duration_to_samples"], [125, 4, 1, "", "duration_to_seconds"], [125, 3, 1, "", "instruction_duration_granularity"], [125, 3, 1, "", "instruction_duration_min"], [125, 3, 1, "", "is_iq"], [125, 3, 1, "", "is_virtual"], [125, 4, 1, "", "round_duration_to_granularity"], [125, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[126, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[127, 3, 1, "", "center_frequency"], [127, 3, 1, "", "integration_start_dead_time"], [127, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[128, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[133, 2, 1, "", "FastDrag"], [134, 2, 1, "", "FastDragI"], [135, 2, 1, "", "FastDragQ"], [136, 2, 1, "", "SuppressedPulse"], [137, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [138, 1, 1, "", "evaluate_fast_drag_i_envelope"], [139, 1, 1, "", "evaluate_fast_drag_q_envelope"], [140, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [141, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[133, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[134, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[135, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[136, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[143, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [144, 2, 1, "", "HdDrag"], [145, 2, 1, "", "HdDragI"], [146, 2, 1, "", "HdDragQ"], [147, 1, 1, "", "evaluate_hd_drag_i_envelope"], [148, 1, 1, "", "evaluate_hd_drag_q_envelope"], [149, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [150, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [151, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[144, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[145, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[146, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[153, 2, 1, "", "AcquisitionMethod"], [154, 2, 1, "", "Block"], [155, 2, 1, "", "ComplexIntegration"], [156, 2, 1, "", "ConditionalInstruction"], [157, 2, 1, "", "FluxPulse"], [158, 2, 1, "", "IQPulse"], [159, 2, 1, "", "Instruction"], [160, 2, 1, "", "MultiplexedIQPulse"], [161, 2, 1, "", "ReadoutTrigger"], [162, 2, 1, "", "RealPulse"], [163, 2, 1, "", "ThresholdStateDiscrimination"], [164, 2, 1, "", "TimeTrace"], [165, 2, 1, "", "VirtualRZ"], [166, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[153, 3, 1, "", "delay_samples"], [153, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[155, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[156, 3, 1, "", "condition"], [156, 4, 1, "", "get_child_instructions"], [156, 3, 1, "", "outcomes"], [156, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[157, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[158, 4, 1, "", "get_waveforms"], [158, 3, 1, "", "modulation_frequency"], [158, 3, 1, "", "phase"], [158, 3, 1, "", "phase_increment"], [158, 3, 1, "", "scale_i"], [158, 3, 1, "", "scale_q"], [158, 4, 1, "", "validate"], [158, 3, 1, "", "wave_i"], [158, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[159, 4, 1, "", "copy"], [159, 3, 1, "", "duration"], [159, 4, 1, "", "get_child_instructions"], [159, 4, 1, "", "get_waveforms"], [159, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[160, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[161, 3, 1, "", "acquisitions"], [161, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[162, 4, 1, "", "get_waveforms"], [162, 3, 1, "", "scale"], [162, 4, 1, "", "validate"], [162, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[163, 3, 1, "", "feedback_signal_label"], [163, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[164, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[165, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[169, 2, 1, "", "Nothing"], [170, 2, 1, "", "Schedule"], [171, 2, 1, "", "Segment"], [172, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[170, 4, 1, "", "add_channels"], [170, 4, 1, "", "append"], [170, 4, 1, "", "channels"], [170, 4, 1, "", "cleanup"], [170, 4, 1, "", "copy"], [170, 5, 1, "", "duration"], [170, 4, 1, "", "duration_in_seconds"], [170, 4, 1, "", "extend"], [170, 4, 1, "", "front_pad"], [170, 4, 1, "", "front_pad_in_seconds"], [170, 4, 1, "", "has_content_in"], [170, 4, 1, "", "items"], [170, 4, 1, "", "pad_to_hard_box"], [170, 4, 1, "", "pad_to_hard_box_in_seconds"], [170, 4, 1, "", "pprint"], [170, 4, 1, "", "reverse"], [170, 4, 1, "", "reverse_hard_box"], [170, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[171, 3, 1, "", "_duration"], [171, 3, 1, "", "_instructions"], [171, 4, 1, "", "append"], [171, 4, 1, "", "copy"], [171, 5, 1, "", "duration"], [171, 4, 1, "", "extend"], [171, 4, 1, "", "pop"], [171, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[174, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[175, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[177, 2, 1, "", "Chirp"], [178, 2, 1, "", "ChirpImag"], [179, 2, 1, "", "Cosine"], [180, 2, 1, "", "CosineFall"], [181, 2, 1, "", "CosineRise"], [182, 2, 1, "", "CosineRiseFallDerivative"], [183, 2, 1, "", "ModulatedCosineRiseFall"], [184, 2, 1, "", "PolynomialCosine"], [185, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[177, 4, 1, "", "_sample"], [177, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[178, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[179, 4, 1, "", "_sample"], [179, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[180, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[181, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[182, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[183, 4, 1, "", "_sample"], [183, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.PolynomialCosine": [[184, 4, 1, "", "_sample"], [184, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[185, 4, 1, "", "_sample"], [185, 4, 1, "", "_sample_normalized_slepian"], [185, 4, 1, "", "_t_tau"], [185, 4, 1, "", "_theta_tau"], [185, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[187, 2, 1, "", "QuantumOp"], [188, 6, 1, "", "QuantumOpTable"], [189, 1, 1, "", "validate_locus_calibration"], [190, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[187, 3, 1, "", "arity"], [187, 4, 1, "", "copy"], [187, 5, 1, "", "default_implementation"], [187, 3, 1, "", "defaults_for_locus"], [187, 3, 1, "", "factorizable"], [187, 4, 1, "", "get_default_implementation_for_locus"], [187, 3, 1, "", "implementations"], [187, 3, 1, "", "name"], [187, 3, 1, "", "params"], [187, 4, 1, "", "set_default_implementation"], [187, 4, 1, "", "set_default_implementation_for_locus"], [187, 3, 1, "", "symmetric"], [187, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[192, 6, 1, "", "BLOCKING"], [193, 6, 1, "", "NONSOLID"], [194, 2, 1, "", "SegmentPointer"], [195, 1, 1, "", "extend_hard_boundary"], [196, 1, 1, "", "extend_hard_boundary_in_seconds"], [197, 1, 1, "", "extend_schedule"], [198, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[194, 3, 1, "", "TOL"], [194, 4, 1, "", "cut_tail"], [194, 4, 1, "", "fastforward"], [194, 3, 1, "", "frac"], [194, 4, 1, "", "get"], [194, 3, 1, "", "idx"], [194, 4, 1, "", "next"], [194, 5, 1, "", "remainder"], [194, 4, 1, "", "rewind"], [194, 3, 1, "", "source"], [194, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[200, 2, 1, "", "MultiplexedProbeTimeBox"], [201, 2, 1, "", "SchedulingAlgorithm"], [202, 2, 1, "", "SchedulingStrategy"], [203, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[200, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[201, 3, 1, "", "HARD_BOUNDARY"], [201, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[202, 3, 1, "", "ALAP"], [202, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[203, 3, 1, "", "atom"], [203, 4, 1, "", "atomic"], [203, 3, 1, "", "children"], [203, 4, 1, "", "composite"], [203, 3, 1, "", "label"], [203, 3, 1, "", "locus_components"], [203, 3, 1, "", "neighborhood_components"], [203, 4, 1, "", "print"], [203, 3, 1, "", "scheduling"], [203, 3, 1, "", "scheduling_algorithm"], [203, 4, 1, "", "set_alap"], [203, 4, 1, "", "set_asap"], [203, 4, 1, "", "validate"]], "iqm.pulse.utils": [[205, 1, 1, "", "map_waveform_param_types"], [206, 1, 1, "", "normalize_angle"], [207, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[209, 2, 1, "", "AWGScheduleValidationData"], [210, 7, 1, "", "AWGScheduleValidationError"], [211, 7, 1, "", "InvalidInstructionError"], [212, 7, 1, "", "PlaylistValidationError"], [213, 1, 1, "", "validate_awg_and_schedule_compatibility"], [214, 1, 1, "", "validate_channel"], [215, 1, 1, "", "validate_instruction_and_wf_length"], [216, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 218, 223], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 101, 102, 103, 105, 106, 115, 120, 129, 130, 131, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 172, 175, 188, 189, 190, 192, 193, 195, 196, 197, 198, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 220, 222], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 101, 102, 103, 105, 106, 115, 120, 129, 130, 131, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 172, 175, 188, 189, 190, 192, 193, 195, 196, 197, 198, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 220], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 224], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 218, 219], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 81, 82, 101, 102, 103, 105, 106, 115, 120, 219], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 172], "get_implementation_class": 65, "measur": [66, 222], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "probepulse_customwaveforms_nointegr": 71, "probe_const": 72, "shelved_measure_const": 73, "shelved_measure_customwaveform": 74, "move": [75, 81, 82], "move_crf_crf": 76, "move_customwaveform": 77, "move_slepian_crf": 78, "move_tgss_crf": 79, "movemark": 80, "apply_move_gate_phase_correct": 81, "validate_move_instruct": 82, "prx": [83, 101], "abc_constant_smooth": 84, "constant_prx_with_smooth_rise_fal": 85, "prx_cosin": 86, "prx_customwaveform": 87, "prx_customwaveformssx": 88, "prx_dragcosinerisefal": 89, "prx_dragcosinerisefallsx": 90, "prx_draggaussian": 91, "prx_draggaussiansx": 92, "prx_fastdrag": 93, "prx_fastdragsx": 94, "prx_hddrag": 95, "prx_hddragsx": 96, "prx_modulatedcustomwaveform": 97, "prx_modulateddragcosinerisefal": 98, "prx_singlepulse_gateimplement": 99, "prxgateimplement": 100, "get_unitary_prx": 101, "register_implement": 102, "register_oper": 103, "reset": [104, 105, 106], "reset_feedback_kei": 105, "reset_measurement_kei": 106, "reset_condit": 107, "reset_wait": 108, "rz": [109, 115], "rz_acstarkshift": 110, "rz_acstarkshift_cosinerisefal": 111, "rz_acstarkshift_smoothconst": 112, "rz_prx_composit": 113, "rz_virtual": 114, "get_unitary_rz": 115, "sx": 116, "sxgate": 117, "u": [118, 120], "ugat": 119, "get_unitary_u": 120, "playlist": [121, 129, 130, 131, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 167, 172, 175, 218], "channel": [122, 129, 130, 131], "channelconfigur": 123, "channeldescript": 124, "channelproperti": 125, "iqchannelconfig": 126, "probechannelproperti": 127, "realchannelconfig": 128, "get_channel_properti": 129, "get_channel_properties_from_station_set": 130, "round_duration_to_granularity_sampl": 131, "fast_drag": [132, 137, 138, 139, 140, 141], "fastdrag": 133, "fastdragi": 134, "fastdragq": 135, "suppressedpuls": 136, "compute_matrix_of_summed_fourier_transform_inner_product": 137, "evaluate_fast_drag_i_envelop": 138, "evaluate_fast_drag_q_envelop": 139, "fourier_transform_of_cos_basis_functions_as_tensor": 140, "solve_fast_coefficients_for_given_weights_and_rang": 141, "hd_drag": [142, 143, 147, 148, 149, 150, 151], "cosine_coefficients_dict": 143, "hddrag": 144, "hddragi": 145, "hddragq": 146, "evaluate_hd_drag_i_envelop": 147, "evaluate_hd_drag_q_envelop": 148, "evaluate_nth_derivative_of_basis_envelop": 149, "solve_cosine_coefs_for_hd_drag": 150, "solve_hd_drag_coefficients_from_suppressed_frequ": 151, "instruct": [152, 159, 218, 219], "acquisitionmethod": 153, "block": [154, 192], "complexintegr": 155, "conditionalinstruct": 156, "fluxpuls": 157, "iqpuls": 158, "multiplexediqpuls": 160, "readouttrigg": [161, 222], "realpuls": 162, "thresholdstatediscrimin": 163, "timetrac": 164, "virtualrz": 165, "wait": 166, "schedul": [168, 170, 172, 191, 192, 193, 195, 196, 197, 198, 218, 224], "noth": 169, "segment": 171, "visualis": [173, 175], "base": [174, 175, 219], "inspect_playlist": 175, "waveform": [176, 219], "chirp": 177, "chirpimag": 178, "cosin": 179, "cosinefal": 180, "cosineris": 181, "cosinerisefallderiv": 182, "modulatedcosinerisefal": 183, "polynomialcosin": 184, "slepian": 185, "quantum_op": [186, 188, 189, 190], "quantumop": [187, 218, 219], "quantumopt": 188, "validate_locus_calibr": 189, "validate_op_calibr": 190, "nonsolid": 193, "segmentpoint": 194, "extend_hard_boundari": 195, "extend_hard_boundary_in_second": 196, "extend_schedul": 197, "extend_schedule_new": 198, "timebox": [199, 203, 218, 224], "multiplexedprobetimebox": 200, "schedulingalgorithm": 201, "schedulingstrategi": 202, "util": [204, 205, 206, 207], "map_waveform_param_typ": 205, "normalize_angl": 206, "phase_transform": 207, "valid": [208, 210, 211, 212, 213, 214, 215, 216], "awgschedulevalidationdata": 209, "awgschedulevalidationerror": 210, "invalidinstructionerror": 211, "playlistvalidationerror": 212, "validate_awg_and_schedule_compat": 213, "validate_channel": 214, "validate_instruction_and_wf_length": 215, "validate_playlist_compat": 216, "changelog": 217, "version": 217, "10": 217, "2": 217, "0": 217, "2025": 217, "08": 217, "featur": [217, 224], "1": 217, "07": 217, "18": 217, "bug": 217, "fix": 217, "16": 217, "break": 217, "chang": 217, "9": 217, "21": 217, "20": 217, "09": 217, "19": 217, "02": 217, "17": 217, "01": 217, "15": 217, "06": 217, "14": 217, "13": 217, "11": 217, "12": 217, "05": 217, "30": 217, "28": 217, "8": 217, "7": 217, "04": 217, "6": 217, "5": 217, "25": 217, "4": 217, "22": 217, "3": 217, "03": 217, "27": 217, "26": 217, "24": 217, "23": 217, "2024": 217, "29": 217, "31": 217, "concept": 218, "class": [218, 219], "quick": 218, "custom": 219, "implement": 219, "calibr": 219, "data": 219, "more": 219, "regist": 219, "content": 220, "indic": 220, "tabl": 220, "licens": 221, "time": 222, "fast": 222, "feedback": 222, "us": 224, "creat": 224, "compos": 224, "resolv": 224, "miscellan": 224, "common": 224, "pitfal": 224}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Barrier": [[35, "barrier"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "gates": [[33, "module-iqm.pulse.gates"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_Slepian": [[44, "cz-slepian"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "CZ_CRF": [[41, "cz-crf"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "Delay": [[55, "delay"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "XYGate": [[60, "xygate"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "Measure_Constant": [[67, "measure-constant"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "pulse": [[1, "module-iqm.pulse"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "CompositeGate": [[18, "compositegate"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "API reference": [[0, "api-reference"]], "CircuitOperation": [[5, "circuitoperation"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "CompositeCache": [[17, "compositecache"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "GateImplementation": [[20, "gateimplementation"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "builder": [[4, "module-iqm.pulse.builder"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "References": [[223, "references"]], "Using ScheduleBuilder": [[224, "using-schedulebuilder"]], "Creating TimeBoxes": [[224, "creating-timeboxes"]], "Composing TimeBoxes": [[224, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[224, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[224, "miscellaneous-features"]], "Common pitfalls": [[224, "common-pitfalls"]], "iqm.pulse.validation.InvalidInstructionError": [[211, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.validate_playlist_compatibility": [[216, "iqm-pulse-validation-validate-playlist-compatibility"]], "IQM Pulse": [[220, "iqm-pulse"]], "Contents": [[220, "contents"]], "Indices and tables": [[220, "indices-and-tables"]], "validation": [[208, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[209, "awgschedulevalidationdata"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[215, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "Changelog": [[217, "changelog"]], "Version 10.2.0 (2025-08-08)": [[217, "version-10-2-0-2025-08-08"]], "Features": [[217, "features"], [217, "id1"], [217, "id3"], [217, "id4"], [217, "id5"], [217, "id6"], [217, "id9"], [217, "id10"], [217, "id11"], [217, "id12"], [217, "id13"], [217, "id15"], [217, "id16"], [217, "id17"], [217, "id18"], [217, "id19"], [217, "id22"], [217, "id24"], [217, "id25"], [217, "id26"], [217, "id27"], [217, "id28"], [217, "id29"], [217, "id30"], [217, "id31"], [217, "id33"], [217, "id35"], [217, "id37"], [217, "id38"], [217, "id39"], [217, "id40"], [217, "id41"], [217, "id43"], [217, "id44"], [217, "id45"], [217, "id48"], [217, "id49"], [217, "id50"], [217, "id51"], [217, "id52"], [217, "id53"], [217, "id54"], [217, "id55"], [217, "id56"], [217, "id57"], [217, "id59"], [217, "id60"], [217, "id61"], [217, "id63"], [217, "id65"], [217, "id66"], [217, "id67"], [217, "id71"], [217, "id73"], [217, "id76"], [217, "id78"], [217, "id79"], [217, "id81"], [217, "id84"], [217, "id87"], [217, "id89"], [217, "id90"], [217, "id91"], [217, "id92"], [217, "id93"], [217, "id94"], [217, "id95"], [217, "id97"], [217, "id98"], [217, "id99"], [217, "id100"], [217, "id101"], [217, "id102"], [217, "id103"], [217, "id104"], [217, "id105"], [217, "id106"], [217, "id108"], [217, "id109"], [217, "id111"], [217, "id112"], [217, "id113"]], "Version 10.1.0 (2025-07-18)": [[217, "version-10-1-0-2025-07-18"]], "Bug Fixes": [[217, "bug-fixes"], [217, "id42"]], "Version 10.0.0 (2025-07-16)": [[217, "version-10-0-0-2025-07-16"]], "Breaking changes": [[217, "breaking-changes"], [217, "id23"], [217, "id62"], [217, "id77"], [217, "id86"], [217, "id88"], [217, "id96"], [217, "id110"]], "Version 9.21.0 (2025-07-10)": [[217, "version-9-21-0-2025-07-10"]], "Bug fixes": [[217, "id2"], [217, "id7"], [217, "id8"], [217, "id14"], [217, "id20"], [217, "id21"], [217, "id32"], [217, "id36"], [217, "id46"], [217, "id64"], [217, "id68"], [217, "id69"], [217, "id70"], [217, "id72"], [217, "id74"], [217, "id75"], [217, "id80"], [217, "id82"], [217, "id83"], [217, "id85"], [217, "id107"]], "Version 9.20.0 (2025-07-09)": [[217, "version-9-20-0-2025-07-09"]], "Version 9.19.0 (2025-07-08)": [[217, "version-9-19-0-2025-07-08"]], "Version 9.18.0 (2025-07-02)": [[217, "version-9-18-0-2025-07-02"]], "Version 9.17.0 (2025-07-01)": [[217, "version-9-17-0-2025-07-01"]], "Version 9.16.0 (2025-07-01)": [[217, "version-9-16-0-2025-07-01"]], "Version 9.15.0 (2025-06-17)": [[217, "version-9-15-0-2025-06-17"]], "Version 9.14.0 (2025-06-13)": [[217, "version-9-14-0-2025-06-13"]], "Version 9.13.0 (2025-06-11)": [[217, "version-9-13-0-2025-06-11"]], "Version 9.12.0 (2025-05-30)": [[217, "version-9-12-0-2025-05-30"]], "Version 9.11.0 (2025-05-28)": [[217, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[217, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[217, "version-9-9-0-2025-05-19"]], "Version 9.8.0 (2025-05-12)": [[217, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[217, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[217, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[217, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[217, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[217, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[217, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[217, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[217, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[217, "version-9-0-0-2025-04-09"]], "Version 8.13.0 (2025-04-07)": [[217, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[217, "version-8-12-0-2025-04-03"]], "Feature": [[217, "feature"]], "Version 8.11.0 (2025-04-02)": [[217, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[217, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[217, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[217, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[217, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[217, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[217, "version-8-5-0-2025-03-26"]], "Bug fix": [[217, "bug-fix"], [217, "id34"], [217, "id47"], [217, "id58"]], "Version 8.4.0 (2025-03-21)": [[217, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[217, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[217, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[217, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[217, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[217, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[217, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[217, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[217, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[217, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[217, "version-7-19-0-2025-02-04"]], "Version 7.18.0 (2025-02-04)": [[217, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[217, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[217, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[217, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[217, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[217, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[217, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[217, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[217, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[217, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[217, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[217, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[217, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[217, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[217, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[217, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[217, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[217, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[217, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[217, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[217, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[217, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[217, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[217, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[217, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[217, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[217, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[217, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[217, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[217, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[217, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[217, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[217, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[217, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[217, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[217, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[217, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[217, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[217, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[217, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[217, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[217, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[217, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[217, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[217, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[217, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[217, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[217, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[217, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[217, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[217, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[217, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[217, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[217, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[217, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[217, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[217, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[217, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[217, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[217, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[217, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[217, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[217, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[217, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[217, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[217, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[217, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[217, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[217, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[217, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[217, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[217, "version-1-0-2024-07-01"]], "iqm.pulse.validation.PlaylistValidationError": [[212, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.utils.phase_transformation": [[207, "iqm-pulse-utils-phase-transformation"]], "iqm.pulse.validation.validate_channel": [[214, "iqm-pulse-validation-validate-channel"]], "License": [[221, "license"]], "Pulse timing": [[222, "pulse-timing"]], "Measure and ReadoutTrigger": [[222, "measure-and-readouttrigger"]], "Fast feedback timing": [[222, "fast-feedback-timing"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[213, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "Concepts and classes": [[218, "concepts-and-classes"]], "Quick reference": [[218, "quick-reference"]], "Instructions": [[218, "instructions"]], "Schedules": [[218, "schedules"]], "TimeBoxes": [[218, "timeboxes"]], "QuantumOps": [[218, "quantumops"]], "GateImplementations": [[218, "gateimplementations"]], "Playlists": [[218, "playlists"]], "iqm.pulse.validation.AWGScheduleValidationError": [[210, "iqm-pulse-validation-awgschedulevalidationerror"]], "Custom gate implementations": [[219, "custom-gate-implementations"], [219, "id1"]], "QuantumOp": [[219, "quantumop"], [187, "quantumop"]], "GateImplementation class": [[219, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[219, "instructions-waveforms-and-calibration-data"]], "More base classes": [[219, "more-base-classes"]], "Registering gates and implementations": [[219, "registering-gates-and-implementations"]], "Probe_Constant": [[72, "probe-constant"]], "MOVE_TGSS_CRF": [[79, "move-tgss-crf"]], "Shelved_Measure_Constant": [[73, "shelved-measure-constant"]], "ABC_Constant_smooth": [[84, "abc-constant-smooth"]], "prx": [[83, "module-iqm.pulse.gates.prx"]], "MOVE_SLEPIAN_CRF": [[78, "move-slepian-crf"]], "MOVE_CustomWaveforms": [[77, "move-customwaveforms"]], "Constant_PRX_with_smooth_rise_fall": [[85, "constant-prx-with-smooth-rise-fall"]], "Shelved_Measure_CustomWaveforms": [[74, "shelved-measure-customwaveforms"]], "PRX_Cosine": [[86, "prx-cosine"]], "ProbePulse_CustomWaveforms_noIntegration": [[71, "probepulse-customwaveforms-nointegration"]], "PRX_CustomWaveforms": [[87, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[88, "prx-customwaveformssx"]], "MoveMarker": [[80, "movemarker"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "MOVE_CRF_CRF": [[76, "move-crf-crf"]], "PRX_DRAGCosineRiseFallSX": [[90, "prx-dragcosinerisefallsx"]], "iqm.pulse.gates.move.validate_move_instructions": [[82, "iqm-pulse-gates-move-validate-move-instructions"]], "move": [[75, "module-iqm.pulse.gates.move"]], "PRX_DRAGCosineRiseFall": [[89, "prx-dragcosinerisefall"]], "PRX_DRAGGaussian": [[91, "prx-draggaussian"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[81, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "utils": [[204, "module-iqm.pulse.utils"]], "iqm.pulse.scheduler.NONSOLID": [[193, "iqm-pulse-scheduler-nonsolid"]], "MultiplexedProbeTimeBox": [[200, "multiplexedprobetimebox"]], "SchedulingStrategy": [[202, "schedulingstrategy"]], "iqm.pulse.utils.map_waveform_param_types": [[205, "iqm-pulse-utils-map-waveform-param-types"]], "SegmentPointer": [[194, "segmentpointer"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[190, "iqm-pulse-quantum-ops-validate-op-calibration"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[196, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "timebox": [[199, "module-iqm.pulse.timebox"]], "TimeBox": [[203, "timebox"]], "iqm.pulse.scheduler.extend_hard_boundary": [[195, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.utils.normalize_angle": [[206, "iqm-pulse-utils-normalize-angle"]], "scheduler": [[191, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[192, "iqm-pulse-scheduler-blocking"]], "SchedulingAlgorithm": [[201, "schedulingalgorithm"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[188, "iqm-pulse-quantum-ops-quantumoptable"]], "PolynomialCosine": [[184, "polynomialcosine"]], "Slepian": [[185, "slepian"]], "iqm.pulse.scheduler.extend_schedule_new": [[198, "iqm-pulse-scheduler-extend-schedule-new"]], "quantum_ops": [[186, "module-iqm.pulse.quantum_ops"]], "iqm.pulse.scheduler.extend_schedule": [[197, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[189, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "AcquisitionMethod": [[153, "acquisitionmethod"]], "ComplexIntegration": [[155, "complexintegration"]], "MultiplexedIQPulse": [[160, "multiplexediqpulse"]], "ConditionalInstruction": [[156, "conditionalinstruction"]], "HdDrag": [[144, "hddrag"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[141, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "hd_drag": [[142, "module-iqm.pulse.playlist.hd_drag"]], "instructions": [[152, "module-iqm.pulse.playlist.instructions"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[149, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "FluxPulse": [[157, "fluxpulse"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[139, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[138, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "Instruction": [[159, "instruction"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[151, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "HdDragQ": [[146, "hddragq"]], "HdDragI": [[145, "hddragi"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[140, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[148, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[143, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "IQPulse": [[158, "iqpulse"]], "Block": [[154, "block"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[150, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[147, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "TimeTrace": [[164, "timetrace"]], "ModulatedCosineRiseFall": [[183, "modulatedcosinerisefall"]], "Segment": [[171, "segment"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[175, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[172, "iqm-pulse-playlist-schedule-tolerance"]], "RealPulse": [[162, "realpulse"]], "ChirpImag": [[178, "chirpimag"]], "waveforms": [[176, "module-iqm.pulse.playlist.waveforms"]], "schedule": [[168, "module-iqm.pulse.playlist.schedule"]], "ThresholdStateDiscrimination": [[163, "thresholdstatediscrimination"]], "CosineRiseFallDerivative": [[182, "cosinerisefallderivative"]], "Nothing": [[169, "nothing"]], "Cosine": [[179, "cosine"]], "Wait": [[166, "wait"]], "VirtualRZ": [[165, "virtualrz"]], "CosineRise": [[181, "cosinerise"]], "Chirp": [[177, "chirp"]], "playlist": [[167, "module-iqm.pulse.playlist.playlist"], [121, "module-iqm.pulse.playlist"]], "CosineFall": [[180, "cosinefall"]], "visualisation": [[173, "module-iqm.pulse.playlist.visualisation"]], "Schedule": [[170, "schedule"]], "base": [[174, "module-iqm.pulse.playlist.visualisation.base"]], "ReadoutTrigger": [[161, "readouttrigger"]], "fast_drag": [[132, "module-iqm.pulse.playlist.fast_drag"]], "UGate": [[119, "ugate"]], "SuppressedPulse": [[136, "suppressedpulse"]], "channel": [[122, "module-iqm.pulse.playlist.channel"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[131, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[137, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.gates.rz.get_unitary_rz": [[115, "iqm-pulse-gates-rz-get-unitary-rz"]], "RealChannelConfig": [[128, "realchannelconfig"]], "ChannelConfiguration": [[123, "channelconfiguration"]], "ProbeChannelProperties": [[127, "probechannelproperties"]], "SXGate": [[117, "sxgate"]], "iqm.pulse.gates.u.get_unitary_u": [[120, "iqm-pulse-gates-u-get-unitary-u"]], "IQChannelConfig": [[126, "iqchannelconfig"]], "FastDragQ": [[135, "fastdragq"]], "FastDragI": [[134, "fastdragi"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[130, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "ChannelProperties": [[125, "channelproperties"]], "iqm.pulse.playlist.channel.get_channel_properties": [[129, "iqm-pulse-playlist-channel-get-channel-properties"]], "sx": [[116, "module-iqm.pulse.gates.sx"]], "u": [[118, "module-iqm.pulse.gates.u"]], "ChannelDescription": [[124, "channeldescription"]], "FastDrag": [[133, "fastdrag"]], "PRX_ModulatedDRAGCosineRiseFall": [[98, "prx-modulateddragcosinerisefall"]], "PRX_FastDragSX": [[94, "prx-fastdragsx"]], "RZ_ACStarkShift_smoothConstant": [[112, "rz-acstarkshift-smoothconstant"]], "PRX_HdDrag": [[95, "prx-hddrag"]], "Reset_Conditional": [[107, "reset-conditional"]], "RZ_PRX_Composite": [[113, "rz-prx-composite"]], "PRX_ModulatedCustomWaveForms": [[97, "prx-modulatedcustomwaveforms"]], "PRX_DRAGGaussianSX": [[92, "prx-draggaussiansx"]], "iqm.pulse.gates.register_operation": [[103, "iqm-pulse-gates-register-operation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[101, "iqm-pulse-gates-prx-get-unitary-prx"]], "reset": [[104, "module-iqm.pulse.gates.reset"]], "Reset_Wait": [[108, "reset-wait"]], "PRX_FastDrag": [[93, "prx-fastdrag"]], "iqm.pulse.gates.register_implementation": [[102, "iqm-pulse-gates-register-implementation"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[105, "iqm-pulse-gates-reset-reset-feedback-key"]], "rz": [[109, "module-iqm.pulse.gates.rz"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[106, "iqm-pulse-gates-reset-reset-measurement-key"]], "RZ_ACStarkShift": [[110, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[111, "rz-acstarkshift-cosinerisefall"]], "RZ_Virtual": [[114, "rz-virtual"]], "PRX_HdDragSX": [[96, "prx-hddragsx"]], "PRX_SinglePulse_GateImplementation": [[99, "prx-singlepulse-gateimplementation"]], "PrxGateImplementation": [[100, "prxgateimplementation"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [75, "module-iqm.pulse.gates.move"], [83, "module-iqm.pulse.gates.prx"], [104, "module-iqm.pulse.gates.reset"], [109, "module-iqm.pulse.gates.rz"], [116, "module-iqm.pulse.gates.sx"], [118, "module-iqm.pulse.gates.u"], [121, "module-iqm.pulse.playlist"], [122, "module-iqm.pulse.playlist.channel"], [132, "module-iqm.pulse.playlist.fast_drag"], [142, "module-iqm.pulse.playlist.hd_drag"], [152, "module-iqm.pulse.playlist.instructions"], [167, "module-iqm.pulse.playlist.playlist"], [168, "module-iqm.pulse.playlist.schedule"], [173, "module-iqm.pulse.playlist.visualisation"], [174, "module-iqm.pulse.playlist.visualisation.base"], [176, "module-iqm.pulse.playlist.waveforms"], [186, "module-iqm.pulse.quantum_ops"], [191, "module-iqm.pulse.scheduler"], [199, "module-iqm.pulse.timebox"], [204, "module-iqm.pulse.utils"], [208, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "customizable_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.customizable_gates"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.compositegate class method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.optional_calibration_keys"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "_timebox_cache (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation._timebox_cache"]], "construct_factorizable() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.construct_factorizable"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "id (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.id"]], "may_have_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.may_have_calibration"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.optional_calibration_keys"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "sub_implementations (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.sub_implementations"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate class method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "customizable_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.customizable_gates"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "registered_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.registered_gates"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[72, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "shelved_measure_constant (class in iqm.pulse.gates.measure)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_q"]], "shelved_measure_customwaveforms (class in iqm.pulse.gates.measure)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms"]], "_call() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_customwaveforms attribute)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.dependent_waves"]], "probe_timebox() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.probe_timebox"]], "iqm.pulse.gates.move": [[75, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_slepian_crf (class in iqm.pulse.gates.move)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[80, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[80, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[81, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[82, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[83, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_cosine (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_Cosine"]], "dependent_waves (iqm.pulse.gates.prx.prx_cosine attribute)": [[86, "iqm.pulse.gates.prx.PRX_Cosine.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_cosine attribute)": [[86, "iqm.pulse.gates.prx.PRX_Cosine.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_cosine attribute)": [[86, "iqm.pulse.gates.prx.PRX_Cosine.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_cosine attribute)": [[86, "iqm.pulse.gates.prx.PRX_Cosine.wave_q"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[88, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[88, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[88, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[88, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[92, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[92, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[92, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[92, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[94, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[94, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[94, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[94, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[98, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[99, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[99, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "prxgateimplementation (class in iqm.pulse.gates.prx)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation"]], "_call() (iqm.pulse.gates.prx.prxgateimplementation method)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prxgateimplementation method)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prxgateimplementation class method)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prxgateimplementation method)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prxgateimplementation method)": [[100, "iqm.pulse.gates.prx.PrxGateImplementation.ry"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[101, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[102, "iqm.pulse.gates.register_implementation"]], "register_operation() (in module iqm.pulse.gates)": [[103, "iqm.pulse.gates.register_operation"]], "iqm.pulse.gates.reset": [[104, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[105, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[106, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[107, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[107, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "customizable_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[107, "iqm.pulse.gates.reset.Reset_Conditional.customizable_gates"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[107, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[107, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[108, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[108, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[108, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[108, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[108, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[108, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[109, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[112, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[113, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "customizable_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[113, "iqm.pulse.gates.rz.RZ_PRX_Composite.customizable_gates"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[113, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[114, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[114, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[114, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[114, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[114, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[115, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[116, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[117, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[117, "iqm.pulse.gates.sx.SXGate._call"]], "customizable_gates (iqm.pulse.gates.sx.sxgate attribute)": [[117, "iqm.pulse.gates.sx.SXGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[117, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[118, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[119, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[119, "iqm.pulse.gates.u.UGate._call"]], "customizable_gates (iqm.pulse.gates.u.ugate attribute)": [[119, "iqm.pulse.gates.u.UGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[119, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[120, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[121, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[122, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[123, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[124, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[124, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[125, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[126, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[126, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[127, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[127, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[127, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[127, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[128, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[128, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[129, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[130, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[131, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[132, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[133, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[133, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[134, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[134, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[135, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[135, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[136, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[136, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[137, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[138, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[139, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[140, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[141, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[142, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[143, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[144, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[144, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[145, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[145, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[146, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[146, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[147, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[148, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[149, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[150, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[151, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[152, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[153, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[153, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[155, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[156, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[156, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[156, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[156, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[157, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[157, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[158, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[158, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[158, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[159, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[159, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[159, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[159, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[159, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[159, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[160, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[161, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[161, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[162, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[162, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[162, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[162, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[162, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[163, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[163, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[163, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[164, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[164, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[165, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[165, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[166, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[167, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[168, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[169, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[170, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[170, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[170, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[171, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[171, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[171, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[171, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[171, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[171, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[171, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[171, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[171, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[172, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[173, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[174, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[175, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[176, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[177, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[177, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[177, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[178, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[178, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[179, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[179, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[179, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[180, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[180, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[181, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[181, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[182, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[182, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[183, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[183, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[183, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "polynomialcosine (class in iqm.pulse.playlist.waveforms)": [[184, "iqm.pulse.playlist.waveforms.PolynomialCosine"]], "_sample() (iqm.pulse.playlist.waveforms.polynomialcosine method)": [[184, "iqm.pulse.playlist.waveforms.PolynomialCosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.polynomialcosine static method)": [[184, "iqm.pulse.playlist.waveforms.PolynomialCosine.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[185, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[185, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[185, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[185, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[185, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[185, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[186, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[187, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[187, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[187, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[187, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[187, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[187, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[187, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[188, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[189, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[190, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[191, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[192, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[193, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[194, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[194, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[194, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[194, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[194, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[194, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[194, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[195, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[196, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[197, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[198, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[199, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[200, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[200, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[201, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[201, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[201, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[202, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[202, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[202, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[203, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[203, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[203, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[203, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[203, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[203, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[203, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[203, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[204, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[205, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[206, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[207, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[208, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[209, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[210, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[211, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[212, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[213, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[214, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[215, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[216, "iqm.pulse.validation.validate_playlist_compatibility"]]}})