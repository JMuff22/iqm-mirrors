Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.Circuit", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit", "api/iqm.pulse.gates.cz.round_to_granularity", "api/iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_Cosine", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.PrxGateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.register_operation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineFallFlex", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.CosineRiseFlex", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.PiecewiseConstant", "api/iqm.pulse.playlist.waveforms.PolynomialCosine", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.Circuit.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.rst", "api/iqm.pulse.gates.cz.round_to_granularity.rst", "api/iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_Cosine.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.PrxGateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.register_operation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineFallFlex.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFlex.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.PiecewiseConstant.rst", "api/iqm.pulse.playlist.waveforms.PolynomialCosine.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "Circuit", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_SmoothConstant", "FluxPulseGate_TGSS_CRF", "FluxPulse_SmoothConstant_SmoothConstant", "FluxPulse_SmoothConstant_coupler", "FluxPulse_SmoothConstant_qubit", "iqm.pulse.gates.cz.round_to_granularity", "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "Shelved_Measure_Constant", "Shelved_Measure_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_SLEPIAN_CRF", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_Cosine", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "PrxGateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "iqm.pulse.gates.register_operation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineFallFlex", "CosineRise", "CosineRiseFallDerivative", "CosineRiseFlex", "ModulatedCosineRiseFall", "PiecewiseConstant", "PolynomialCosine", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 5, 6, 17, 30, 37, 38, 41, 43, 46, 60, 62, 65, 76, 78, 81, 128, 129, 131, 132, 137, 138, 143, 159, 161, 166, 175, 176, 177, 207, 208, 213, 219, 223, 226, 227, 228, 229, 231, 232, 233, 234], "gate": [1, 5, 6, 12, 18, 19, 20, 21, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 160, 195, 197, 199, 217, 227, 228, 230, 232, 233, 234], "instruct": [1, 4, 6, 11, 17, 21, 33, 36, 50, 60, 62, 76, 77, 78, 81, 82, 84, 87, 88, 89, 91, 92, 106, 107, 115, 119, 121, 128, 131, 132, 134, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 217, 218, 221, 223, 225, 226, 227, 230, 232, 234], "schedul": [1, 4, 6, 17, 21, 32, 36, 49, 50, 62, 76, 77, 78, 81, 87, 88, 89, 91, 92, 95, 106, 107, 115, 117, 119, 121, 128, 132, 161, 173, 174, 176, 178, 197, 204, 209, 210, 211, 212, 213, 218, 220, 227, 229, 230, 232], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 24, 25, 26, 27, 32, 34, 35, 36, 49, 50, 59, 60, 62, 75, 76, 77, 78, 84, 89, 107, 111, 114, 115, 117, 121, 128, 166, 196, 197, 198, 200, 217, 227, 228, 229, 230, 233, 234], "comput": [1, 5, 6, 17, 32, 76, 84, 114, 125, 128, 132, 143, 144, 147, 148, 150, 151, 152, 153, 164, 166, 177, 178, 197, 201, 205, 206, 213, 217, 227, 228, 229, 230, 231, 234], "full": [1, 2, 4, 10, 17, 34, 35, 37, 41, 52, 54, 55, 56, 58, 59, 60, 63, 69, 73, 82, 90, 111, 116, 123, 125, 128, 129, 139, 143, 149, 159, 174, 175, 180, 181, 183, 192, 196, 201, 209, 214, 218, 227, 229], "path": [1, 2, 3, 4, 8, 10, 17, 21, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 59, 60, 63, 69, 73, 74, 75, 76, 80, 82, 83, 85, 86, 90, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 111, 116, 118, 123, 125, 128, 129, 139, 149, 159, 174, 175, 177, 180, 181, 183, 196, 201, 209, 213, 214, 218, 227], "iqm": [1, 2, 4, 5, 6, 10, 11, 12, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 209, 210, 211, 212, 213, 214, 218, 219, 227, 228, 229, 231, 232, 234], "subpackag": [1, 34, 128, 180], "modul": [1, 2, 5, 6, 11, 12, 17, 18, 19, 20, 21, 32, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 65, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 117, 118, 119, 120, 121, 124, 126, 128, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 149, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 210, 211, 212, 213, 219, 227, 228, 229, 230], "base": [2, 5, 6, 11, 12, 18, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 65, 67, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 204, 210, 211, 212, 213, 219, 227, 231, 232], "util": [2, 6, 227, 229], "function": [2, 4, 6, 7, 10, 14, 17, 21, 32, 34, 36, 41, 49, 50, 82, 84, 90, 106, 114, 115, 116, 117, 125, 129, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 181, 188, 191, 193, 195, 196, 197, 201, 213, 214, 218, 227, 229], "depend": [2, 20, 21, 32, 36, 49, 50, 62, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 121, 151, 163, 227, 229], "other": [2, 6, 12, 16, 18, 19, 21, 62, 76, 78, 81, 84, 106, 115, 176, 186, 197, 205, 206, 211, 213, 223, 226, 227, 228, 229, 231, 232, 233, 234], "puls": [2, 4, 5, 6, 10, 11, 12, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 209, 210, 211, 212, 213, 214, 218, 219, 227, 228, 229, 233, 234], "A": [3, 6, 7, 12, 15, 19, 38, 58, 76, 78, 80, 81, 144, 161, 184, 197, 201, 207, 208, 210, 213, 215, 227, 228, 229, 230, 231, 232, 233, 234], "b": [3, 15, 62, 76, 78, 81, 149, 201, 207, 208, 213, 231], "merge_non": 3, "true": [3, 6, 9, 12, 20, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 68, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 118, 119, 132, 134, 143, 177, 197, 227, 234], "merg": [3, 6, 205], "two": [3, 6, 12, 38, 41, 43, 46, 50, 62, 63, 65, 70, 76, 78, 80, 81, 82, 84, 93, 95, 144, 148, 197, 205, 213, 227, 228, 229, 232, 234], "dictionari": [3, 65, 150, 227, 229], "recurs": [3, 6, 213, 228, 234], "leav": 3, "origin": [3, 12, 16, 160, 177, 178, 227, 231], "unchang": [3, 177], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 204, 205, 206, 207, 208, 210, 213, 215, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 232, 234], "dict": [3, 5, 6, 7, 8, 9, 11, 13, 14, 19, 20, 21, 23, 24, 25, 26, 27, 33, 39, 40, 50, 52, 70, 76, 77, 78, 84, 94, 95, 104, 109, 110, 115, 121, 136, 140, 151, 177, 184, 186, 192, 193, 194, 195, 197, 198, 205, 206, 207, 208, 210, 213, 226, 227, 229], "anoth": [3, 6, 36, 50, 84, 87, 127, 197, 207, 208, 227, 228, 229, 234], "bool": [3, 6, 9, 12, 19, 20, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 68, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 118, 119, 132, 134, 138, 140, 141, 142, 143, 151, 152, 153, 177, 197, 204, 205, 206, 227], "whether": [3, 6, 14, 19, 89, 109, 132, 138, 143, 205, 206, 229, 231, 234], "also": [3, 5, 6, 12, 18, 20, 21, 32, 36, 49, 50, 62, 77, 84, 88, 96, 97, 105, 106, 114, 115, 117, 131, 177, 197, 201, 205, 206, 208, 213, 217, 227, 229, 231, 232, 234], "none": [3, 5, 6, 8, 9, 11, 12, 13, 18, 19, 21, 24, 25, 27, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 114, 115, 118, 119, 120, 124, 126, 160, 162, 166, 170, 171, 177, 178, 197, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 224, 226, 227, 229], "empti": [3, 12, 21, 70, 76, 77, 78, 81, 170, 177, 197, 227, 229], "size": [3, 14, 229], "valu": [3, 6, 12, 14, 21, 42, 43, 44, 45, 46, 47, 48, 51, 53, 57, 65, 67, 70, 71, 74, 75, 76, 78, 80, 81, 83, 85, 86, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 118, 143, 144, 151, 152, 153, 161, 165, 167, 169, 170, 173, 184, 190, 193, 200, 211, 212, 227, 228, 229, 234], "from": [3, 6, 7, 8, 12, 14, 18, 19, 20, 21, 38, 39, 40, 49, 50, 52, 70, 76, 84, 88, 95, 96, 97, 105, 106, 114, 120, 124, 126, 132, 137, 140, 143, 144, 147, 148, 150, 151, 160, 164, 167, 170, 177, 178, 182, 183, 184, 186, 190, 192, 193, 194, 195, 204, 206, 210, 213, 223, 227, 228, 229, 231, 232, 234], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 32, 33, 36, 38, 49, 50, 57, 58, 62, 65, 68, 70, 72, 76, 77, 78, 81, 84, 88, 89, 91, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 121, 122, 124, 126, 127, 131, 132, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 169, 177, 178, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 204, 205, 206, 207, 208, 210, 213, 215, 216, 217, 224, 226, 227, 229], "copi": [3, 6, 12, 88, 166, 177, 178, 197, 231], "content": [3, 6, 7, 12, 132, 166, 177, 178, 197, 204, 212, 213, 227, 228, 229, 231, 234], "take": [3, 7, 12, 21, 38, 50, 104, 177, 192, 195, 197, 227, 229, 232, 234], "preced": [3, 35, 36, 62, 121, 217], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 32, 33, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 68, 70, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 131, 132, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 166, 169, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 219, 224, 226, 227, 229, 231], "tool": [4, 201, 204, 230], "build": [4, 6, 7, 19, 21, 76, 77, 78, 88, 94, 95, 96, 97, 210, 213, 227, 229], "class": [4, 5, 6, 7, 10, 11, 12, 17, 18, 19, 20, 21, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 209, 210, 211, 212, 213, 218, 219, 227, 230, 231], "inherit": [4, 10, 17, 20, 21, 32, 35, 36, 37, 41, 49, 50, 52, 60, 63, 69, 73, 76, 77, 78, 82, 84, 90, 94, 95, 96, 97, 104, 105, 107, 111, 114, 115, 116, 117, 121, 123, 125, 129, 139, 149, 159, 175, 183, 196, 201, 209, 218, 227, 229], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 14, 89, 227], "schedulebuild": [4, 12, 18, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 121, 124, 126, 213, 227, 228, 229, 230], "builder": [5, 6, 12, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 227, 228, 229, 232, 234], "name": [5, 6, 7, 11, 12, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 65, 67, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 117, 118, 119, 120, 121, 124, 126, 131, 137, 160, 164, 177, 197, 198, 199, 206, 210, 211, 212, 213, 227, 228, 229, 231, 234], "locu": [5, 6, 7, 11, 12, 19, 20, 21, 26, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 197, 199, 210, 213, 227, 228, 229, 232, 234], "arg": [5, 12, 21, 32, 36, 49, 50, 84, 114, 115, 117, 227, 229], "factori": [5, 6, 132, 134, 164, 197, 210, 213], "implement": [5, 6, 7, 12, 13, 17, 18, 19, 20, 21, 24, 25, 26, 32, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 114, 115, 117, 118, 119, 120, 121, 124, 126, 140, 143, 160, 162, 170, 171, 177, 197, 199, 200, 217, 227, 228, 230, 232, 233, 234], "object": [5, 6, 11, 12, 18, 33, 130, 131, 132, 148, 160, 166, 177, 178, 197, 204, 213, 219, 227, 229, 231], "specif": [5, 6, 21, 32, 34, 35, 36, 49, 50, 60, 84, 106, 114, 115, 117, 121, 131, 143, 177, 195, 197, 219, 223, 227, 228, 229, 231, 234], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 38, 39, 40, 49, 50, 59, 61, 62, 76, 77, 78, 81, 82, 84, 107, 109, 110, 111, 113, 114, 115, 117, 120, 121, 124, 126, 160, 196, 197, 198, 199, 200, 213, 219, 227, 228, 229, 230, 232, 234], "appli": [5, 6, 38, 50, 62, 81, 82, 84, 87, 88, 106, 115, 166, 197, 227, 228, 229, 231, 232, 234], "part": [5, 6, 21, 52, 58, 91, 170, 185, 187, 189, 190, 192, 197, 204, 213, 227, 228, 229, 231, 232, 234], "qpu": [5, 6, 21, 22, 36, 70, 173, 197, 205, 209, 213, 227, 228, 229, 234], "e": [5, 6, 11, 19, 20, 21, 32, 36, 49, 50, 62, 74, 75, 76, 77, 78, 79, 80, 81, 84, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 121, 123, 125, 140, 151, 158, 184, 186, 192, 193, 194, 195, 197, 201, 205, 206, 207, 208, 213, 227, 229, 233, 234], "g": [5, 6, 11, 19, 20, 21, 32, 36, 49, 50, 62, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 121, 140, 144, 151, 152, 153, 154, 155, 156, 157, 158, 184, 186, 192, 193, 194, 195, 205, 206, 213, 227, 229, 233], "circuit": [5, 6, 9, 10, 12, 13, 14, 62, 76, 78, 81, 89, 115, 121, 197, 227, 228, 229, 230, 232, 234], "we": [5, 6, 18, 62, 70, 84, 121, 132, 143, 144, 147, 148, 151, 195, 197, 217, 229, 231, 232, 234], "current": [5, 38, 76, 78, 81, 84, 204], "support": [5, 6, 11, 34, 38, 70, 76, 78, 81, 115, 190, 195, 215, 223, 226, 227, 228, 229, 231, 232], "follow": [5, 6, 7, 62, 76, 77, 82, 114, 121, 137, 147, 172, 195, 201, 205, 213, 223, 226, 227, 228, 231, 232, 234], "nativ": [5, 11, 34, 197, 234], "execut": [5, 6, 35, 36, 131, 166, 174, 177, 197, 201, 227, 228, 229, 230, 231, 232, 234], "qubit": [5, 6, 11, 12, 13, 14, 15, 16, 21, 32, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 65, 67, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 106, 107, 111, 115, 116, 117, 121, 123, 125, 195, 197, 205, 206, 227, 228, 229, 232, 233, 234], "descript": [5, 192, 213, 231], "measur": [5, 6, 9, 21, 38, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 121, 132, 160, 197, 206, 227, 228, 229, 230, 234], "1": [5, 6, 12, 15, 21, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 165, 178, 184, 185, 188, 190, 191, 193, 195, 197, 205, 211, 212, 213, 229, 230, 231, 232, 233, 234], "kei": [5, 18, 19, 21, 38, 39, 40, 76, 77, 78, 81, 112, 113, 114, 120, 124, 126, 227, 228, 229], "str": [5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 117, 118, 119, 120, 121, 124, 126, 131, 132, 136, 140, 151, 160, 162, 163, 164, 170, 171, 177, 182, 184, 186, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 208, 210, 213, 226, 229], "feedback_kei": [5, 38, 76, 78, 81, 227], "z": [5, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 65, 73, 74, 75, 79, 83, 84, 85, 86, 95, 116, 121, 123, 125, 127, 217, 227, 229], "basi": [5, 73, 74, 75, 79, 114, 121, 125, 140, 143, 144, 147, 148, 150, 152, 153, 154, 155, 156, 157, 197, 231], "prx": [5, 6, 12, 20, 38, 39, 40, 74, 75, 76, 77, 78, 79, 80, 81, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 120, 121, 124, 126, 197, 217, 227, 228, 229, 232, 233, 234], "angl": [5, 12, 21, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 83, 84, 85, 86, 90, 91, 95, 106, 107, 108, 114, 116, 121, 122, 124, 125, 127, 164, 197, 216, 217, 227, 229, 234], "float": [5, 6, 16, 21, 32, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 115, 117, 118, 119, 121, 122, 126, 127, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 164, 165, 169, 170, 172, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 204, 206, 207, 208, 216, 217, 219, 227, 229], "phase": [5, 6, 12, 38, 41, 43, 46, 49, 74, 75, 76, 77, 78, 79, 80, 82, 84, 88, 90, 91, 93, 95, 106, 107, 108, 117, 118, 121, 123, 164, 165, 172, 184, 185, 186, 192, 194, 197, 217, 227, 228, 229, 234], "x": [5, 90, 91, 95, 97, 106, 107, 123, 125, 194, 227, 229, 233], "rotat": [5, 21, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 67, 83, 84, 85, 86, 90, 91, 95, 106, 107, 108, 116, 121, 122, 123, 125, 127, 217, 227, 229, 234], "cc_prx": [5, 6, 114, 227, 229, 232], "feedback_qubit": [5, 6, 38, 227, 232], "classic": [5, 37, 38, 227, 232], "reset": [5, 6, 114, 115, 165, 197, 227, 228, 229, 232], "": [5, 6, 12, 18, 20, 32, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 118, 119, 121, 125, 131, 132, 138, 140, 143, 144, 147, 148, 151, 158, 177, 184, 186, 192, 193, 194, 195, 210, 215, 227, 228, 229, 230, 231, 234], "0": [5, 6, 12, 15, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 115, 118, 119, 125, 126, 132, 134, 140, 141, 142, 147, 150, 151, 152, 153, 154, 155, 158, 163, 165, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 204, 210, 213, 217, 229, 230, 231, 234], "rangl": [5, 82, 111], "cz": [5, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 64, 65, 82, 84, 121, 197, 227, 228, 229, 233, 234], "2": [5, 6, 12, 15, 38, 49, 58, 65, 66, 70, 74, 75, 76, 80, 81, 82, 90, 95, 100, 101, 102, 103, 104, 116, 117, 123, 124, 125, 126, 127, 132, 141, 142, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 184, 185, 186, 190, 192, 193, 194, 195, 205, 213, 229, 231, 232, 233, 234], "move": [5, 50, 83, 84, 85, 86, 87, 204, 227, 234], "state": [5, 15, 41, 60, 81, 82, 84, 90, 95, 111, 114, 115, 121, 123, 125, 197, 217, 228, 229, 231, 232], "between": [5, 6, 17, 21, 60, 62, 76, 82, 84, 87, 89, 115, 163, 177, 190, 195, 201, 228, 232], "reson": [5, 82, 83, 84, 85, 86, 87, 88, 117, 126, 132, 205, 206, 217, 227, 228, 233, 234], "long": [5, 6, 58, 82, 91, 132, 187, 189, 227, 228, 229], "least": [5, 6, 9, 21, 62, 132, 138, 144, 148, 205, 206, 223, 226, 228, 229, 231, 234], "one": [5, 6, 9, 12, 19, 21, 39, 40, 43, 46, 50, 63, 76, 77, 81, 91, 177, 193, 197, 205, 206, 210, 213, 227, 228, 229, 231, 232, 234], "compon": [5, 6, 11, 21, 22, 29, 30, 31, 36, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 60, 62, 70, 76, 78, 81, 83, 84, 85, 86, 92, 114, 115, 118, 119, 132, 137, 140, 141, 142, 151, 152, 153, 167, 173, 195, 197, 205, 206, 210, 213, 227, 228, 229, 234], "i": [5, 6, 7, 11, 12, 14, 15, 18, 19, 20, 21, 22, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 123, 125, 132, 140, 141, 142, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 169, 170, 177, 178, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 204, 205, 206, 207, 208, 213, 217, 223, 226, 227, 228, 229, 230, 231, 232, 234], "barrier": [5, 12, 13, 197, 229], "delai": [5, 6, 38, 74, 75, 76, 77, 80, 114, 160, 167, 227, 228, 232], "durat": [5, 6, 21, 32, 33, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 121, 132, 138, 140, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 204, 205, 206, 207, 208, 210, 213, 223, 226, 227, 228, 229, 232, 234], "forc": [5, 35, 60, 132, 138], "For": [5, 6, 12, 15, 18, 24, 25, 76, 132, 147, 177, 184, 197, 227, 228, 229, 231, 232, 234], "each": [5, 6, 11, 12, 13, 21, 34, 38, 76, 78, 81, 84, 88, 115, 131, 144, 148, 167, 177, 197, 205, 206, 210, 213, 226, 228, 229, 231, 232, 234], "you": [5, 7, 12, 19, 76, 77, 84, 173, 197, 227, 230, 231, 234], "mai": [5, 6, 19, 20, 21, 22, 32, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 114, 115, 117, 118, 119, 121, 170, 173, 197, 213, 228, 229, 231, 232], "option": [5, 6, 11, 12, 13, 14, 19, 21, 33, 76, 177, 197, 227, 229, 232], "specifi": [5, 21, 32, 38, 140, 166, 211, 229, 232, 234], "which": [5, 6, 12, 16, 21, 36, 49, 58, 76, 84, 91, 109, 110, 117, 121, 143, 144, 145, 146, 147, 148, 154, 155, 156, 177, 178, 185, 186, 192, 194, 195, 197, 205, 213, 217, 227, 228, 229, 230, 231, 232, 234], "contain": [5, 6, 9, 12, 20, 21, 38, 58, 76, 77, 78, 81, 89, 115, 131, 144, 147, 148, 150, 156, 163, 165, 166, 169, 177, 197, 210, 213, 223, 227, 228, 229, 231, 234], "an": [5, 6, 7, 11, 12, 14, 15, 17, 19, 20, 21, 30, 35, 49, 60, 68, 70, 76, 78, 82, 90, 91, 92, 94, 96, 106, 109, 110, 117, 118, 119, 121, 122, 125, 127, 131, 132, 133, 140, 163, 165, 167, 177, 178, 182, 188, 191, 195, 197, 205, 207, 210, 213, 217, 220, 221, 227, 228, 229, 230, 231, 232, 234], "us": [5, 6, 11, 12, 17, 19, 20, 21, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 62, 65, 67, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 88, 91, 94, 95, 106, 112, 113, 114, 115, 117, 120, 121, 124, 125, 126, 131, 132, 140, 143, 144, 148, 150, 151, 158, 161, 170, 172, 173, 176, 177, 182, 184, 186, 189, 192, 193, 194, 195, 197, 205, 206, 211, 213, 217, 223, 226, 227, 228, 229, 230, 231, 232, 233], "multipl": [5, 38, 57, 58, 76, 78, 81, 115, 132, 138, 140, 151, 156, 163, 167, 170, 184, 186, 192, 193, 194, 195, 227, 228], "experiment": [5, 70], "normal": [5, 18, 21, 38, 70, 152, 153, 156, 195, 197, 216, 227, 229, 231], "field": [5, 170, 227, 229, 231], "should": [5, 6, 19, 21, 38, 50, 52, 76, 77, 78, 81, 91, 112, 113, 131, 132, 143, 144, 148, 160, 195, 197, 201, 205, 206, 227, 229, 231, 232], "omit": 5, "thi": [5, 6, 12, 18, 19, 20, 21, 32, 34, 36, 38, 39, 40, 49, 50, 52, 62, 65, 67, 70, 76, 77, 78, 81, 82, 84, 87, 91, 94, 95, 96, 97, 104, 105, 106, 107, 112, 113, 114, 115, 117, 121, 131, 132, 140, 143, 148, 150, 151, 160, 165, 167, 168, 170, 173, 177, 183, 184, 186, 187, 189, 190, 192, 193, 194, 195, 197, 201, 204, 205, 207, 208, 211, 213, 227, 228, 229, 231, 232, 234], "select": [5, 12, 16, 232, 234], "default": [5, 6, 7, 12, 19, 21, 32, 33, 36, 38, 39, 40, 49, 50, 76, 77, 78, 81, 84, 107, 109, 114, 115, 117, 120, 121, 124, 126, 140, 151, 165, 170, 184, 185, 186, 192, 193, 194, 195, 197, 200, 227, 228, 229, 234], "see": [5, 6, 20, 62, 76, 78, 81, 93, 96, 97, 98, 99, 100, 101, 102, 103, 127, 140, 147, 151, 183, 192, 213, 227, 228, 229, 231, 232], "submodul": 5, "under": [5, 19, 21, 38, 109, 114, 120, 124, 126, 201, 213, 231], "more": [5, 6, 20, 62, 140, 161, 188, 191, 193, 197, 213, 227, 228, 231, 232], "detail": [5, 140, 192, 195, 197, 228, 230, 232], "about": [5, 12, 89, 163, 165, 166, 169, 227, 228, 232, 234], "attribut": [5, 6, 7, 11, 12, 17, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 65, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 117, 118, 119, 120, 121, 124, 126, 131, 132, 133, 134, 135, 140, 141, 142, 143, 149, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 210, 211, 212, 213, 219, 227, 229, 231, 232], "method": [5, 6, 11, 12, 18, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 65, 67, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 204, 210, 211, 212, 213, 219, 227, 229, 234], "tupl": [5, 6, 8, 11, 16, 18, 19, 21, 22, 24, 25, 27, 38, 58, 70, 76, 77, 78, 114, 115, 120, 124, 126, 132, 134, 136, 148, 158, 163, 164, 165, 166, 167, 168, 169, 177, 197, 210, 213, 215, 217, 219, 227, 229], "ani": [5, 6, 7, 8, 11, 12, 18, 19, 21, 24, 25, 26, 27, 32, 36, 49, 50, 76, 77, 78, 81, 84, 114, 115, 117, 143, 167, 176, 177, 195, 197, 205, 206, 210, 213, 227, 228, 229, 231, 234], "inform": [5, 6, 33, 89, 197, 227, 228, 229, 231, 232, 234], "bear": 5, "act": [5, 6, 14, 15, 16, 19, 21, 22, 34, 60, 62, 77, 84, 114, 115, 121, 197, 205, 206, 227, 228, 229, 231, 232, 234], "argument": [5, 12, 13, 18, 21, 32, 36, 38, 49, 50, 76, 77, 78, 95, 115, 117, 121, 143, 197, 227, 229, 234], "valid": [5, 6, 9, 11, 19, 21, 82, 89, 163, 165, 166, 169, 177, 199, 200, 213, 219, 227, 234], "op_tabl": [5, 6, 9, 12, 19, 38, 39, 40, 114, 120, 124, 126, 229], "against": [5, 6, 11, 170, 200, 231, 234], "tabl": [5, 6, 7, 9, 12, 13, 14, 110, 131, 198, 227], "definit": [5, 6, 7, 8, 11, 13, 20, 36, 77, 84, 110, 127, 139, 149, 183, 197, 198, 227, 228, 229, 231], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 14, 19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 117, 118, 119, 121, 124, 126, 196, 198, 199, 227, 230, 234], "allow": [5, 6, 9, 12, 19, 21, 39, 40, 58, 60, 109, 110, 121, 132, 143, 148, 167, 177, 197, 205, 227, 228, 229, 232, 234], "rais": [5, 6, 7, 9, 11, 58, 68, 89, 109, 110, 132, 163, 165, 166, 169, 184, 188, 191, 197, 199, 200, 215, 220, 221, 222, 227, 228], "valueerror": [5, 6, 7, 9, 11, 58, 89, 109, 110, 132, 163, 165, 166, 169, 188, 191, 197, 199, 200, 215], "calibr": [6, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 114, 115, 118, 119, 120, 121, 124, 126, 140, 151, 184, 186, 192, 193, 194, 195, 197, 199, 200, 227, 228, 234], "chip_topologi": [6, 21, 70, 115, 136, 137, 229, 234], "channel": [6, 20, 21, 32, 33, 36, 38, 50, 52, 60, 62, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 115, 117, 121, 130, 131, 132, 133, 134, 135, 161, 164, 165, 166, 172, 176, 177, 178, 201, 205, 206, 207, 208, 210, 211, 213, 223, 224, 226, 227, 228, 229, 232, 234], "component_channel": 6, "out": [6, 12, 94, 96, 227, 228, 229, 231, 232], "individu": [6, 61, 197, 228, 231], "encapsul": [6, 21, 34, 89, 234], "known": [6, 7, 68, 109, 110, 177, 195, 197, 198, 200, 228, 229], "op": [6, 7, 13, 14, 17, 19, 110, 197, 198, 199, 200, 229], "them": [6, 12, 13, 19, 38, 77, 81, 104, 114, 115, 120, 121, 124, 126, 197, 213, 227, 230], "topologi": [6, 137, 234], "properti": [6, 12, 21, 82, 129, 131, 132, 136, 137, 177, 178, 197, 204, 206, 207, 208, 227, 234], "quantumopt": [6, 12, 13, 14, 200, 227], "opcalibrationdatatre": [6, 21, 200], "data": [6, 8, 18, 19, 21, 24, 25, 26, 27, 32, 34, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 118, 119, 121, 131, 140, 151, 160, 184, 186, 192, 193, 194, 195, 197, 199, 200, 219, 223, 226, 227, 228], "tree": [6, 8, 21, 137, 199, 200], "chiptopologi": [6, 21, 49, 50, 70, 76, 77, 78, 107, 114, 115, 121, 136, 137, 229], "chip": [6, 12, 137, 227], "deriv": [6, 106, 140, 143, 149, 150, 151, 152, 153, 154, 155, 156, 158, 190, 195, 227, 229, 231], "chad": [6, 197], "channelproperti": [6, 21, 129, 134, 136, 138, 177, 206, 207, 208, 224, 226], "map": [6, 7, 11, 12, 19, 21, 24, 25, 27, 28, 29, 30, 31, 39, 40, 49, 50, 52, 64, 65, 66, 67, 70, 76, 77, 78, 107, 114, 115, 121, 131, 137, 140, 148, 150, 151, 163, 177, 184, 186, 192, 193, 194, 195, 197, 198, 206, 213, 215, 227, 229], "configur": [6, 7, 130, 133, 135, 223, 226, 231], "drive": [6, 21, 29, 32, 36, 38, 49, 50, 52, 76, 78, 81, 87, 88, 91, 104, 106, 114, 117, 121, 126, 132, 158, 164, 172, 217, 227, 228, 229, 232], "flux": [6, 21, 30, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 69, 70, 83, 84, 85, 86, 164, 197, 227, 229], "readout": [6, 21, 31, 38, 74, 75, 76, 77, 78, 79, 80, 81, 114, 160, 168, 177, 210, 227, 232], "respons": [6, 132, 135, 229, 231, 232], "_cach": 6, "gateimplement": [6, 7, 17, 18, 19, 20, 23, 32, 33, 34, 35, 36, 37, 41, 49, 50, 60, 62, 68, 69, 70, 72, 73, 82, 84, 90, 107, 109, 111, 114, 115, 116, 117, 121, 123, 125, 197, 199, 213, 227, 230, 232, 234], "cach": [6, 16, 18, 21, 32, 36, 49, 50, 76, 78, 84, 114, 115, 117, 148, 177, 213, 227, 229], "The": [6, 12, 13, 18, 20, 21, 22, 32, 34, 35, 36, 38, 41, 49, 50, 62, 70, 76, 77, 78, 81, 82, 84, 87, 90, 91, 95, 104, 106, 109, 111, 112, 114, 115, 116, 117, 121, 123, 125, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 165, 170, 172, 177, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 201, 205, 206, 207, 208, 213, 223, 225, 226, 227, 228, 229, 231, 232, 234], "ha": [6, 12, 18, 21, 30, 34, 38, 49, 76, 77, 78, 81, 82, 84, 115, 117, 121, 131, 140, 151, 166, 167, 170, 177, 184, 186, 190, 192, 193, 194, 195, 197, 205, 206, 207, 208, 213, 223, 226, 227, 228, 229, 231, 232, 234], "same": [6, 12, 21, 36, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 62, 76, 78, 81, 83, 84, 85, 86, 87, 91, 92, 106, 118, 119, 138, 141, 142, 145, 146, 148, 152, 153, 154, 155, 156, 165, 170, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 213, 223, 226, 227, 228, 229, 231, 232, 234], "structur": [6, 227], "composite_cach": 6, "compositeg": [6, 17, 18, 21, 37, 38, 39, 40, 111, 114, 116, 120, 123, 124, 125, 126, 227, 229], "timebox": [6, 12, 18, 21, 32, 34, 36, 38, 49, 50, 62, 69, 76, 77, 78, 81, 84, 91, 95, 106, 107, 114, 115, 117, 121, 124, 126, 205, 210, 211, 212, 227, 229, 230, 232], "flush": [6, 18, 227], "whenev": [6, 18, 76, 78, 81, 227], "inject": [6, 227], "_channel_to_compon": 6, "self": [6, 12, 20, 21, 49, 50, 76, 77, 78, 81, 96, 97, 105, 115, 177, 197, 204, 213, 228, 229], "invert": 6, "algorithm": [6, 201, 205, 207, 211, 213, 227, 229, 234], "perform": [6, 50, 52, 162, 170, 177, 231], "determin": [6, 33, 205, 213, 228, 231, 234], "block": [6, 36, 38, 50, 76, 77, 78, 81, 106, 114, 115, 132, 159, 173, 176, 203, 205, 206, 210, 213, 227, 228, 232, 234], "associ": [6, 12, 76, 78, 81, 115, 131, 132, 168, 170, 229, 231, 232], "onli": [6, 7, 12, 19, 21, 36, 38, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 67, 76, 77, 78, 81, 82, 83, 84, 85, 86, 92, 106, 114, 118, 119, 132, 177, 187, 189, 195, 197, 204, 213, 227, 228, 231, 232, 233, 234], "ar": [6, 7, 12, 19, 20, 21, 33, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 76, 78, 81, 83, 84, 85, 86, 90, 92, 95, 96, 97, 105, 114, 118, 119, 120, 121, 124, 125, 126, 131, 132, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 158, 165, 167, 170, 177, 178, 184, 186, 190, 192, 193, 194, 195, 197, 200, 204, 205, 206, 207, 208, 211, 212, 213, 223, 226, 227, 228, 229, 230, 231, 232, 234], "includ": [6, 9, 18, 20, 21, 76, 77, 78, 84, 94, 95, 104, 131, 143, 197, 213, 227, 229, 231], "non": [6, 12, 19, 58, 70, 75, 76, 78, 81, 111, 115, 140, 143, 151, 184, 186, 192, 193, 194, 195, 215, 229, 231, 234], "certain": [6, 20, 21, 49, 50, 96, 97, 105, 132, 143, 229, 234], "virtual": [6, 38, 50, 52, 84, 87, 88, 115, 121, 126, 132, 227, 232, 234], "do": [6, 9, 12, 33, 58, 70, 121, 123, 132, 177, 183, 186, 205, 217, 227, 228, 229, 231, 234], "just": [6, 12, 18, 32, 76, 78, 81, 95, 114, 197, 213, 227, 228, 229], "themselv": [6, 21, 77, 228, 229], "_channel_typ": 6, "probe": [6, 28, 36, 38, 74, 75, 76, 77, 78, 79, 81, 115, 134, 160, 168, 206, 210, 227, 229], "_require_scheduling_in_second": 6, "requir": [6, 19, 21, 23, 33, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 79, 80, 83, 84, 85, 86, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 113, 115, 118, 119, 121, 132, 140, 151, 184, 186, 189, 192, 193, 194, 195, 197, 199, 200, 210, 217, 223, 226, 227, 228, 229, 231], "second": [6, 12, 13, 21, 32, 36, 38, 49, 50, 58, 61, 62, 76, 77, 78, 81, 82, 115, 117, 121, 132, 140, 144, 148, 151, 177, 184, 186, 192, 193, 194, 195, 204, 206, 207, 208, 227, 229, 232, 234], "instead": [6, 21, 87, 173, 205, 227, 228, 229, 232, 234], "sampl": [6, 21, 33, 87, 132, 134, 135, 138, 140, 141, 142, 143, 151, 152, 153, 160, 161, 165, 166, 167, 171, 173, 177, 178, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 205, 206, 210, 223, 226, 227, 228, 229, 230], "can": [6, 7, 12, 17, 18, 19, 20, 21, 32, 34, 36, 38, 41, 49, 50, 52, 55, 56, 62, 65, 67, 68, 76, 77, 78, 81, 84, 91, 95, 96, 97, 105, 106, 114, 115, 117, 120, 121, 124, 126, 131, 132, 140, 147, 151, 161, 163, 164, 166, 167, 170, 172, 176, 177, 182, 184, 186, 192, 193, 194, 195, 197, 201, 203, 207, 208, 213, 217, 227, 228, 229, 232, 234], "happen": [6, 82, 87, 121, 173, 189, 201, 213, 228, 229], "reason": [6, 18, 95, 195, 213, 221, 228, 229, 231], "differ": [6, 12, 17, 19, 21, 34, 35, 36, 39, 40, 49, 50, 76, 77, 78, 82, 84, 88, 95, 107, 114, 121, 170, 177, 197, 206, 212, 213, 227, 229, 231, 232, 234], "rate": [6, 33, 87, 132, 135, 138, 165, 166, 177, 205, 206, 223, 226, 229, 230], "uhfqa": [6, 132], "have": [6, 12, 18, 21, 29, 30, 31, 33, 50, 76, 78, 81, 84, 91, 106, 114, 115, 138, 144, 152, 153, 158, 167, 177, 183, 193, 197, 200, 205, 206, 213, 217, 227, 228, 229, 231, 232, 234], "granular": [6, 57, 58, 62, 132, 138, 167, 177, 206, 219, 223, 226, 227, 228, 232], "some": [6, 18, 19, 60, 125, 140, 151, 183, 184, 186, 192, 193, 194, 195, 207, 208, 213, 227, 228, 229, 234], "mix": [6, 81], "station": [6, 38, 89, 132, 137, 197, 227, 228], "ro": 6, "devic": [6, 58, 77, 232], "vendor": 6, "than": [6, 12, 81, 115, 177, 188, 191, 193, 197, 204, 207, 208, 223, 226, 227], "awg": [6, 30, 38, 42, 44, 45, 48, 49, 50, 52, 55, 56, 84, 91, 106, 177, 220, 223, 226, 227, 232], "_channel_templ": 6, "repres": [6, 10, 11, 12, 14, 17, 21, 34, 41, 63, 70, 108, 122, 127, 140, 144, 163, 164, 177, 197, 198, 228, 229, 231, 232], "inject_calibr": [6, 227], "partial_calibr": 6, "new": [6, 12, 15, 18, 109, 110, 177, 197, 205, 206, 207, 208, 210, 213, 227, 228, 229], "chang": [6, 7, 18, 19, 70, 121, 166, 172, 197, 204, 217, 229, 231, 232], "after": [6, 70, 81, 95, 97, 99, 101, 103, 104, 121, 134, 165, 173, 203, 204, 205, 217, 227, 228, 232, 234], "initialis": [6, 20, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115], "invalid": [6, 7, 221], "affect": [6, 12, 36, 76, 121, 165, 177, 178, 197, 213, 227, 232], "loci": [6, 12, 25, 76, 115, 197, 228, 229, 234], "factoriz": [6, 21, 76, 114, 115, 197, 227], "its": [6, 18, 19, 21, 34, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 62, 76, 77, 83, 84, 85, 86, 92, 118, 119, 137, 143, 166, 167, 177, 178, 187, 189, 197, 206, 207, 208, 211, 213, 227, 228, 229, 231, 234], "wa": [6, 38, 84, 88, 195, 227, 231, 232, 234], "must": [6, 7, 9, 12, 13, 19, 21, 38, 50, 70, 114, 120, 124, 126, 132, 138, 148, 158, 177, 178, 193, 195, 197, 213, 227, 229, 231], "doe": [6, 12, 38, 50, 68, 76, 77, 78, 81, 89, 109, 115, 165, 167, 173, 197, 227, 228, 229, 231, 232, 234], "all": [6, 11, 12, 13, 16, 19, 20, 21, 28, 29, 30, 31, 32, 33, 36, 38, 50, 52, 58, 62, 67, 76, 77, 78, 81, 82, 88, 94, 95, 104, 106, 114, 115, 120, 121, 124, 126, 132, 137, 138, 140, 151, 163, 165, 166, 169, 172, 177, 178, 184, 186, 192, 193, 194, 195, 201, 205, 211, 223, 226, 227, 228, 229, 230, 231, 232, 234], "found": [6, 12, 19, 39, 40, 68, 177, 197], "actual": [6, 7, 21, 38, 62, 76, 78, 81, 141, 142, 152, 153, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 205, 223, 226, 227, 229, 232, 234], "previou": [6, 227, 232], "validate_calibr": 6, "check": [6, 14, 132, 223, 226, 227], "match": [6, 7, 70, 158, 177, 178, 223, 225, 226, 227, 234], "someth": [6, 20, 76, 77, 132, 163, 165, 166, 169, 199, 200, 217], "wrong": [6, 199, 200, 227], "get_drive_channel": [6, 234], "given": [6, 12, 13, 16, 19, 20, 21, 33, 34, 50, 57, 62, 68, 69, 70, 76, 77, 91, 92, 110, 117, 118, 119, 132, 138, 140, 143, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 166, 177, 178, 182, 197, 206, 213, 216, 223, 226, 228, 229, 234], "exist": [6, 19, 68, 109, 110, 177, 227, 228, 229, 234], "keyerror": 6, "get_flux_channel": 6, "get_probe_channel": 6, "line": [6, 28, 38, 76, 77, 78, 81, 134, 227, 229], "belong": [6, 76, 78, 81, 227], "get_virtual_feedback_channel": 6, "feedback": [6, 38, 76, 78, 81, 112, 113, 114, 170, 227, 230, 234], "signal": [6, 17, 38, 76, 77, 78, 81, 162, 170, 171, 187, 188, 189, 191, 192, 227, 228, 230, 232, 233], "sourc": [6, 84, 204, 227, 231, 232], "destin": [6, 232], "either": [6, 7, 36, 121, 172, 213, 227, 228, 231], "list": [6, 10, 12, 13, 14, 15, 19, 20, 21, 38, 49, 50, 68, 70, 96, 97, 105, 177, 178, 204, 227, 228, 229, 231], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "get": [6, 14, 18, 21, 49, 50, 72, 76, 77, 78, 107, 114, 121, 131, 136, 137, 197, 204, 227, 229, 232, 234], "node": [6, 19, 21, 38, 114, 120, 124, 126], "receiv": [6, 170, 231, 232], "bit": [6, 38, 227, 232], "result": [6, 12, 18, 21, 38, 76, 77, 78, 81, 88, 93, 114, 121, 148, 162, 168, 170, 177, 227, 228, 231, 234], "fast": [6, 49, 76, 78, 81, 100, 101, 112, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 170, 227, 230, 233, 234], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 19, 109, 229], "impl_nam": [6, 12, 19, 21, 109, 199, 227, 229], "iff": [6, 9, 19, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 83, 84, 85, 86, 92, 118, 119, 132, 197], "request": [6, 7, 12, 19, 21, 62, 107, 133, 135, 227, 228, 234], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 12, 19, 77, 143, 172, 227], "neighbor": [6, 205, 206, 213, 234], "coupler": [6, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 82, 83, 84, 85, 86, 115, 195, 197, 205, 206, 213, 227, 228, 229, 233, 234], "ad": [6, 12, 18, 19, 38, 76, 78, 81, 88, 109, 110, 114, 120, 124, 126, 131, 177, 201, 205, 206, 227, 228, 229, 234], "separ": [6, 19, 33, 38, 114, 120, 124, 126, 227, 228, 231, 234], "resolut": [6, 213, 234], "Will": [6, 62, 211], "iter": [6, 9, 12, 13, 21, 70, 89, 115, 138, 177, 178, 197, 210, 213, 234], "wait": [6, 36, 38, 62, 82, 87, 114, 115, 132, 159, 161, 176, 177, 203, 205, 227, 228, 232, 234], "round": [6, 57, 58, 62, 132, 138, 227, 232, 234], "fals": [6, 9, 12, 19, 21, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56, 68, 74, 75, 76, 78, 80, 81, 83, 85, 86, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 118, 132, 134, 138, 143, 177, 197, 227, 229], "everi": [6, 21, 165, 223, 226, 227, 229, 234], "guarante": [6, 62, 228], "idl": [6, 115, 173, 177, 227], "cannot": [6, 7, 18, 161, 177, 213, 227, 229, 231, 232], "replac": [6, 12, 21, 109, 110, 161, 173, 227, 231], "dynam": [6, 173, 227], "decoupl": [6, 173, 227], "sequenc": [6, 9, 11, 12, 13, 17, 22, 52, 84, 120, 161, 173, 174, 178, 182, 197, 204, 213, 217, 227, 228, 230, 232, 234], "thei": [6, 12, 19, 20, 21, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 125, 131, 132, 177, 178, 197, 213, 223, 226, 227, 228, 229, 232, 234], "treat": [6, 205, 213, 227, 234], "remain": [6, 201, 204, 217, 231], "align": [6, 228, 232, 234], "time": [6, 12, 21, 38, 52, 54, 55, 56, 58, 60, 62, 76, 77, 82, 84, 87, 92, 106, 115, 119, 121, 132, 134, 138, 144, 145, 146, 148, 154, 155, 156, 161, 166, 170, 176, 177, 178, 187, 188, 189, 191, 195, 201, 204, 205, 207, 208, 213, 227, 228, 229, 230, 234], "dure": [6, 62, 81, 84, 132, 143, 151, 161, 176, 187, 189, 195, 213, 228, 234], "particular": [6, 12, 21, 24, 25, 26, 199, 227, 231, 232, 234], "thu": [6, 33, 82, 91, 121, 143, 147, 228, 232], "less": [6, 12, 81, 201, 227], "space": [6, 14, 15, 16, 195, 232], "side": [6, 35, 36, 81, 132, 207, 208, 228], "todo": [6, 38, 70, 76, 78, 81, 132, 179], "now": [6, 70, 121, 227], "nearest": [6, 57, 62], "benefit": 6, "exa": [6, 21, 189, 215, 227, 229, 230, 234], "sweep": 6, "over": [6, 7, 13, 76, 78, 81, 144, 148, 177, 227], "In": [6, 7, 12, 38, 60, 62, 76, 77, 78, 81, 82, 87, 106, 115, 161, 166, 170, 177, 197, 205, 227, 228, 229, 231, 232, 234], "futur": 6, "gener": [6, 12, 21, 76, 77, 78, 81, 106, 121, 148, 182, 188, 213, 227, 229, 231], "experi": [6, 12, 67, 197, 227], "how": [6, 197, 213, 228, 229, 231, 232, 234], "start": [6, 65, 67, 144, 148, 154, 155, 177, 201, 204, 205, 206, 211, 212, 227, 228, 229, 232], "simultan": [6, 76, 78, 81, 201, 213, 228, 234], "box": [6, 38, 91, 106, 107, 205, 211, 212, 213, 227, 234], "get_implement": [6, 19, 21, 76, 227, 229, 234], "use_priority_ord": 6, "strict_locu": [6, 19], "priority_calibr": [6, 19, 234], "provid": [6, 12, 19, 20, 21, 32, 33, 59, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 148, 197, 223, 226, 227, 228, 229, 230, 231, 234], "mean": [6, 12, 76, 78, 81, 82, 170, 197, 213, 227, 229, 231, 232, 234], "chosen": [6, 126, 143, 228], "automat": [6, 12, 20, 77, 227, 229], "logic": [6, 20, 21, 32, 36, 49, 50, 84, 114, 115, 117, 143, 177, 227, 229, 234], "describ": [6, 12, 13, 21, 143, 144, 148, 160, 197, 213, 228, 231, 234], "below": [6, 21, 152, 153, 227, 228, 231, 232, 234], "symmetr": [6, 19, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 83, 84, 85, 86, 92, 118, 119, 144, 197, 227, 229], "order": [6, 12, 13, 14, 15, 19, 21, 22, 35, 36, 38, 84, 152, 153, 156, 177, 195, 197, 213, 228, 229, 230, 232, 234], "avail": [6, 19, 21, 228, 229, 231, 232, 234], "effect": [6, 21, 38, 82, 106, 117, 197, 201, 213, 228, 229, 230, 232, 234], "get_default_implementation_for_locu": [6, 197, 227, 229], "otherwis": [6, 19, 21, 50, 52, 57, 76, 78, 81, 87, 114, 132, 177, 178, 190, 227, 229, 231], "first": [6, 12, 14, 35, 36, 38, 50, 76, 78, 81, 144, 147, 148, 177, 195, 197, 229, 232, 234], "prioriti": [6, 7, 197, 227], "defin": [6, 7, 12, 19, 20, 21, 23, 29, 30, 31, 33, 39, 40, 49, 50, 58, 76, 77, 82, 90, 96, 97, 105, 115, 116, 132, 141, 142, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 183, 184, 195, 197, 199, 200, 211, 213, 227, 228, 229, 230, 231, 234], "defaults_for_locu": [6, 7, 197, 227], "global": [6, 70, 197, 227], "load": [6, 8, 227], "common": [6, 19, 20, 38, 39, 40, 76, 77, 78, 94, 95, 104, 114, 120, 124, 125, 126, 138, 205, 227, 230, 231], "singl": [6, 21, 32, 34, 67, 74, 75, 76, 77, 79, 90, 94, 95, 97, 106, 116, 121, 123, 125, 177, 178, 197, 210, 213, 224, 227, 228, 229, 232, 233, 234], "note": [6, 7, 17, 50, 76, 144, 148, 158, 165, 177, 200, 204, 213, 229, 232], "prevent": [6, 228, 229], "could": [6, 18, 62, 197, 229, 232], "_find_implementation_and_locu": 6, "find": [6, 195, 234], "instanc": [6, 11, 12, 14, 19, 21, 34, 76, 78, 81, 87, 91, 92, 106, 117, 118, 119, 165, 168, 197, 217, 229, 234], "compat": [6, 76, 78, 81, 223, 226, 227], "both": [6, 50, 54, 84, 91, 207, 227, 229, 232, 234], "caller": 6, "highest": [6, 197], "equival": [6, 81, 121, 201, 213, 217, 228, 234], "had": [6, 227], "_get_implement": 6, "built": [6, 12, 125, 227], "when": [6, 12, 18, 19, 21, 36, 38, 62, 76, 78, 81, 82, 115, 140, 151, 177, 179, 184, 186, 192, 193, 194, 195, 205, 206, 213, 220, 221, 222, 227, 228, 229, 232, 234], "later": [6, 12], "needs_calibr": [6, 19, 21], "interact": [6, 50], "nontrivi": 6, "wai": [6, 12, 160, 213, 227, 228, 229, 234], "composit": [6, 18, 19, 38, 39, 40, 114, 120, 124, 126, 211, 212, 213, 227, 228, 229, 234], "yet": [6, 70, 205, 206, 227], "constant": [6, 52, 54, 55, 56, 74, 75, 76, 79, 80, 91, 92, 113, 119, 187, 188, 189, 190, 191, 193, 227, 232], "prx_composit": 6, "drag_crf": [6, 12, 39, 227], "condit": [6, 38, 39, 40, 114, 163, 170, 223, 226, 227, 229, 231, 232], "meaning": [6, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 83, 84, 85, 86, 92, 118, 119, 197], "rz": [6, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 83, 84, 85, 86, 95, 97, 99, 101, 103, 117, 118, 119, 120, 121, 126, 164, 217, 227], "overrid": [6, 19, 20, 21, 32, 36, 49, 50, 52, 76, 77, 78, 84, 94, 95, 96, 97, 104, 105, 107, 114, 115, 117, 121, 143, 227, 229, 234], "work": [6, 12, 52, 84, 115, 177, 204, 227, 228, 229, 231, 234], "sinc": [6, 33, 50, 84, 121, 195, 197, 227, 229], "get_implementation_class": [6, 68], "validate_quantum_circuit": [6, 227], "require_measur": [6, 9], "constitut": [6, 9, 231], "circuit_to_timebox": [6, 227], "scheduling_algorithm": [6, 210, 213], "schedulingalgorithm": [6, 209, 210, 213], "hard_boundari": [6, 210, 211, 213], "locus_map": [6, 227], "convert": [6, 12, 21, 95, 126, 132, 140, 151, 161, 176, 184, 186, 192, 193, 194, 195, 203, 213, 227, 228, 229, 230], "resolv": [6, 21, 189, 211, 213, 228, 230], "placehold": [6, 12, 227], "physic": [6, 12, 22, 132, 205, 227, 228, 229], "while": [6, 95, 211, 227, 228, 229, 231, 234], "unresolv": 6, "fail": [6, 220, 222], "timeboxes_to_front_padded_playlist": [6, 227], "neighborhood": [6, 211, 213, 227], "temporari": [6, 227], "helper": [6, 21], "playlist": [6, 82, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 218, 222, 223, 226, 227, 230, 232, 234], "front": [6, 177], "pad": [6, 36, 92, 119, 144, 147, 148, 177, 205, 211, 234], "equal": [6, 12, 38, 82, 121, 124, 187, 189, 204, 207, 208, 227, 228, 234], "befor": [6, 81, 87, 95, 97, 99, 101, 103, 132, 134, 217, 227, 234], "final": [6, 21, 104, 184, 228, 229, 234], "wish": 6, "lose": [6, 227], "coher": [6, 165], "done": [6, 95, 172, 179, 195, 201, 206, 227, 229], "onc": [6, 227, 228, 229], "handl": [6, 20, 33, 62, 77, 114, 131, 132, 138, 205, 208, 217, 227, 229], "better": [6, 21, 132, 213, 227], "remov": [6, 78, 121, 132, 177, 178, 179, 227, 234], "timeboxes_to_playlist": 6, "int": [6, 12, 15, 16, 87, 91, 94, 95, 100, 101, 104, 117, 131, 132, 134, 138, 140, 141, 142, 143, 144, 148, 151, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 204, 205, 210, 213, 219, 227], "far": 6, "By": [6, 19, 21, 38, 49, 50, 76, 77, 78, 84, 107, 114, 120, 121, 124, 126, 140, 151, 184, 186, 192, 193, 194, 195, 217], "occupi": [6, 177, 205, 206, 213, 228], "label": [6, 33, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 115, 118, 119, 160, 162, 170, 171, 210, 213, 227, 228, 229], "set": [6, 11, 12, 18, 20, 21, 23, 33, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 63, 69, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 114, 118, 137, 148, 177, 185, 197, 205, 206, 210, 213, 227, 228, 229, 230, 232, 234], "format": [6, 33, 160, 227, 231], "impl": [6, 199, 229], "unnecessari": [6, 38, 205, 227], "pack": [6, 211], "assum": [6, 36, 50, 88, 106, 114, 121, 126, 138, 154, 155, 158, 177, 187, 189, 193, 195, 228, 229, 231, 234], "refer": [6, 7, 95, 125, 131, 172, 227, 229, 230, 234], "ensur": [6, 152, 153, 228, 232, 234], "intend": [6, 84, 115, 197, 228, 229], "properli": 6, "higher": [6, 149, 151, 152, 153, 227, 228, 232], "help": [6, 12, 228, 229, 232], "defend": [6, 231], "crosstalk": [6, 69, 70, 164, 201, 227, 229], "expens": 6, "longer": [6, 115, 227], "decoher": [6, 60], "timebox_to_schedul": 6, "finish": [6, 115, 227], "readi": [6, 230], "sample_r": [6, 132, 133, 134, 135], "_finish_schedul": 6, "fuse": [6, 95, 227], "distanc": [6, 227], "correct": [6, 14, 69, 70, 84, 88, 123, 164, 227, 229, 234], "_fuse_long_distance_virtual_rz": 6, "virtualrz": [6, 84, 87, 88, 121, 159, 227, 228], "next": [6, 204, 228, 229, 232], "fluxpuls": [6, 159], "resolve_timebox": [6, 213, 227, 234], "compute_neighborhood_hard_boundari": 6, "children": [6, 210, 213, 228, 234], "concaten": [6, 213, 228, 234], "strategi": [6, 205, 206, 212, 213], "solid": 6, "rectangl": [6, 234], "longest": [6, 62, 205, 211], "within": [6, 14, 57, 170, 177, 212, 228, 231], "tetri": [6, 161, 211], "tightli": [6, 211], "possibl": [6, 21, 62, 121, 163, 177, 195, 205, 206, 211, 212, 213, 227, 228, 231, 232, 234], "still": [6, 12, 70, 178, 227], "overlap": [6, 161, 167, 176, 205, 228, 234], "regardless": [6, 232], "boundari": [6, 65, 67, 205, 211, 212], "modifi": [6, 7, 12, 177, 178, 204, 205, 206, 207, 208, 217, 227, 229, 231, 234], "so": [6, 12, 20, 38, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 121, 177, 178, 201, 213, 227, 228, 229, 230, 234], "becom": [6, 12, 38, 184, 234], "atom": [6, 21, 210, 211, 213, 228, 229, 234], "isn": 6, "t": [6, 7, 70, 91, 104, 125, 141, 142, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 183, 184, 186, 190, 194, 195, 227, 231], "alreadi": [6, 12, 68, 177, 213, 227, 229], "precomput": [6, 177, 213, 229], "typic": [6, 11, 50, 76, 132, 144, 147, 197, 201, 228, 229, 232, 234], "want": [6, 12, 20, 49, 50, 76, 78, 81, 96, 97, 105, 144, 148, 173, 229], "top": [6, 19, 21, 58, 229], "layer": 6, "would": [6, 12, 18, 50, 87, 227, 229, 232, 234], "unus": 6, "lower": [6, 57, 230], "where": [6, 49, 50, 62, 70, 76, 77, 78, 81, 82, 90, 104, 116, 117, 125, 132, 141, 142, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 167, 177, 184, 186, 188, 190, 191, 194, 195, 197, 205, 208, 227, 228, 229, 231], "improv": [6, 38, 76, 78, 81, 227, 231], "need": [6, 12, 18, 19, 21, 32, 36, 38, 49, 50, 52, 70, 76, 77, 78, 81, 84, 114, 115, 117, 140, 151, 177, 178, 184, 186, 192, 193, 194, 195, 197, 227, 228, 229, 230, 234], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 21, 67, 170, 229, 234], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 12, 68, 115, 131, 177, 207, 208, 227, 228, 229, 231, 234], "addit": [6, 12, 19, 21, 32, 33, 36, 49, 50, 52, 76, 82, 84, 114, 115, 117, 123, 165, 177, 192, 197, 213, 229, 231, 234], "ideal": [6, 17, 60, 197, 201], "model": [6, 139, 149, 183, 201, 228], "correctli": [6, 18, 227, 229], "frame": [6, 84, 164, 195, 217, 227, 229], "subspac": [6, 82, 197, 201, 228, 229], "connect": [6, 12, 115, 197, 213, 228, 229, 234], "those": [6, 33, 76, 78, 81, 114, 147, 197, 213, 227, 229, 231, 234], "henc": [6, 217], "evolut": 6, "Of": 6, "cours": [6, 60, 229], "realiti": [6, 60], "possibli": [6, 50, 232], "applic": [6, 229, 231], "essenti": [6, 147, 148, 229], "precis": [6, 57, 58, 228], "interest": 6, "howev": [6, 19, 62, 114, 140, 151, 173, 184, 186, 192, 193, 194, 195, 228, 229, 231], "well": [6, 89, 115, 166, 177, 197, 223, 226, 227, 229, 230, 232, 234], "local": [6, 84, 121, 164, 172, 217], "shut": 6, "down": [6, 57], "unwant": 6, "like": [6, 12, 20, 21, 76, 78, 81, 115, 140, 151, 160, 184, 186, 192, 193, 194, 195, 227, 228, 229, 234], "end": [6, 12, 41, 81, 84, 87, 88, 121, 125, 144, 148, 154, 155, 161, 176, 177, 178, 190, 227, 228, 231, 232], "carri": [6, 228, 231], "meant": [6, 12], "zero": [6, 12, 36, 50, 62, 70, 71, 84, 95, 106, 111, 143, 144, 147, 148, 161, 167, 173, 192, 195, 197, 204, 207, 208, 227, 228], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 12, 16, 17, 84, 132, 140, 141, 142, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 162, 167, 177, 195, 197, 210, 213, 223, 226, 227, 228, 229, 232, 234], "involv": [6, 21, 36, 228, 230, 234], "compress": [6, 228], "duplic": 6, "transfer": [6, 58, 106, 231], "drop": 6, "point": [6, 121, 144, 145, 146, 148, 154, 155, 156, 204, 205, 206, 229], "finalis": 6, "unless": [6, 21, 140, 151, 184, 186, 192, 193, 194, 195, 213, 227, 229, 231, 234], "process": [6, 88, 161, 228, 233], "call": [6, 12, 14, 18, 19, 21, 84, 115, 124, 227, 229, 234], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 12, 18, 21, 32, 38, 50, 91, 160, 182, 227, 228, 229, 230], "shortcut": [6, 12, 227, 234], "If": [6, 12, 14, 19, 20, 21, 39, 40, 57, 68, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 121, 131, 132, 140, 143, 151, 160, 173, 177, 178, 184, 186, 192, 193, 194, 195, 197, 207, 213, 227, 228, 229, 231, 234], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 229], "canon": [7, 59, 110, 227, 229], "extend": [7, 14, 16, 62, 144, 176, 177, 178, 205, 206, 207, 208, 213], "ones": [7, 35, 36, 211, 213, 229], "case": [7, 12, 21, 32, 36, 49, 50, 62, 76, 77, 78, 106, 115, 117, 121, 177, 186, 190, 197, 205, 208, 217, 227, 228, 229], "caveat": 7, "redefin": [7, 12, 140, 151, 184, 186, 192, 193, 194, 195], "gate_definit": 7, "section": [7, 228, 229, 231, 232, 234], "yaml": [7, 8, 227], "file": [7, 8, 231], "expos": 7, "being": [7, 50, 106, 144, 197, 227, 229, 232], "undefin": [7, 82, 228], "don": [7, 183, 231], "config": [8, 131, 227], "circuitoperationlist": [10, 227], "circuit_oper": [11, 12], "metadata": [11, 229], "client": [11, 227, 228, 229, 230], "server": 11, "commun": [11, 231], "consist": [11, 18, 49, 50, 52, 91, 95, 106, 117, 140, 151, 177, 184, 186, 192, 193, 194, 195, 197, 227, 229, 231], "compris": 11, "all_locus_compon": 11, "supported_oper": 11, "num_qubit": [12, 16], "It": [12, 19, 41, 90, 106, 114, 115, 121, 123, 125, 167, 195, 213, 227, 228, 229], "mostli": [12, 228], "conveni": [12, 21, 76, 78, 81, 213, 227, 230], "enabl": [12, 62, 84, 91, 187, 189, 227], "easi": [12, 234], "creation": [12, 227, 229], "calcul": [12, 13, 16, 84, 190, 195, 227], "onto": 12, "import": [12, 63, 229, 231, 234], "present": [12, 13, 19, 21, 82, 177, 205], "think": 12, "qiskit": [12, 227], "quantumregist": 12, "most": [12, 229, 230], "simpli": [12, 38, 121, 197, 228], "taken": [12, 227], "good": 12, "practic": [12, 229, 232, 234], "mutabl": [12, 177], "regist": [12, 13, 14, 19, 109, 110, 197, 227, 228, 230, 234], "usabl": [12, 21, 38, 227], "fundament": 12, "popul": [12, 81, 82], "qb1": [12, 76, 197, 229, 234], "qbn": 12, "qb2": [12, 76, 197, 229, 232, 234], "altern": [12, 228, 232], "To": [12, 38, 58, 62, 177, 229, 230, 231, 232, 234], "your": [12, 229, 231], "own": [12, 18, 21, 34, 197, 227, 228, 229, 231], "initi": [12, 33, 34, 143, 151, 184, 195, 227, 228, 229], "my_tabl": 12, "rememb": 12, "circuit_op": 12, "find_qubit": 12, "what": [12, 19, 197, 227, 228, 229], "__add__": [12, 76, 78, 81, 227], "__mul__": [12, 227], "__getitem__": [12, 227], "3": [12, 38, 52, 70, 74, 75, 76, 80, 92, 119, 150, 205, 231, 233, 234], "circuit1": [12, 234], "circuit2": [12, 234], "4": [12, 64, 100, 101, 102, 103, 123, 125, 150, 231, 233], "produc": [12, 207, 227, 228, 232, 234], "add_op": 12, "abov": [12, 228, 229, 230, 231, 234], "shorten": 12, "exactli": [12, 21, 197, 210], "syntax": [12, 227, 228, 229, 231, 234], "usual": [12, 18, 62, 168, 195, 228, 229, 232, 234], "attach": [12, 231], "init": [12, 227, 229], "ariti": [12, 21, 36, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 62, 76, 83, 84, 85, 86, 92, 118, 119, 197, 229], "unitari": [12, 13, 14, 16, 41, 65, 67, 82, 108, 111, 122, 127, 197, 227, 228, 229], "propag": [12, 16, 65, 67, 114, 227, 232], "entir": [12, 14, 132, 227], "u": [12, 64, 126, 227], "get_unitari": 12, "dimens": [12, 144, 147], "alwai": [12, 21, 35, 36, 38, 84, 152, 153, 197, 201, 205, 207, 229], "qb3": [12, 76, 197, 232, 234], "8x8": 12, "matrix": [12, 13, 14, 15, 16, 41, 70, 125, 144, 197, 227, 229], "correspond": [12, 14, 19, 38, 60, 64, 65, 66, 67, 70, 114, 120, 124, 126, 140, 143, 144, 147, 163, 197, 205, 213, 228, 232], "three": [12, 58, 91, 227], "big": [12, 13, 14, 197], "endian": [12, 13, 14, 197], "convent": [12, 13, 84, 137], "With": [12, 20, 76, 77, 78, 81, 232], "action": [12, 13, 197, 228], "ident": [12, 16, 60, 66, 106, 227], "physical_circuit": 12, "map_loci": [12, 227], "physical_qubit": 12, "exampl": [12, 15, 18, 84, 132, 143, 197, 227, 228, 229, 231, 234], "alic": 12, "zzz": 12, "qb5": [12, 197], "qb10": 12, "occurr": 12, "mani": [12, 227, 229, 234], "run": [12, 147, 227, 232], "parallel": [12, 197, 227], "larg": [12, 144, 148, 228], "left": [12, 21, 32, 36, 49, 50, 76, 77, 78, 115, 117, 121, 207, 208, 228, 229, 232], "ignor": [12, 38, 143, 227], "add_qubit": 12, "n": [12, 15, 16, 35, 36, 132, 141, 142, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 158, 184, 195, 227], "qubit_nam": [12, 13], "overal": [12, 13], "arrai": [12, 13, 64, 66, 70, 74, 75, 76, 80, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 227, 229], "ndarrai": [12, 13, 14, 15, 16, 38, 70, 74, 75, 76, 80, 100, 101, 102, 103, 108, 122, 127, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 227, 229], "locus_indic": 12, "append": [12, 36, 76, 177, 178, 227], "store": [12, 14, 18, 21, 49, 50, 76, 77, 78, 107, 114, 121, 147, 164, 197, 229], "indic": [12, 16, 87, 143, 144, 147, 182, 228, 231], "qb4": [12, 232], "param": [12, 14, 21, 197, 227, 229], "compos": [12, 201, 230], "safer": 12, "togeth": [12, 38, 49, 76, 78, 81, 87, 205, 213, 227, 228, 229, 234], "probabl": 12, "wire": 12, "k": [12, 15, 144, 152, 153, 154, 155, 156, 157, 158, 195, 227], "achiev": [12, 229], "count_op": 12, "count": 12, "counter": 12, "occur": [12, 187, 189, 213], "make_circuit": [12, 227], "fresh": 12, "length": [12, 36, 70, 74, 75, 76, 77, 80, 157, 158, 171, 177, 195, 205, 211, 223, 225, 226, 227], "total": [12, 88, 178, 201, 234], "across": [12, 148, 152, 153], "deepcopi": 12, "_set_specific_operation_shortcut": 12, "through": [13, 34, 76, 78, 81, 227, 229, 231], "skip": [13, 177], "product": [13, 147, 228, 231], "context": [14, 19, 21, 32, 36, 39, 40, 49, 50, 76, 77, 78, 115, 117, 121, 228, 229, 234], "fetch": 14, "Then": [14, 213, 229], "hilbert": [14, 16], "whole": [14, 70, 228, 231], "perm": 15, "permut": [15, 227], "vector": [15, 144, 227], "index": [15, 70, 131, 178, 204, 227, 228, 230], "th": [15, 144, 195], "old": 15, "kron": [15, 197], "c": [15, 190, 213, 231], "n_qubit": 16, "larger": [16, 177, 228], "system": [16, 21, 227, 231, 232, 234], "nest": [16, 21, 23, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 70, 74, 75, 79, 80, 83, 84, 85, 86, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 115, 118, 119, 121], "hash": 16, "purpos": [16, 21, 76, 78, 81, 227, 229, 231], "rang": [16, 143, 144, 148, 154, 155, 184, 193, 213, 227], "abstract": [17, 107, 197, 228, 229, 230], "conceptu": [17, 228], "wherea": [17, 76, 161, 197, 228, 229], "concret": [17, 197, 228, 229, 230, 234], "One": [17, 21, 107, 228], "approxim": [17, 144, 148], "abc": [17, 21, 35, 37, 41, 60, 69, 73, 82, 90, 107, 111, 116, 123, 125], "customiqwaveform": [17, 73, 76, 77, 78, 90, 94, 95, 229], "singlepulseg": [17, 90, 106, 227], "compositecach": 17, "gate_implement": [18, 19, 20, 21, 32, 35, 37, 41, 60, 69, 73, 82, 90, 111, 116, 123, 125], "__call__": [18, 21, 32, 36, 49, 50, 76, 78, 81, 84, 114, 115, 117, 227, 229], "_timebox_cach": [18, 21], "trust": 18, "itself": [18, 19, 84, 115, 227, 229, 232], "member": [18, 19, 38, 39, 40, 65, 67, 114, 120, 124, 126, 227, 229], "deduc": 18, "locat": 18, "cache_kei": 18, "extra_id": 18, "hashabl": [18, 229], "identifi": [18, 21, 38, 132, 160, 177, 229, 231], "cast": 18, "extra": [18, 38, 84, 95, 188, 191, 229], "string": [18, 70, 74, 75, 76, 80, 170, 182], "id": [18, 21], "further": [18, 192, 195, 213], "did": [18, 227], "come": [18, 229, 234], "fund": 18, "parent": [19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 227, 229], "calibration_data": [19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 229], "term": [19, 140, 141, 142, 145, 146, 150, 151, 152, 154, 155, 156, 158, 184, 186, 192, 193, 194, 195, 197, 228, 229, 230, 231], "pre": [19, 143, 150, 151, 152, 153, 195], "_call": [19, 21, 32, 36, 38, 49, 50, 62, 76, 77, 78, 81, 84, 91, 95, 106, 107, 114, 115, 117, 121, 124, 126, 227, 229], "code": [19, 227, 229, 231, 232], "subclass": [19, 21, 32, 34, 36, 49, 50, 76, 77, 78, 115, 117, 121, 140, 151, 184, 186, 192, 193, 194, 195, 197, 227, 229], "declar": 19, "abl": [19, 138, 227], "verifi": [19, 227], "registered_g": [19, 38, 114, 120, 124, 126, 227, 229], "possib": 19, "customizable_g": [19, 38, 114, 120, 124, 126], "custom": [19, 20, 21, 76, 77, 78, 227, 228, 230], "tell": 19, "oilcalibrationdata": [19, 20, 21, 32, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 117, 118, 119, 120, 121, 124, 126, 199, 229], "There": [19, 38, 95, 114, 120, 124, 126, 229, 232, 234], "These": [19, 21, 38, 114, 120, 124, 126, 205, 206, 213, 227, 228, 229, 234], "ocalibrationdata": [19, 38, 114, 120, 124, 126], "subset": [19, 21, 38, 65, 114, 120, 124, 126], "customiz": [19, 38, 114, 120, 124, 126], "default_implement": [19, 39, 40, 197], "design": [19, 39, 40, 227, 231], "fill": [19, 39, 40, 228], "classmethod": [19, 21, 32, 49, 50, 70, 76, 77, 78, 91, 94, 95, 96, 97, 104, 105, 107, 114, 115, 117, 121, 227], "optional_calibration_kei": [19, 21], "item": [19, 21, 177], "level": [19, 21, 88, 89, 197, 228, 229, 230, 232, 234], "construct": [19, 21, 34, 76, 91, 92, 106, 117, 118, 119, 140, 151, 184, 186, 192, 193, 194, 195, 227, 228, 230, 234], "sought": 19, "deprec": [19, 227], "waveform": [20, 21, 33, 42, 44, 45, 48, 49, 50, 52, 55, 56, 58, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 117, 131, 139, 140, 141, 142, 143, 149, 151, 152, 153, 164, 165, 166, 169, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 223, 225, 226, 227, 228, 230], "iqpuls": [20, 32, 49, 76, 77, 78, 91, 94, 95, 96, 97, 104, 105, 106, 117, 121, 159, 162, 167, 170, 172, 217, 225, 227, 228, 229], "info": [20, 21, 227, 229], "somethingels": [20, 76, 77], "q": [20, 49, 74, 75, 76, 77, 78, 79, 80, 81, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 117, 140, 142, 146, 153, 155, 165, 227, 229, 233, 234], "mygat": [20, 76, 77], "i_wav": [20, 76, 77], "q_wave": [20, 76, 77], "wave_i": [20, 74, 75, 79, 80, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 165, 229], "wave_q": [20, 74, 75, 79, 80, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 165, 229], "dependent_wav": [20, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "consid": [20, 62, 71, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 204, 207, 208, 227, 229, 234], "share": [20, 33, 50, 52, 74, 75, 76, 77, 78, 79, 80, 81, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 231, 234], "drag": [20, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 227, 229], "root_paramet": [20, 50, 52, 76, 77, 78, 84, 94, 95, 104], "independ": [20, 76, 77, 78, 94, 95, 104, 177, 178, 197, 228, 232], "excluded_paramet": [20, 49, 50, 96, 97, 105], "exclud": [20, 49, 50, 96, 97, 105, 231], "__init__": [21, 227, 229], "via": [21, 70, 95, 114, 115, 126, 156, 190, 195, 227, 229], "input": [21, 38, 76, 78, 81, 104, 228, 229], "reimplement": [21, 32, 36, 49, 50, 76, 77, 78, 115, 117, 121, 229], "without": [21, 38, 78, 144, 147, 148, 171, 176, 213, 227, 228, 229, 231, 234], "even": [21, 77, 154, 205, 206, 227, 229, 231], "though": [21, 77, 227, 228, 229], "avoid": [21, 143, 144, 227], "unpredict": 21, "raw": [21, 162, 170, 171, 182, 232], "access": [21, 229, 234], "special_implement": [21, 227], "special": [21, 50, 87, 93, 106, 183, 197, 227, 229, 231, 234], "never": [21, 227, 229], "explicitli": [21, 76, 78, 81, 227, 229, 231, 234], "uniqu": [21, 131, 197, 228, 229], "sub_implement": 21, "sub": [21, 234], "len": [21, 76, 78, 81, 144, 147, 158], "At": [21, 84, 144, 148, 229], "qualified_nam": 21, "qualifi": 21, "f": [21, 38, 70, 76, 77, 78, 81, 144, 184, 186, 190, 194, 195, 197, 227, 229], "may_have_calibr": 21, "kwarg": [21, 32, 36, 49, 50, 76, 84, 91, 96, 97, 105, 114, 115, 117], "signatur": [21, 32, 36, 49, 50, 84, 114, 115, 117, 197, 227, 229], "suffici": [21, 32, 36, 49, 50, 84, 114, 115, 117, 132, 195], "insid": [21, 32, 36, 38, 49, 50, 84, 95, 114, 115, 117, 184, 204, 213, 227, 228], "construct_factoriz": 21, "to_timebox": 21, "wrap": [21, 234], "duration_in_second": [21, 32, 36, 49, 50, 76, 77, 78, 115, 117, 121, 177], "unimpl": [21, 32, 36, 49, 50, 76, 77, 78, 115, 117, 121], "make": [21, 32, 36, 49, 50, 76, 77, 78, 84, 115, 117, 121, 166, 173, 177, 178, 197, 201, 204, 227, 229, 231, 234], "sens": [21, 32, 36, 49, 50, 76, 77, 78, 115, 117, 121], "convert_calibration_data": 21, "channel_prop": 21, "_top_level": 21, "frequenc": [21, 49, 74, 75, 76, 77, 78, 79, 80, 84, 93, 104, 105, 117, 133, 134, 140, 143, 144, 147, 148, 150, 151, 152, 154, 155, 157, 158, 165, 184, 186, 192, 193, 194, 195, 227, 229], "fraction": 21, "hz": [21, 43, 46, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 93, 100, 101, 102, 103, 104, 105, 118, 132, 133, 135, 140, 143, 144, 147, 148, 151, 158, 184, 186, 192, 193, 194, 195, 229], "parameter": 21, "treatment": 21, "n_sampl": [21, 33, 91, 94, 95, 104, 117, 140, 141, 142, 143, 151, 152, 153, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "nestedparam": [21, 38, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 70, 74, 75, 79, 80, 83, 84, 85, 86, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 115, 118, 119], "cl": 21, "get_paramet": 21, "expect": [21, 33], "wildcard": 21, "charact": [21, 177, 231], "dot": 21, "root": [21, 65], "settingnod": [21, 136, 137], "get_locus_mapping_nam": [21, 49, 50, 76, 77, 78, 107, 114, 121, 229], "operation_nam": [21, 49, 50, 76, 77, 78, 107, 114, 121], "implementation_nam": [21, 49, 50, 76, 77, 78, 107, 114, 121], "behaviour": [21, 49, 50, 76, 77, 78, 107, 114, 121, 227, 229], "get_custom_locus_map": [21, 70, 115, 227, 229], "component_to_channel": [21, 70, 115, 137], "wrt": 21, "know": [21, 229], "often": [21, 227, 229], "set_locus_map": 21, "frozenset": [21, 70, 115, 229], "matter": [22, 84, 229], "alia": [22, 23, 24, 25, 26, 27, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 74, 75, 79, 80, 83, 85, 86, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 118, 119, 198, 227], "probe_lin": [28, 76, 77], "single_components_with_dr": 29, "single_components_with_flux_awg": 30, "single_components_with_readout": 31, "plai": [32, 42, 44, 45, 48, 49, 50, 52, 55, 56, 70, 76, 78, 81, 84, 91, 117, 165, 167, 168, 169, 210, 227, 228, 229, 234], "_get_puls": [32, 94, 95, 96, 97, 104, 105, 227], "_get_pulse_channel": 32, "basic": [32, 178, 227, 229], "insert": [32, 87, 227], "overridden": [32, 197, 229], "wave": [33, 164, 165, 169, 186, 194], "label_prefix": 33, "prefix": [33, 76], "been": [34, 38, 115, 213, 227, 228, 231, 232], "sever": [34, 161, 197, 227, 229, 232, 234], "scheme": [34, 228], "likewis": 34, "sometim": [34, 228], "metaoper": [35, 36, 197, 229], "tempor": [35, 36], "qudit": [36, 197], "metainstruct": 36, "caus": [36, 38, 62, 70, 227, 231, 232], "turn": [36, 227], "impos": 36, "relat": [36, 88, 227, 232, 234], "ccprx_composit": [37, 39, 40, 227, 232], "ccprx_composite_dragcosinerisefal": [37, 227], "ccprx_composite_draggaussian": [37, 227], "discrimin": [38, 81], "obtain": [38, 106, 140, 144, 228, 231, 233], "segment": [38, 91, 115, 170, 172, 175, 177, 182, 204, 205, 206, 227, 228, 232], "activ": [38, 168, 228], "underneath": 38, "control_delai": [38, 232], "unit": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 62, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119, 140, 145, 146, 151, 154, 155, 156, 158, 165, 177, 184, 186, 192, 193, 194, 195, 228, 229, 232], "data_typ": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119], "datatyp": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119, 215, 227], "collection_typ": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119], "collectiontyp": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119, 215], "element_indic": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119], "instrument": [38, 121, 132, 135, 143, 159, 175, 232], "drive_control": [38, 136], "feedback_sourc": 38, "141592653589793": 38, "conditionalinstruct": [38, 76, 78, 81, 159, 170, 232], "until": [38, 121, 228], "enough": [38, 232], "arriv": [38, 232], "place": [38, 177, 189, 192, 205, 206, 231], "sequenti": 38, "care": [38, 234], "yourself": [38, 230], "rad": [38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 93, 95, 97, 99, 101, 103, 108, 118, 122, 217], "__": [38, 70, 76, 77, 78, 81, 227], "hw": [38, 76, 78, 81, 227], "per": [38, 76, 78, 81, 197, 227], "listen": [38, 227], "user": [38, 70, 76, 78, 81, 143, 195, 213, 227, 228, 229, 232, 234], "drag_gaussian": [40, 227, 234], "flip": [41, 227], "rel": [41, 84, 140, 151, 158, 165, 184, 186, 192, 193, 194, 195, 227, 228, 229, 234], "11": [41, 233], "text": [41, 82, 95, 190, 195, 231], "begin": [41, 84, 87, 125, 160, 167, 178, 190, 204, 207, 208, 227, 232, 234], "pmatrix": [41, 125], "fluxpulseg": [41, 42, 44, 45, 47, 48, 51, 52, 53, 82, 84, 229], "cz_gaussiansmoothedsquar": 41, "cz_slepian": 41, "cz_truncatedgaussiansmoothedsquar": 41, "cz_slepian_crf": 41, "cz_crf": 41, "fluxpulsegate_tgss_crf": 41, "fluxpulsegate_crf_crf": [41, 227], "couplerfluxpulsequbitacstarkpulseg": [41, 43, 46, 227], "cz_slepian_acstarkcrf": 41, "cz_crf_acstarkcrf": 41, "fluxpulsegate_smoothconst": [41, 54, 55, 56], "fluxpulse_smoothconstant_qubit": 41, "fluxpulse_smoothconstant_coupl": 41, "fluxpulse_smoothconstant_smoothconst": [41, 227], "cosinerisefal": [42, 43, 47, 51, 53, 83, 85, 86, 96, 97, 105, 192], "coupler_wav": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 83, 84, 85, 86, 229], "amplitud": [42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 140, 143, 151, 184, 186, 188, 189, 191, 192, 193, 194, 195, 227, 229], "scalar": [42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 118, 119], "center_offset": [42, 43, 44, 45, 46, 47, 48, 51, 53, 83, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 105, 118, 140, 141, 142, 151, 152, 153, 190, 192, 195, 229], "crf": [42, 43, 46, 47, 51, 53, 83, 85, 86, 96, 97, 105], "read_onli": [42, 43, 44, 45, 46, 47, 48, 51, 53, 74, 75, 76, 80, 83, 85, 86, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 118], "full_width": [42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 83, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 105, 118, 140, 141, 142, 143, 151, 152, 153, 188, 190, 191, 192, 195], "rise_tim": [42, 43, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 83, 85, 86, 92, 96, 97, 105, 118, 119, 188, 189, 190, 191, 192], "qubit_wav": [42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 83, 84, 85, 86, 229], "cosin": [43, 46, 52, 92, 93, 105, 118, 119, 140, 141, 142, 145, 146, 147, 148, 150, 154, 155, 156, 157, 183, 184, 187, 188, 189, 191, 192, 194, 195, 227], "rise": [43, 46, 52, 54, 55, 56, 58, 91, 92, 105, 118, 119, 187, 188, 189, 190, 191, 192, 227], "fall": [43, 46, 52, 54, 55, 56, 58, 91, 92, 105, 118, 119, 187, 188, 190, 192, 197, 227], "ac": [43, 46, 49, 91, 92, 117, 118, 119, 227], "stark": [43, 46, 49, 91, 92, 117, 118, 119, 227], "first_qubit": [43, 46], "mcrf": [43, 46, 118], "modulation_frequ": [43, 46, 118, 165, 192], "second_qubit": [43, 46], "qubit_drive_wav": [43, 46, 49], "modulatedcosinerisefal": [43, 46, 118, 183], "gaussiansmoothedsquar": 44, "gss": 44, "gaussian_sigma": 44, "square_width": 44, "slepian": [45, 46, 47, 85, 183, 227], "coupling_strength_norm": [45, 46, 47, 85, 195], "frequency_initial_norm": [45, 46, 47, 85, 195], "frequency_to_minimize_norm": [45, 46, 47, 85, 195], "lambda_1": [45, 46, 47, 85, 195], "lambda_2": [45, 46, 47, 85, 195], "squid_asymmetri": [45, 46, 47, 85, 195], "truncatedgaussiansmoothedsquar": [48, 53, 86, 192], "tgss": [48, 53, 86], "analog": 49, "tune": [49, 139, 140, 141, 142], "_ac_stark_puls": [49, 117], "phase_incr": [49, 117, 118, 121, 165, 172], "quadratur": [49, 117, 165], "pi": [49, 81, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 114, 117, 123, 124, 125, 141, 142, 144, 145, 146, 147, 152, 153, 156, 157, 184, 185, 186, 190, 194, 216, 227, 229, 232, 234], "discret": 50, "mediat": [50, 82], "coupl": [50, 195], "tunabl": [50, 233], "arbitrari": [50, 77, 104, 105, 121, 125, 167, 217, 227, 232, 234], "assign": [50, 76, 77, 78, 81, 131, 227], "slot": 50, "flux_puls": [50, 52], "radian": [50, 52, 90, 91, 106, 107, 116, 121, 125, 165, 172, 186, 194, 216], "realiz": [52, 227, 233], "similar": [52, 78, 131, 227, 229], "width": [52, 54, 55, 56, 58, 140, 143, 177, 190, 192], "rise_wav": [52, 54, 55, 56], "cosineriseflex": [52, 54, 55, 56, 183], "fall_wav": [52, 54, 55, 56], "cosinefallflex": [52, 54, 55, 56, 183], "smooth": [54, 55, 56, 91, 187, 189], "1e": [57, 58, 71, 179, 207, 208], "15": 57, "10": [58, 62, 71, 82, 233], "save": 58, "memori": [58, 91, 227, 228], "flat": [58, 70, 137, 188, 191], "divid": 58, "consecut": 58, "conform": [58, 89], "minimum": [58, 223, 226, 228], "leftov": [58, 188, 191], "error": [58, 68, 144, 148, 188, 191, 195, 199, 213, 220, 221, 222, 227, 228, 234], "obei": 58, "maximum": [61, 71, 115, 152, 153, 177, 195, 205], "up": [62, 76, 78, 81, 84, 88, 132, 138, 152, 153, 177, 195, 205, 227, 229], "hardwar": [62, 172, 197, 223, 226, 228, 229, 230, 232], "again": 62, "much": [62, 77, 228], "why": [62, 229], "except": [62, 76, 78, 95, 218, 220, 221, 222, 227, 228, 229, 231], "enumer": [63, 65, 67], "xygat": [63, 66, 107], "intenum": [63, 67], "reprenum": 63, "twoqubitg": [63, 64], "iswap": [64, 65, 233], "j": [64, 66, 70, 144, 233], "sqrt_iswap": [64, 65], "70710678": [64, 66], "70710678j": [64, 66], "matric": [64, 66, 229], "enum": [65, 67, 209, 211, 212], "qualnam": [65, 67, 211, 212], "two_qubit_unitari": 65, "squar": 65, "x_90": 66, "x_180": 66, "x_m90": 66, "y_90": 66, "y_180": 66, "y_m90": 66, "su": [66, 125, 126, 127], "clifford": [67, 107], "axi": [67, 90, 123, 125, 217, 227, 229], "xy": [67, 90, 107], "plane": [67, 90, 123], "xygate_unitari": 67, "tomographi": 67, "overwrit": [68, 109, 110], "fluxmultiplexer_samplelinear": [69, 227], "flux_multiplex": 70, "linear": [70, 106, 184, 185], "multiplex": [70, 76, 78, 81, 114, 210, 227], "cross": [70, 231, 234], "talk": [70, 234], "element": [70, 140, 144, 148, 193, 213, 227, 228, 234], "c_ij": 70, "aris": [70, 231], "a_i": [70, 104], "w_i": 70, "sum_j": 70, "a_j": 70, "w_j": [70, 144], "spars": 70, "form": [70, 195, 227, 228, 229, 231], "xarrai": 70, "matrix_index": 70, "relev": 70, "np": [70, 197, 229, 232, 234], "matrix_el": 70, "r": [70, 123, 190, 233], "d": [70, 144, 184, 213, 231, 233], "everyth": [70, 234], "here": [70, 95, 158, 183, 195, 229, 232, 234], "subject": [70, 228, 231], "absolut": 71, "uniformli": 71, "class_nam": 72, "project": [73, 74, 75, 79, 114, 121], "measure_customwaveform": [73, 74, 75, 77, 81, 229], "measure_const": [73, 227], "measure_constant_qnd": 73, "probepulse_customwaveform": [73, 78, 227], "probepulse_customwaveforms_nointegr": [73, 79, 227], "probe_const": 73, "shelved_measure_customwaveform": [73, 80, 227], "shelved_measure_const": [73, 227], "dispers": [74, 75, 76, 79, 81], "acquisition_delai": [74, 75, 76, 77, 80], "acquisit": [74, 75, 76, 77, 78, 80, 81, 160, 168, 227, 232], "acquisition_typ": [74, 75, 76, 80], "threshold": [74, 75, 76, 78, 80, 81, 170], "amplitude_i": [74, 75, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 119, 229], "amplitude_q": [74, 75, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 119, 229], "integration_length": [74, 75, 76, 77, 80, 227], "integr": [74, 75, 76, 77, 78, 80, 134, 162, 170, 171, 195, 227, 232], "integration_threshold": [74, 75, 76, 80], "integration_weights_i": [74, 75, 76, 80], "weight": [74, 75, 76, 77, 80, 100, 101, 140, 141, 142, 144, 148, 162, 170, 227], "dtype": [74, 75, 76, 80, 141, 142, 152, 153, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 229], "float64": [74, 75, 76, 80], "integration_weights_q": [74, 75, 76, 80], "demolit": 75, "intermedi": [76, 229], "IF": 76, "center": [76, 134, 143, 144, 158, 190, 192, 195], "offset": [76, 167, 190, 195], "readouttrigg": [76, 77, 78, 81, 159, 170, 210, 228, 230], "_multiplexed_timebox": [76, 78], "multiplexedprobetimebox": [76, 78, 81, 209, 227], "probe_timebox": [76, 78, 81], "_time_trac": 76, "time_trac": [76, 77, 160], "_build_instruct": [76, 77, 78], "waveform_param": [76, 77, 78], "root_param": [76, 77, 78], "if_freq": [76, 78], "acquisitionmethod": [76, 77, 159, 162, 168, 171], "do_acquisit": [76, 78, 81], "nake": [76, 78, 81], "trigger": [76, 77, 78, 81, 168, 177, 210, 227, 232], "goe": [76, 78, 81], "maintain": [76, 78, 81], "backward": [76, 78, 81], "rout": [76, 78, 81, 170], "probelin": [76, 78, 81, 228, 232], "behav": [76, 78, 81, 161, 173], "featur": [76, 78, 81, 229, 230], "mode": [76, 78, 81], "pick": [76, 78, 81], "anywher": [76, 78, 81, 170, 227], "pass": [76, 78, 81, 87, 88, 89, 227, 232], "acquisition_dur": 76, "trace": [76, 77], "record": 76, "acqusit": 76, "due": [77, 82, 84, 117, 164, 189, 228], "limit": [77, 91, 124, 223, 226, 227, 231, 234], "contrari": 77, "probl": 77, "shelv": [80, 81, 227], "surround": 80, "prx_12": [80, 81, 227], "standard": [81, 137, 234], "swap": [81, 82], "back": [81, 84, 197, 204], "roughtli": 81, "collaps": 81, "advantag": 81, "suscept": 81, "t_1": 81, "decai": 81, "_skip_overrid": 81, "exchang": 82, "invari": 82, "span": 82, "00": [82, 150], "01": [82, 150], "anyth": [82, 229], "orthogon": [82, 229], "involut": 82, "_": [82, 148, 152, 157, 158], "i_": 82, "langl": 82, "complex": [82, 100, 101, 102, 103, 162, 229, 232, 234], "degre": [82, 123], "freedom": [82, 232], "continuum": 82, "cancel": [82, 227], "movemark": [82, 84, 227], "move_customwaveform": [82, 83, 85, 86, 88, 227], "move_crf_crf": [82, 227], "move_slepian_crf": [82, 227], "move_tgss_crf": 82, "detun": [83, 84, 85, 86, 87, 88, 227], "bookkeep": 84, "unknown": [84, 197, 221], "pair": [84, 167, 187, 189, 197, 229], "came": 84, "sandwich": [84, 88, 89, 227], "annot": [84, 87, 227, 231], "mark": [84, 227, 231], "counteract": 84, "accumul": 84, "proport": 84, "sum": [84, 88, 140, 151, 167, 178, 184, 186, 192, 193, 194, 195, 213, 234], "complet": [84, 228], "apply_move_gate_phase_correct": [84, 227], "track": [84, 178, 205, 227, 231, 234], "right": [87, 227, 228, 231, 232, 234], "link": [87, 183, 227, 231], "noth": [87, 175, 177, 201, 203, 207, 208, 229, 231], "explicit": [87, 227, 228], "aforement": [87, 178, 205, 229], "marker": 87, "post": [87, 143, 151], "compil": [87, 89, 132, 161, 230, 231, 234], "apply_detuning_correct": 88, "validate_prx": 89, "prepar": [89, 231], "constraint": [89, 167, 228, 232], "unmodifi": 89, "r_": [90, 95, 121], "phi": [90, 95, 116, 121, 125, 126, 127, 186, 194, 217, 227], "theta": [90, 95, 121, 125, 126, 127, 195, 217, 227], "co": [90, 104, 125, 141, 144, 145, 147, 152, 153, 156, 157, 184, 186, 194, 227], "y": [90, 107, 123, 125, 127, 227], "sin": [90, 104, 125, 142, 146, 190], "r_z": [90, 95, 116, 121, 125, 126], "r_x": 90, "dagger": 90, "around": [90, 123, 125, 144, 192, 217], "li": 90, "bloch": [90, 125, 229], "sphere": [90, 125, 229], "prxgateimplement": [90, 91, 106, 116], "prx_singlepulse_gateimplement": [90, 94, 95, 227], "prx_customwaveform": [90, 93, 96, 98, 100, 102, 104, 227, 229], "prx_draggaussian": 90, "prx_dragcosinerisefal": 90, "prx_customwaveformssx": [90, 97, 99, 101, 103, 227], "prx_draggaussiansx": [90, 227], "prx_dragcosinerisefallsx": [90, 227], "prx_fastdragsx": [90, 227], "prx_fastdrag": [90, 227], "prx_hddragsx": [90, 227], "prx_hddrag": [90, 227], "prx_cosin": [90, 227], "abc_constant_smooth": [90, 92, 116], "constant_prx_with_smooth_rise_fal": [90, 116, 119, 227], "prx_modulatedcustomwaveform": [90, 105, 227], "prx_modulateddragcosinerisefal": [90, 227], "arbitrarili": [91, 187, 189, 227], "rise_waveform": [91, 92, 119], "main_waveform": [91, 92, 119], "fall_waveform": [91, 92, 119], "middl": [91, 192], "doesn": [91, 227], "_main_puls": 91, "main": [91, 228, 229], "_rise_puls": 91, "_fall_puls": 91, "cosinefal": [92, 119, 183], "cosineris": [92, 119, 183], "sideband": 93, "iq": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 132, 133, 140, 151, 162, 167, 170, 171, 217, 223, 226, 227], "hot": [94, 95, 104], "swappabl": [94, 95, 104], "rest_of_calibration_data": [94, 95, 104], "x_pi": [94, 96, 227], "sx": [95, 101, 103, 124, 227], "manipul": [95, 229], "formula": 95, "rz_after": [95, 97, 99, 101, 103], "rz_befor": [95, 97, 99, 101, 103, 227], "sqrt": [95, 97, 123, 227], "cosinerisefallderiv": [96, 97, 105, 183], "vz": [97, 99, 101, 103], "prx_customwaveformsvz": [97, 99], "truncatedgaussian": [98, 99, 229], "tg": [98, 99], "truncatedgaussianderiv": [98, 99, 229], "gaussian": [99, 229], "scale": [100, 102, 106, 143, 144, 164, 165, 169, 228, 229], "fdi": [100, 101], "coeffici": [100, 101, 102, 103, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 194, 195], "compute_coefs_from_frequ": [100, 101, 102, 103, 140, 141, 142, 143, 151, 152, 153], "boolean": [100, 101, 102, 103, 143, 170], "number_of_cos_term": [100, 101, 140, 141, 142], "5": [100, 101, 144, 150, 184, 229, 231, 233, 234], "suppressed_frequ": [100, 101, 102, 103, 140, 141, 142, 143, 151, 152, 153], "suppressed_interval_width": [100, 101, 140, 141, 142], "fastdragi": [100, 101, 139, 227], "fastdragq": [100, 101, 139, 227], "hd": [102, 103, 143, 149, 151, 152, 153, 154, 155, 156, 158, 227], "hdi": [102, 103], "hddragi": [102, 103, 149, 227], "hddragq": [102, 103, 149, 227], "baseband": 104, "shape": [104, 140, 141, 142, 147, 152, 153, 169, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 230], "delta": 104, "omega_i": 104, "omega_d": 104, "a_q": 104, "omega_q": 104, "omega": [104, 184], "band": [104, 105], "static": [106, 140, 143, 151, 184, 186, 192, 193, 194, 195, 210, 213, 227], "_single_iq_puls": [106, 227], "resonantli": 106, "x_": 106, "linearli": [106, 229], "adjust": [106, 217, 227, 228, 232], "rx": [107, 227, 232, 234], "ry": [107, 227, 234], "xy_gat": 107, "2x2": [108, 122, 127], "impl_class": [109, 229], "set_as_default": 109, "reset_condit": [111, 232], "reset_wait": [111, 227], "__default_feedback": 112, "doubl": [112, 113], "underscor": [112, 113], "emphas": [112, 113], "fact": [112, 113], "manual": [112, 113, 186, 229], "__reset": 113, "necessari": [114, 201, 228, 229, 234], "accommod": 114, "upon": 114, "relax": [115, 227], "compar": [115, 170, 177, 227], "shot": [115, 228], "destroi": 115, "wait_box": 115, "besid": 115, "rz_virtual": 116, "rz_acstarkshift": [116, 118], "rz_acstarkshift_cosinerisefal": 116, "rz_acstarkshift_smoothconst": [116, 227], "rz_prx_composit": [116, 227], "strong": 117, "off": [117, 227], "lead": [117, 227], "shift": [117, 164], "ac_stark_puls": 117, "ac_stark_waveform": 118, "increment": [118, 121, 165, 172, 217, 227], "techniqu": [121, 126], "oscil": [121, 165, 172, 217], "shortest": 121, "algebra": [121, 172], "commut": [121, 217], "toward": 121, "hit": 121, "elimin": 121, "multi": 121, "hold": [121, 231], "diagon": 121, "immedi": [121, 201, 227], "conjug": 121, "alpha": [121, 184, 185], "accomplish": 121, "assumpt": [121, 195], "negat": 121, "sigma": [123, 229, 233], "_x": 123, "xz": 123, "90": [123, 233], "sxgate": [123, 227], "parametr": [125, 195, 229, 233], "euler": [125, 126], "lambda": [125, 126, 227, 229], "subsequ": [125, 231], "r_y": [125, 126], "express": [125, 140, 195, 231], "h": [125, 144], "8": [125, 150, 231], "http": [125, 231], "openqasm": 125, "com": 125, "languag": [125, 228, 231], "html": [125, 182, 227], "ugat": [125, 227], "lam": [126, 127], "decomposit": 126, "cdot": 126, "probechannelproperti": 129, "channelconfigur": [129, 135], "realchannelconfig": [129, 131, 133], "iqchannelconfig": 129, "channeldescript": [129, 223, 224], "instruction_t": 131, "waveform_t": 131, "add_instruct": 131, "integ": [131, 132, 163, 213, 234], "manner": 131, "instruction_duration_granular": [132, 134], "instruction_duration_min": [132, 134, 138], "compatible_instruct": [132, 134, 219], "is_iq": [132, 134], "is_virtu": [132, 134], "blocks_compon": [132, 134], "zi": 132, "hdawg": 132, "shfsg": 132, "shfqa": 132, "32": [132, 228], "16": [132, 177, 228, 233], "hack": 132, "frontend": 132, "sent": [132, 227, 228, 231], "might": [132, 227, 228, 229, 232, 234], "duration_to_sampl": 132, "duration_to_second": 132, "duration_to_int_sampl": 132, "messag": [132, 199, 213], "check_min_sampl": 132, "close": [132, 227, 234], "test": [132, 227], "output": [132, 161, 173, 182, 197, 227, 228, 232, 234], "unaccept": 132, "round_duration_to_granular": 132, "round_up": [132, 138], "force_min_dur": [132, 138], "closest": [132, 138], "upconvers": [133, 165, 172], "center_frequ": 134, "integration_start_dead_tim": 134, "integration_stop_dead_tim": 134, "dead": 134, "real": [135, 165, 169, 170, 195, 228], "flux_control": 136, "readout_control": 136, "intern": [136, 227, 228, 234], "channel_properti": [137, 177, 206], "largest": 138, "fourier": [139, 140, 141, 142, 144, 147, 148, 195], "ansatz": [139, 140, 141, 142], "spectrum": [139, 140, 141, 142, 143, 148], "suppressedpuls": [139, 140, 149, 151], "fastdrag": [139, 141, 142], "fast_drag": [140, 141, 142, 143, 149], "envelop": [140, 141, 142, 143, 145, 146, 150, 152, 153, 154, 155, 156, 157, 165, 227, 233], "domain": [140, 148], "suppress": [140, 143, 144, 148, 150, 151, 152, 154, 155, 157, 158], "interv": [140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 157, 167, 228, 229], "accord": [140, 148, 152, 153, 213, 234], "furthermor": 140, "similarli": [140, 227, 229], "ordinari": 140, "seri": [140, 141, 142, 143, 144, 145, 146, 156], "last": [140, 232, 234], "potenti": [140, 227], "cutoff": 140, "non_timelike_attribut": [140, 151, 184, 186, 192, 193, 194, 195, 227, 229], "timelik": [140, 151, 184, 186, 192, 193, 194, 195], "dimensionless": [140, 151, 184, 186, 192, 193, 194, 195], "window": [140, 151, 160, 171, 184, 186, 190, 192, 193, 194, 195], "invers": [140, 144, 151, 184, 186, 192, 193, 194, 195], "sum_": [141, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 227], "c_n": [141, 142, 145, 146, 148], "t_p": [141, 142, 144, 145, 146, 147, 152, 153, 156, 157], "_sampl": [141, 142, 152, 153, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 229], "sample_coord": [141, 142, 152, 153, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 229], "coordin": [141, 142, 152, 153, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "expans": [143, 144], "choos": [143, 229, 231], "neglect": [143, 151], "_normal": 143, "clip": 143, "re": 143, "n_arr": [144, 147], "suppressed_freq_ranges_2darr": 144, "pulse_dur": [144, 145, 146, 147, 148, 154, 155, 156, 158], "time_scaling_factor": 144, "n_points_for_integr": [144, 148], "60": [144, 148], "evalu": [144, 145, 146, 147, 148, 154, 155, 156, 163], "eq": [144, 147, 148, 151, 152, 153, 158], "a_": 144, "nm": 144, "int_": 144, "f_": [144, 184], "l": [144, 233], "hat": 144, "_n": 144, "_m": 144, "mathrm": [144, 184], "m": [144, 227, 233], "row": 144, "column": 144, "denot": [144, 152, 153, 229], "transform": [144, 147, 148, 227, 228, 230, 231], "g_n": [144, 147], "importantli": [144, 228], "fulli": 144, "1d": [144, 147, 148], "2d": [144, 148], "give": [144, 228, 229, 231, 234], "factor": [144, 165, 169, 195, 229], "excess": 144, "small": [144, 227, 228], "integrand": [144, 148], "50": [144, 148, 231], "recommend": [144, 148, 231], "numer": [144, 148, 195], "low": [144, 148, 229], "t_arr": [145, 146, 154, 155, 156], "nth": [147, 156], "analyt": [147, 195, 233], "a7": [147, 148], "frequency_arr": 147, "tensor": 147, "dim": 147, "cartesian": 147, "dimension": 147, "number_of_cosin": 148, "weights_tupl": 148, "suppressed_freq_ranges_2d_tupl": 148, "solv": [148, 157, 158], "optim": [148, 195, 207, 227], "a5": 148, "a12": 148, "a13": 148, "effici": [148, 232], "rb": 148, "outer": 148, "appendix": [149, 231], "hddrag": [149, 152, 153], "33333333": 150, "6": [150, 231, 233], "22857143": 150, "02857143": 150, "66666667": 150, "95238095": 150, "35714286": 150, "07936508": 150, "00793651": 150, "71428571": 150, "07142857": 150, "47619048": 150, "14285714": 150, "02597403": 150, "0021645": 150, "75000000e": 150, "16666667e": 150, "83333333e": 150, "12121212e": 150, "30303030e": 150, "02": 150, "15850816e": 150, "03": 150, "82750583e": 150, "04": 150, "7": [150, 231], "77777778e": 150, "24444444e": 150, "78787879e": 150, "82828283e": 150, "70240870e": 150, "86480186e": 150, "48640249e": 150, "55400155e": 150, "0th": 150, "solve_cosine_coefs_for_hd_drag": 150, "hd_drag": [151, 152, 153], "b1": [151, 152, 153], "b2": 151, "beta_": [152, 153, 154, 155, 158], "2n": [152, 153, 154, 155, 158], "d_k": [152, 153, 156, 157], "continu": [152, 153], "2k": [152, 153], "slightli": [152, 153], "derivative_coefs_arr": [154, 155], "cosine_coefs_arr": [154, 155, 156], "number_of_suppressed_freq": 157, "suppressed_freq_arr": 158, "b5": 158, "beta_0": 158, "ghz": 158, "realpuls": [159, 164, 223, 225, 226, 229], "multiplexediqpuls": [159, 168], "timetrac": 159, "complexintegr": [159, 170], "thresholdstatediscrimin": 159, "delay_sampl": [160, 162, 170, 171], "acquir": [160, 168, 228], "qb1__readout": 160, "strictli": [161, 228, 229], "strict": [161, 227, 228], "version": [161, 230, 231], "dd": 161, "outcom": 163, "choic": 163, "ok": [163, 165, 166, 169], "get_child_instruct": [163, 166], "child": [163, 166, 205, 206, 223, 226], "collect": [164, 228], "scale_i": [165, 229], "scale_q": [165, 229], "upconvert": 165, "carrier": 165, "success": 165, "get_waveform": [165, 166, 169], "command": [166, 228, 232], "entri": [167, 229], "outsid": [167, 228, 229], "truncat": [167, 204, 227], "neg": 167, "probe_puls": 168, "feedback_signal_label": [170, 227], "transmit": 170, "duration_sampl": 171, "captur": [171, 230], "updat": [172, 227, 232], "step": [173, 195, 227], "sure": 173, "synchron": 177, "program": 177, "critic": 177, "constructor": 177, "account": [177, 195, 227], "pprint": 177, "time_unit": 177, "fix": [177, 228], "graphic": 177, "represent": [177, 213, 228], "symbol": 177, "keysview": 177, "mutat": [177, 178], "vice": [177, 178], "versa": [177, 178], "immut": [177, 178], "add_channel": 177, "channel_nam": [177, 234], "front_pad": 177, "to_dur": 177, "variabl": [177, 205, 227], "front_pad_in_second": 177, "pad_to_hard_box": 177, "pad_to_hard_box_in_second": 177, "smallest": 177, "revers": 177, "preserv": [177, 201, 227, 228, 234], "rear": 177, "reverse_hard_box": 177, "No": [177, 227], "synchronis": 177, "break": 177, "cleanup": [177, 227], "clean": [177, 227], "thing": [177, 187, 189], "has_content_in": 177, "keep": [178, 205], "_instruct": 178, "_durat": 178, "prepend": 178, "pop": 178, "idx": [178, 204], "12": [179, 207, 208, 230], "comp": [179, 227], "1281": 179, "visualis": [181, 227], "view": [182, 227], "browser": 182, "jupyt": 182, "notebook": 182, "ipython": 182, "core": [182, 227], "displai": [182, 227, 231], "inspect": 182, "serial": 183, "reimport": 183, "document": [183, 227, 231], "appear": [183, 228, 231], "polynomialcosin": [183, 227], "piecewiseconst": [183, 227], "chirp": [183, 185, 227], "chirpimag": [183, 227], "freq_start": [184, 185], "freq_stop": [184, 185], "05": [184, 185], "taper": 184, "rectangular": [184, 205], "hann": 184, "nyquist": [184, 193], "zone": [184, 193], "constrain": 184, "5707963267948966": 185, "imaginari": 185, "period": [186, 194], "sinusoid": [186, 190, 192, 194], "made": [187, 189, 213, 229, 230, 231, 234], "buffer": [188, 191], "piecewis": [188, 191, 193], "plateau": [188, 190, 191], "combin": [188, 191, 205, 231], "dummi": 189, "bug": 189, "fixm": 189, "p": [190, 194, 233], "Its": [190, 228], "midpoint": [190, 195], "changepoint": 193, "polynomi": [194, 227], "minim": [195, 201, 227], "adiabat": [195, 233], "prior": 195, "lambda_n": 195, "tau_": 195, "acceler": 195, "reconstruct": 195, "tau": 195, "lab": 195, "interpol": 195, "v": [195, 223, 226, 227], "voltag": 195, "go": [195, 228, 229], "advis": [195, 231], "look": [195, 229], "mathemat": [195, 230], "heavi": 195, "leakag": [195, 233], "strength": 195, "squid": [195, 227], "asymmetri": [195, 227], "_sample_normalized_slepian": 195, "coord": 195, "_t_tau": 195, "num_sampl": 195, "129": 195, "convers": [195, 229, 231], "solut": 195, "therefor": [195, 228], "scipi": [195, 227], "romb": 195, "_theta_tau": 195, "shown": [195, 227, 232], "tau_puls": 195, "quantum_op": 197, "optional_param": [197, 227], "short": [197, 207], "simpl": [197, 213, 228, 229, 233], "unambigu": [197, 228, 229], "subsystem": 197, "qumod": 197, "pictur": [197, 232], "famili": [197, 228], "plural": 197, "intent": 197, "target": [197, 227, 234], "callabl": [197, 229], "lowest": [197, 228], "docstr": [197, 227], "exact": [197, 229], "first_qubit_basis_ket": 197, "second_qubit_basis_ket": 197, "set_default_implement": [197, 229], "set_default_implementation_for_locu": [197, 229], "cal_data": 199, "noiseless": 201, "sync": 201, "spacer": 201, "try": [201, 227], "segmentpoint": 201, "nonsolid": 202, "nevertheless": 202, "tol": [204, 207, 208], "frac": 204, "serv": 204, "pointer": 204, "smaller": [204, 207, 208], "toler": 204, "remaind": 204, "cut_tail": 204, "cut": 204, "tail": 204, "onward": 204, "rewind": 204, "fastforward": 204, "forward": 204, "child_schedul": [205, 206], "child_compon": [205, 206], "neighborhood_compon": [205, 206, 210, 213], "component_dur": [205, 206], "is_alap": [205, 206], "respect": [205, 211, 223, 226, 228, 229], "hard": [205, 227], "rag": [205, 207, 208], "edg": [205, 227], "earliest": [205, 206], "max": 205, "extend_hard_boundary_in_second": 205, "computational_reson": [205, 206], "addition": [205, 206, 232], "ever": [205, 206], "alap": [205, 206, 212, 213, 228, 234], "As": [205, 206, 213, 229, 232], "late": [205, 206, 212, 213], "extend_hard_boundari": 206, "incom": 206, "extens": [207, 208, 227], "reserv": [209, 227], "resourc": 209, "schedulingstrategi": [209, 210, 211, 213, 234], "locus_compon": [210, 213, 229], "asap": [210, 212, 213, 228, 232, 234], "from_readout_trigg": 210, "readout_trigg": 210, "probe_channel": 210, "block_channel": 210, "block_dur": 210, "soon": [212, 213, 227, 232], "fragment": 213, "human": [213, 228, 229], "readabl": [213, 227, 228, 231], "union": [213, 231, 234], "rule": [213, 217, 227, 228, 229, 234], "operand": [213, 234], "pipe": [213, 234], "group": [213, 229, 234], "let": [213, 229], "a_then_b": 213, "c_then_d": 213, "set_alap": [213, 234], "abcd": 213, "abb": 213, "ccd": 213, "all_togeth": 213, "dictat": 213, "flatten": 213, "ancestor": 213, "set_asap": 213, "print": [213, 227, 231, 234], "_idx": 213, "type_hint": 215, "python": [215, 227, 229], "typehint": 215, "psi_1": 217, "psi_2": 217, "decrement": 217, "beforehand": 217, "opposit": 217, "direct": [217, 231], "playlistvalidationerror": 218, "awgschedulevalidationdata": [218, 223], "awgschedulevalidationerror": 218, "invalidinstructionerror": 218, "sampling_r": 219, "min_number_of_sampl": 219, "issue_str": 221, "encount": 221, "channel_descript": [223, 224], "device_constraint": [223, 224, 226], "issu": [227, 231], "sw": 227, "1663": 227, "split": [227, 228], "qnd": 227, "mid": 227, "measure_fidel": 227, "termin": [227, 231], "ruff": 227, "miss": 227, "exempt": 227, "librari": [227, 230, 232], "a_k": 227, "iq_puls": 227, "register_implement": [227, 228, 229], "register_oper": [227, 228, 229], "introduc": [227, 229], "mypi": 227, "ci": 227, "1615": 227, "were": 227, "visual": [227, 228, 232], "faster": 227, "numpi": [227, 234], "inspector": 227, "render": 227, "mr": 227, "1086": 227, "bump": 227, "coco": 227, "isort": 227, "patch": 227, "1429": 227, "usag": [227, 229], "broken": 227, "inspect_playlist": [227, 228], "ifram": 227, "tag": 227, "licens": [227, 230], "vulner": 227, "safe_load": 227, "harm": 227, "remot": 227, "1378": 227, "modulated_drag_crf": 227, "baseclass": 227, "packag": 227, "publish": 227, "doc": [227, 229], "footer": 227, "1392": 227, "pep": 227, "604": 227, "lint": 227, "1230": 227, "rework": 227, "delet": 227, "major": 227, "stai": 227, "seen": 227, "register_g": 227, "validate_oper": 227, "compare_oper": 227, "add_implement": 227, "validate_implement": 227, "set_default": 227, "build_quantum_op": [227, 228], "py": 227, "yield": 227, "didn": 227, "renam": 227, "crystal": 227, "star": 227, "architectur": 227, "crystal_5": 227, "star_6": 227, "mini": 227, "mini_crystal_20": 227, "crystal_20": 227, "1059": 227, "electron": [227, 229, 231], "refactor": 227, "register_gate_implement": 227, "imposs": 227, "retain": [227, 231], "rapidjson": 227, "685": 227, "previous": 227, "x90": 227, "codebas": 227, "467": 227, "speed": 227, "reshap": 227, "neither": [227, 229], "assing": 227, "signific": 227, "speedup": 227, "anywai": 227, "diffrenet": 227, "broader": 227, "compatibili": 227, "migrat": 227, "guid": 227, "builtin": 227, "easili": [227, 230, 234], "quantumcircuit": 227, "extract": 227, "crf_acstarkcrf": 227, "slepian_acstarkcrf": 227, "repo": 227, "organ": [227, 234], "1042": 227, "disabl": 227, "horizont": 227, "scroll": 227, "toggl": 227, "cover": 227, "concept": [227, 229, 230], "531": 227, "gitlab": 227, "public": 227, "page": [227, 230, 231], "776": 227, "514": 227, "apach": [227, 231], "extlink": 227, "sphinx": 227, "916": 227, "intersphinx": 227, "665": 227, "becaus": [227, 229], "proper": 227, "former": 227, "semant": [227, 228], "disturb": 227, "774": 227, "leak": 227, "web": 227, "artifact": 227, "resetwait": 227, "comfort": [227, 229], "timelin": [227, 228], "redisplai": 227, "upcom": 227, "releas": 227, "prefer": [227, 229, 231], "font": 227, "viewer": 227, "358": 227, "typo": 227, "api": [227, 229, 230, 234], "workflow": [227, 234], "meth": 227, "pulla": [227, 230, 234], "crash": 227, "discoveri": 227, "throw": 227, "sc": 227, "nonsens": 227, "mcm": 227, "merge_dict": 227, "crf_crf": 227, "interfac": [227, 229, 231], "feedback_label": 227, "conditional_prx": 227, "hopefulli": 227, "yml": 227, "conditionalreset": 227, "constant_qnd": 227, "qndness": 227, "phase_increment_befor": 227, "sign": 227, "phase_transform": 227, "fulfil": 227, "satisfi": [227, 232], "conditionalprx": 227, "accept": [227, 231], "signifi": 227, "weigth": 227, "whitelist": 227, "2112": 227, "write": [227, 229, 231], "1831": 227, "drag_crf_sx": 227, "drag_gaussian_sx": 227, "prx_u": 227, "prx_sx": 227, "_x_pi_puls": 227, "547": 227, "prioritis": 227, "1929": 227, "1468": 227, "programm": 227, "1925": 227, "crude": 227, "measure_nop": 227, "validate_move_instruct": 227, "2056": 227, "pipelin": [227, 232], "overview": 228, "terminologi": 228, "deliv": 228, "send": [228, 232], "assembli": 228, "batch": 228, "summar": 228, "imag": [228, 232], "illustr": [228, 232], "visibl": 228, "microwav": [228, 230], "ambigu": 228, "machin": 228, "violat": 228, "concern": 228, "philosophi": 228, "inaccess": 228, "attempt": 228, "smart": 228, "magic": 228, "inconsist": 228, "transpar": 228, "technic": 228, "apart": 228, "few": 228, "instant": 228, "thought": [228, 232], "desir": [228, 234], "read": [228, 232, 234], "disjoint": [228, 234], "partli": 228, "figur": [228, 232], "demonstr": 228, "explain": 228, "nonunitari": 228, "variou": [228, 229], "runtim": [228, 234], "bridg": 228, "gap": 228, "despit": 228, "appropri": [228, 231], "repeat": [228, 234], "repetit": 228, "encod": 228, "aim": 228, "fit": [228, 231], "chunk": 228, "neat": 228, "question": [229, 234], "cnot": 229, "NOT": 229, "On": [229, 232], "hand": 229, "frozen": 229, "programmat": 229, "procedur": 229, "invok": 229, "random": 229, "benchmark": 229, "qc": 229, "emphasi": 229, "def": 229, "superclass": 229, "triplet": 229, "_default": 229, "implementation_": 229, "default_prx_qb1": 229, "necessarili": [229, 231], "special_prx_qb1": 229, "my_special_prx": 229, "default_box": 229, "chain": [229, 232], "default_cz_box": 229, "pure": 229, "develop": 229, "thumb": 229, "rest": 229, "simplifi": [229, 232], "educ": 229, "__class__": 229, "__name__": 229, "subsect": 229, "relai": 229, "live": 229, "asymmetr": 229, "tri": 229, "replic": 229, "mandatori": 229, "alter": 229, "physcial": 229, "averag": 229, "mu": 229, "spread": 229, "recip": 229, "offset_coord": 229, "exp": 229, "resampl": 229, "understand": [229, 232, 233], "unitless": 229, "scalar_coeffieci": 229, "quick": [229, 230, 234], "simplest": 229, "compositehadamard": 229, "hadamard": 229, "member_prx": 229, "onelin": 229, "prx_mycoolwaveform": 229, "coolwaveformi": 229, "coolwaveformq": 229, "my": 229, "cool": 229, "cz_mycoolwaveform": 229, "coolcouplerwaveform": 229, "coolqubitwaveform": 229, "measure_mycoolwaveform": 229, "preload": 229, "snippet": 229, "cnot_matrix": 229, "cnot_op": 229, "my_build": 229, "my_cnot_impl": 229, "mycnotclass": 229, "default_g": 229, "_default_implement": 229, "date": [230, 231], "2025": 230, "09": 230, "14": 230, "high": [230, 233], "unifi": 230, "hide": 230, "But": 230, "framework": [230, 234], "machineri": 230, "standalon": 230, "encourag": [230, 234], "familiar": 230, "especi": [230, 234], "miscellan": 230, "pitfal": 230, "changelog": 230, "search": 230, "januari": 231, "2004": [231, 233], "www": 231, "org": 231, "AND": 231, "FOR": 231, "reproduct": 231, "distribut": 231, "shall": 231, "9": [231, 232, 234], "licensor": 231, "copyright": 231, "owner": 231, "entiti": 231, "author": 231, "grant": 231, "legal": 231, "power": 231, "indirect": 231, "manag": 231, "contract": 231, "ii": 231, "ownership": 231, "fifti": 231, "percent": 231, "outstand": 231, "iii": 231, "benefici": 231, "exercis": 231, "permiss": 231, "modif": 231, "softwar": [231, 233], "mechan": 231, "translat": 231, "media": 231, "authorship": 231, "notic": [231, 234], "editori": 231, "revis": 231, "elabor": 231, "mere": 231, "bind": 231, "thereof": 231, "contribut": 231, "intention": 231, "submit": 231, "inclus": 231, "behalf": 231, "verbal": 231, "written": 231, "mail": 231, "discuss": 231, "conspicu": 231, "Not": [231, 234], "contributor": 231, "whom": 231, "incorpor": 231, "herebi": 231, "perpetu": 231, "worldwid": 231, "exclus": 231, "charg": 231, "royalti": 231, "free": [231, 233], "irrevoc": 231, "reproduc": 231, "publicli": 231, "sublicens": 231, "patent": 231, "offer": 231, "sell": 231, "claim": 231, "infring": 231, "alon": 231, "institut": 231, "litig": 231, "counterclaim": 231, "lawsuit": 231, "alleg": 231, "contributori": 231, "redistribut": 231, "medium": 231, "meet": 231, "recipi": 231, "promin": 231, "trademark": 231, "pertain": 231, "along": 231, "wherev": 231, "third": 231, "parti": 231, "alongsid": 231, "addendum": 231, "constru": 231, "statement": [231, 232], "compli": 231, "submiss": 231, "notwithstand": 231, "herein": 231, "supersed": 231, "agreement": 231, "regard": 231, "trade": 231, "servic": 231, "customari": 231, "disclaim": 231, "warranti": 231, "law": 231, "agre": 231, "AS": 231, "OR": 231, "OF": 231, "kind": 231, "impli": 231, "titl": 231, "merchant": 231, "sole": 231, "risk": 231, "liabil": 231, "event": 231, "theori": 231, "tort": 231, "neglig": 231, "deliber": 231, "grossli": 231, "liabl": 231, "damag": 231, "incident": 231, "consequenti": 231, "inabl": 231, "loss": 231, "goodwil": 231, "stoppag": 231, "failur": 231, "malfunct": 231, "commerci": 231, "fee": 231, "indemn": 231, "oblig": 231, "indemnifi": 231, "harmless": 231, "incur": 231, "assert": 231, "boilerpl": 231, "enclos": 231, "bracket": 231, "comment": 231, "easier": 231, "identif": 231, "archiv": 231, "2024": [231, 233], "complianc": 231, "govern": 231, "show": 232, "flexibl": 232, "goal": 232, "finit": 232, "condition": 232, "qccsw": 232, "excut": 232, "too": 232, "earli": 232, "facilit": 232, "travel": 232, "conditionalinstrucion": 232, "equaival": 232, "feedaback_kei": 232, "reset_qb2": 232, "set_qb3_to_1": 232, "cc_prx_qb4": 232, "2nd": [232, 233], "prx_qb3": 232, "prx_qb4": 232, "80e": [232, 234], "clariti": 232, "bottom": 232, "master": 232, "slave": 232, "compens": 232, "trigger_delai": 232, "explan": 232, "end_delai": 232, "spcecifi": 232, "trigger_mast": 232, "emit": 232, "daisi": 232, "central": 232, "cabl": 232, "eric": 233, "hyypp": 233, "\u00e4": 233, "antti": 233, "vep": 233, "inen": 233, "miha": 233, "papi": 233, "\u010d": 233, "chun": 233, "fai": 233, "chan": 233, "sinan": 233, "inel": 233, "alessandro": 233, "landra": 233, "wei": 233, "liu": 233, "\u00fc": 233, "rgen": 233, "luu": 233, "fabian": 233, "marxer": 233, "caspar": 233, "ockeloen": 233, "korppi": 233, "reduc": 233, "superconduct": 233, "processor": 233, "030353": 233, "doi": 233, "1103": 233, "prxquantum": 233, "john": 233, "martini": 233, "michael": 233, "geller": 233, "_z": 233, "phy": 233, "rev": 233, "022307": 233, "aug": 233, "2014": 233, "arxiv": 233, "1402": 233, "5467": 233, "physreva": 233, "lyon": 233, "digit": 233, "prentic": 233, "hall": 233, "edit": 233, "isbn": 233, "978": 233, "0131089891": 233, "cecilia": 233, "gisel": 233, "jarn": 233, "heurist": 233, "approach": 233, "anal": 233, "afa": 233, "29": 233, "51": 233, "57": 233, "2018": 233, "1703": 233, "06812": 233, "31527": 233, "analesafa": 233, "eyob": 233, "sete": 233, "nicola": 233, "didier": 233, "angela": 233, "chen": 233, "shobhan": 233, "kulshreshtha": 233, "riccardo": 233, "manenti": 233, "stefano": 233, "poletto": 233, "entangl": 233, "appl": 233, "024050": 233, "2021": 233, "2104": 233, "03511": 233, "physrevappli": 233, "youngkyu": 233, "sung": 233, "leon": 233, "ding": 233, "jochen": 233, "braum\u00fcller": 233, "veps\u00e4l\u00e4inen": 233, "bharath": 233, "kannan": 233, "morten": 233, "kjaergaard": 233, "ami": 233, "green": 233, "gabriel": 233, "o": 233, "samach": 233, "chri": 233, "mcnalli": 233, "david": 233, "kim": 233, "alexand": 233, "melvil": 233, "bethani": 233, "niedzielski": 233, "molli": 233, "schwartz": 233, "jonilyn": 233, "yoder": 233, "terri": 233, "orlando": 233, "simon": 233, "gustavsson": 233, "william": 233, "oliv": 233, "fidel": 233, "zz": 233, "021058": 233, "jun": 233, "2011": 233, "01261": 233, "physrevx": 233, "capabl": 234, "ask": 234, "recogn": 234, "cz_gate_impl": 234, "prx_gate_impl": 234, "measure_gate_impl": 234, "keyword": 234, "instanti": 234, "x180": 234, "y90": 234, "100e": 234, "p1": 234, "p2": 234, "handi": 234, "circuit3": 234, "word": 234, "slide": 234, "past": 234, "neighbour": 234, "neighbourhood": 234, "worri": 234, "advers": 234, "ruin": 234, "best": 234, "arrang": 234, "aid": 234, "discov": 234, "all_qubit": 234, "get_neighbor_locus_compon": 234, "160e": 234, "cz_schedul": 234, "forget": 234}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [17, 0, 0, "-", "gate_implementation"], [34, 0, 0, "-", "gates"], [128, 0, 0, "-", "playlist"], [196, 0, 0, "-", "quantum_ops"], [201, 0, 0, "-", "scheduler"], [209, 0, 0, "-", "timebox"], [214, 0, 0, "-", "utils"], [218, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "Circuit"], [12, 2, 1, "", "CircuitOperationList"], [13, 1, 1, "", "get_unitary_from_circuit"], [14, 1, 1, "", "get_unitary_from_op"], [15, 1, 1, "", "reorder"], [16, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.Circuit": [[11, 4, 1, "", "all_locus_components"], [11, 3, 1, "", "instructions"], [11, 3, 1, "", "metadata"], [11, 3, 1, "", "name"], [11, 4, 1, "", "validate"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[12, 4, 1, "", "_set_specific_operation_shortcut"], [12, 4, 1, "", "add_op"], [12, 4, 1, "", "add_qubits"], [12, 4, 1, "", "barrier"], [12, 4, 1, "", "compose"], [12, 4, 1, "", "count_ops"], [12, 4, 1, "", "find_qubits"], [12, 4, 1, "", "get_unitary"], [12, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[18, 2, 1, "", "CompositeCache"], [19, 2, 1, "", "CompositeGate"], [20, 2, 1, "", "CustomIQWaveforms"], [21, 2, 1, "", "GateImplementation"], [22, 6, 1, "", "Locus"], [23, 6, 1, "", "NestedParams"], [24, 6, 1, "", "OCalibrationData"], [25, 6, 1, "", "OICalibrationData"], [26, 6, 1, "", "OILCalibrationData"], [27, 6, 1, "", "OpCalibrationDataTree"], [28, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [31, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [32, 2, 1, "", "SinglePulseGate"], [33, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[18, 4, 1, "", "flush"], [18, 4, 1, "", "get"], [18, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[19, 4, 1, "", "build"], [19, 3, 1, "", "customizable_gates"], [19, 3, 1, "", "default_implementations"], [19, 4, 1, "", "optional_calibration_keys"], [19, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[20, 3, 1, "", "dependent_waves"], [20, 3, 1, "", "excluded_parameters"], [20, 3, 1, "", "root_parameters"], [20, 3, 1, "", "wave_i"], [20, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[21, 4, 1, "", "_call"], [21, 3, 1, "", "_timebox_cache"], [21, 4, 1, "", "construct_factorizable"], [21, 4, 1, "", "convert_calibration_data"], [21, 4, 1, "", "duration_in_seconds"], [21, 4, 1, "", "get_custom_locus_mapping"], [21, 4, 1, "", "get_locus_mapping_name"], [21, 4, 1, "", "get_parameters"], [21, 3, 1, "", "id"], [21, 4, 1, "", "may_have_calibration"], [21, 4, 1, "", "needs_calibration"], [21, 4, 1, "", "optional_calibration_keys"], [21, 3, 1, "", "parameters"], [21, 5, 1, "", "qualified_name"], [21, 3, 1, "", "special_implementation"], [21, 3, 1, "", "sub_implementations"], [21, 3, 1, "", "symmetric"], [21, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[32, 4, 1, "", "_call"], [32, 4, 1, "", "_get_pulse"], [32, 4, 1, "", "_get_pulse_channel"], [32, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[35, 0, 0, "-", "barrier"], [37, 0, 0, "-", "conditional"], [41, 0, 0, "-", "cz"], [59, 0, 0, "-", "default_gates"], [60, 0, 0, "-", "delay"], [63, 0, 0, "-", "enums"], [68, 1, 1, "", "expose_implementation"], [69, 0, 0, "-", "flux_multiplexer"], [72, 1, 1, "", "get_implementation_class"], [73, 0, 0, "-", "measure"], [82, 0, 0, "-", "move"], [90, 0, 0, "-", "prx"], [109, 1, 1, "", "register_implementation"], [110, 1, 1, "", "register_operation"], [111, 0, 0, "-", "reset"], [116, 0, 0, "-", "rz"], [123, 0, 0, "-", "sx"], [125, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[36, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[36, 4, 1, "", "_call"], [36, 4, 1, "", "duration_in_seconds"], [36, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[38, 2, 1, "", "CCPRX_Composite"], [39, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [40, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[38, 4, 1, "", "_call"], [38, 3, 1, "", "customizable_gates"], [38, 3, 1, "", "parameters"], [38, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[40, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[42, 2, 1, "", "CZ_CRF"], [43, 2, 1, "", "CZ_CRF_ACStarkCRF"], [44, 2, 1, "", "CZ_GaussianSmoothedSquare"], [45, 2, 1, "", "CZ_Slepian"], [46, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [47, 2, 1, "", "CZ_Slepian_CRF"], [48, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [49, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [50, 2, 1, "", "FluxPulseGate"], [51, 2, 1, "", "FluxPulseGate_CRF_CRF"], [52, 2, 1, "", "FluxPulseGate_SmoothConstant"], [53, 2, 1, "", "FluxPulseGate_TGSS_CRF"], [54, 2, 1, "", "FluxPulse_SmoothConstant_SmoothConstant"], [55, 2, 1, "", "FluxPulse_SmoothConstant_coupler"], [56, 2, 1, "", "FluxPulse_SmoothConstant_qubit"], [57, 1, 1, "", "round_to_granularity"], [58, 1, 1, "", "split_flat_top_part_into_granular_parts"]], "iqm.pulse.gates.cz.CZ_CRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_drive_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_drive_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[48, 3, 1, "", "coupler_wave"], [48, 3, 1, "", "parameters"], [48, 3, 1, "", "qubit_wave"], [48, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[49, 4, 1, "", "_ac_stark_pulse"], [49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[50, 4, 1, "", "_call"], [50, 3, 1, "", "coupler_wave"], [50, 4, 1, "", "duration_in_seconds"], [50, 3, 1, "", "excluded_parameters"], [50, 4, 1, "", "get_locus_mapping_name"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant": [[52, 3, 1, "", "coupler_wave"], [52, 3, 1, "", "fall_wave"], [52, 3, 1, "", "parameters"], [52, 3, 1, "", "qubit_wave"], [52, 3, 1, "", "rise_wave"], [52, 3, 1, "", "root_parameters"], [52, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[53, 3, 1, "", "coupler_wave"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "qubit_wave"], [53, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant": [[54, 3, 1, "", "coupler_wave"], [54, 3, 1, "", "fall_wave"], [54, 3, 1, "", "parameters"], [54, 3, 1, "", "qubit_wave"], [54, 3, 1, "", "rise_wave"], [54, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler": [[55, 3, 1, "", "coupler_wave"], [55, 3, 1, "", "fall_wave"], [55, 3, 1, "", "parameters"], [55, 3, 1, "", "qubit_wave"], [55, 3, 1, "", "rise_wave"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit": [[56, 3, 1, "", "coupler_wave"], [56, 3, 1, "", "fall_wave"], [56, 3, 1, "", "parameters"], [56, 3, 1, "", "qubit_wave"], [56, 3, 1, "", "rise_wave"], [56, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[61, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [62, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[62, 4, 1, "", "_call"], [62, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[64, 6, 1, "", "TWO_QUBIT_UNITARIES"], [65, 2, 1, "", "TwoQubitGate"], [66, 6, 1, "", "XYGATE_UNITARIES"], [67, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[65, 3, 1, "", "CZ"], [65, 3, 1, "", "ISWAP"], [65, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[70, 2, 1, "", "FluxMultiplexer_SampleLinear"], [71, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[70, 4, 1, "", "get_custom_locus_mapping"], [70, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[74, 2, 1, "", "Measure_Constant"], [75, 2, 1, "", "Measure_Constant_Qnd"], [76, 2, 1, "", "Measure_CustomWaveforms"], [77, 2, 1, "", "ProbePulse_CustomWaveforms"], [78, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [79, 2, 1, "", "Probe_Constant"], [80, 2, 1, "", "Shelved_Measure_Constant"], [81, 2, 1, "", "Shelved_Measure_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[74, 3, 1, "", "dependent_waves"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "wave_i"], [74, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[75, 3, 1, "", "dependent_waves"], [75, 3, 1, "", "parameters"], [75, 3, 1, "", "wave_i"], [75, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[76, 4, 1, "", "_build_instructions"], [76, 4, 1, "", "_call"], [76, 3, 1, "", "_multiplexed_timeboxes"], [76, 3, 1, "", "_time_traces"], [76, 3, 1, "", "dependent_waves"], [76, 4, 1, "", "duration_in_seconds"], [76, 4, 1, "", "get_locus_mapping_name"], [76, 4, 1, "", "probe_timebox"], [76, 3, 1, "", "root_parameters"], [76, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[77, 4, 1, "", "_build_instructions"], [77, 4, 1, "", "_call"], [77, 3, 1, "", "dependent_waves"], [77, 4, 1, "", "duration_in_seconds"], [77, 4, 1, "", "get_locus_mapping_name"], [77, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[78, 4, 1, "", "_build_instructions"], [78, 4, 1, "", "_call"], [78, 3, 1, "", "_multiplexed_timeboxes"], [78, 3, 1, "", "dependent_waves"], [78, 4, 1, "", "duration_in_seconds"], [78, 4, 1, "", "get_locus_mapping_name"], [78, 4, 1, "", "probe_timebox"], [78, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[79, 3, 1, "", "dependent_waves"], [79, 3, 1, "", "parameters"], [79, 3, 1, "", "wave_i"], [79, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_Constant": [[80, 3, 1, "", "dependent_waves"], [80, 3, 1, "", "parameters"], [80, 3, 1, "", "wave_i"], [80, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms": [[81, 4, 1, "", "_call"], [81, 3, 1, "", "dependent_waves"], [81, 4, 1, "", "probe_timebox"]], "iqm.pulse.gates.move": [[83, 2, 1, "", "MOVE_CRF_CRF"], [84, 2, 1, "", "MOVE_CustomWaveforms"], [85, 2, 1, "", "MOVE_SLEPIAN_CRF"], [86, 2, 1, "", "MOVE_TGSS_CRF"], [87, 2, 1, "", "MoveMarker"], [88, 1, 1, "", "apply_move_gate_phase_corrections"], [89, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[83, 3, 1, "", "coupler_wave"], [83, 3, 1, "", "parameters"], [83, 3, 1, "", "qubit_wave"], [83, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[84, 4, 1, "", "_call"], [84, 3, 1, "", "coupler_wave"], [84, 3, 1, "", "parameters"], [84, 3, 1, "", "qubit_wave"], [84, 3, 1, "", "root_parameters"], [84, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF": [[85, 3, 1, "", "coupler_wave"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "qubit_wave"], [85, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[86, 3, 1, "", "coupler_wave"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "qubit_wave"], [86, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[87, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[91, 2, 1, "", "ABC_Constant_smooth"], [92, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [93, 2, 1, "", "PRX_Cosine"], [94, 2, 1, "", "PRX_CustomWaveforms"], [95, 2, 1, "", "PRX_CustomWaveformsSX"], [96, 2, 1, "", "PRX_DRAGCosineRiseFall"], [97, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [98, 2, 1, "", "PRX_DRAGGaussian"], [99, 2, 1, "", "PRX_DRAGGaussianSX"], [100, 2, 1, "", "PRX_FastDrag"], [101, 2, 1, "", "PRX_FastDragSX"], [102, 2, 1, "", "PRX_HdDrag"], [103, 2, 1, "", "PRX_HdDragSX"], [104, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [105, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [106, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [107, 2, 1, "", "PrxGateImplementation"], [108, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[91, 4, 1, "", "_call"], [91, 4, 1, "", "_fall_pulse"], [91, 4, 1, "", "_main_pulse"], [91, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[92, 3, 1, "", "fall_waveform"], [92, 3, 1, "", "main_waveform"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "rise_waveform"], [92, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_Cosine": [[93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[94, 4, 1, "", "_get_pulse"], [94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[95, 4, 1, "", "_call"], [95, 4, 1, "", "_get_pulse"], [95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[96, 4, 1, "", "_get_pulse"], [96, 3, 1, "", "dependent_waves"], [96, 3, 1, "", "excluded_parameters"], [96, 3, 1, "", "parameters"], [96, 3, 1, "", "wave_i"], [96, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[97, 4, 1, "", "_get_pulse"], [97, 3, 1, "", "dependent_waves"], [97, 3, 1, "", "excluded_parameters"], [97, 3, 1, "", "parameters"], [97, 3, 1, "", "wave_i"], [97, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[98, 3, 1, "", "dependent_waves"], [98, 3, 1, "", "parameters"], [98, 3, 1, "", "wave_i"], [98, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[99, 3, 1, "", "dependent_waves"], [99, 3, 1, "", "parameters"], [99, 3, 1, "", "wave_i"], [99, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[100, 3, 1, "", "dependent_waves"], [100, 3, 1, "", "parameters"], [100, 3, 1, "", "wave_i"], [100, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[101, 3, 1, "", "dependent_waves"], [101, 3, 1, "", "parameters"], [101, 3, 1, "", "wave_i"], [101, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[102, 3, 1, "", "dependent_waves"], [102, 3, 1, "", "parameters"], [102, 3, 1, "", "wave_i"], [102, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[103, 3, 1, "", "dependent_waves"], [103, 3, 1, "", "parameters"], [103, 3, 1, "", "wave_i"], [103, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[104, 4, 1, "", "_get_pulse"], [104, 3, 1, "", "dependent_waves"], [104, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[105, 4, 1, "", "_get_pulse"], [105, 3, 1, "", "dependent_waves"], [105, 3, 1, "", "excluded_parameters"], [105, 3, 1, "", "parameters"], [105, 3, 1, "", "wave_i"], [105, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[106, 4, 1, "", "_call"]], "iqm.pulse.gates.prx.PrxGateImplementation": [[107, 4, 1, "", "_call"], [107, 4, 1, "", "clifford"], [107, 4, 1, "", "get_locus_mapping_name"], [107, 4, 1, "", "rx"], [107, 4, 1, "", "ry"]], "iqm.pulse.gates.reset": [[112, 6, 1, "", "RESET_FEEDBACK_KEY"], [113, 6, 1, "", "RESET_MEASUREMENT_KEY"], [114, 2, 1, "", "Reset_Conditional"], [115, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[114, 4, 1, "", "_call"], [114, 3, 1, "", "customizable_gates"], [114, 4, 1, "", "get_locus_mapping_name"], [114, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[115, 4, 1, "", "_call"], [115, 4, 1, "", "duration_in_seconds"], [115, 4, 1, "", "get_custom_locus_mapping"], [115, 3, 1, "", "parameters"], [115, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[117, 2, 1, "", "RZ_ACStarkShift"], [118, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [119, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [120, 2, 1, "", "RZ_PRX_Composite"], [121, 2, 1, "", "RZ_Virtual"], [122, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[117, 4, 1, "", "_ac_stark_pulse"], [117, 4, 1, "", "_call"], [117, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[118, 3, 1, "", "ac_stark_waveform"], [118, 3, 1, "", "parameters"], [118, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[119, 3, 1, "", "fall_waveform"], [119, 3, 1, "", "main_waveform"], [119, 3, 1, "", "parameters"], [119, 3, 1, "", "rise_waveform"], [119, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[120, 3, 1, "", "customizable_gates"], [120, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[121, 4, 1, "", "_call"], [121, 4, 1, "", "duration_in_seconds"], [121, 4, 1, "", "get_locus_mapping_name"], [121, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[124, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[124, 4, 1, "", "_call"], [124, 3, 1, "", "customizable_gates"], [124, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[126, 2, 1, "", "UGate"], [127, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[126, 4, 1, "", "_call"], [126, 3, 1, "", "customizable_gates"], [126, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[129, 0, 0, "-", "channel"], [139, 0, 0, "-", "fast_drag"], [149, 0, 0, "-", "hd_drag"], [159, 0, 0, "-", "instructions"], [174, 0, 0, "-", "playlist"], [175, 0, 0, "-", "schedule"], [180, 0, 0, "-", "visualisation"], [183, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[130, 2, 1, "", "ChannelConfiguration"], [131, 2, 1, "", "ChannelDescription"], [132, 2, 1, "", "ChannelProperties"], [133, 2, 1, "", "IQChannelConfig"], [134, 2, 1, "", "ProbeChannelProperties"], [135, 2, 1, "", "RealChannelConfig"], [136, 1, 1, "", "get_channel_properties"], [137, 1, 1, "", "get_channel_properties_from_station_settings"], [138, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[131, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[132, 3, 1, "", "blocks_component"], [132, 3, 1, "", "compatible_instructions"], [132, 4, 1, "", "duration_to_int_samples"], [132, 4, 1, "", "duration_to_samples"], [132, 4, 1, "", "duration_to_seconds"], [132, 3, 1, "", "instruction_duration_granularity"], [132, 3, 1, "", "instruction_duration_min"], [132, 3, 1, "", "is_iq"], [132, 3, 1, "", "is_virtual"], [132, 4, 1, "", "round_duration_to_granularity"], [132, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[133, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[134, 3, 1, "", "center_frequency"], [134, 3, 1, "", "integration_start_dead_time"], [134, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[135, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[140, 2, 1, "", "FastDrag"], [141, 2, 1, "", "FastDragI"], [142, 2, 1, "", "FastDragQ"], [143, 2, 1, "", "SuppressedPulse"], [144, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [145, 1, 1, "", "evaluate_fast_drag_i_envelope"], [146, 1, 1, "", "evaluate_fast_drag_q_envelope"], [147, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [148, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[140, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[141, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[142, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[143, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[150, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [151, 2, 1, "", "HdDrag"], [152, 2, 1, "", "HdDragI"], [153, 2, 1, "", "HdDragQ"], [154, 1, 1, "", "evaluate_hd_drag_i_envelope"], [155, 1, 1, "", "evaluate_hd_drag_q_envelope"], [156, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [157, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [158, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[151, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[152, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[153, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[160, 2, 1, "", "AcquisitionMethod"], [161, 2, 1, "", "Block"], [162, 2, 1, "", "ComplexIntegration"], [163, 2, 1, "", "ConditionalInstruction"], [164, 2, 1, "", "FluxPulse"], [165, 2, 1, "", "IQPulse"], [166, 2, 1, "", "Instruction"], [167, 2, 1, "", "MultiplexedIQPulse"], [168, 2, 1, "", "ReadoutTrigger"], [169, 2, 1, "", "RealPulse"], [170, 2, 1, "", "ThresholdStateDiscrimination"], [171, 2, 1, "", "TimeTrace"], [172, 2, 1, "", "VirtualRZ"], [173, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[160, 3, 1, "", "delay_samples"], [160, 3, 1, "", "implementation"], [160, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[162, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[163, 3, 1, "", "condition"], [163, 4, 1, "", "get_child_instructions"], [163, 3, 1, "", "outcomes"], [163, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[164, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[165, 4, 1, "", "get_waveforms"], [165, 3, 1, "", "modulation_frequency"], [165, 3, 1, "", "phase"], [165, 3, 1, "", "phase_increment"], [165, 3, 1, "", "scale_i"], [165, 3, 1, "", "scale_q"], [165, 4, 1, "", "validate"], [165, 3, 1, "", "wave_i"], [165, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[166, 4, 1, "", "copy"], [166, 3, 1, "", "duration"], [166, 4, 1, "", "get_child_instructions"], [166, 4, 1, "", "get_waveforms"], [166, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[167, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[168, 3, 1, "", "acquisitions"], [168, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[169, 4, 1, "", "get_waveforms"], [169, 3, 1, "", "scale"], [169, 4, 1, "", "validate"], [169, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[170, 3, 1, "", "feedback_signal_label"], [170, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[171, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[172, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[176, 2, 1, "", "Nothing"], [177, 2, 1, "", "Schedule"], [178, 2, 1, "", "Segment"], [179, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[177, 4, 1, "", "add_channels"], [177, 4, 1, "", "append"], [177, 4, 1, "", "channels"], [177, 4, 1, "", "cleanup"], [177, 4, 1, "", "copy"], [177, 5, 1, "", "duration"], [177, 4, 1, "", "duration_in_seconds"], [177, 4, 1, "", "extend"], [177, 4, 1, "", "front_pad"], [177, 4, 1, "", "front_pad_in_seconds"], [177, 4, 1, "", "has_content_in"], [177, 4, 1, "", "items"], [177, 4, 1, "", "pad_to_hard_box"], [177, 4, 1, "", "pad_to_hard_box_in_seconds"], [177, 4, 1, "", "pprint"], [177, 4, 1, "", "reverse"], [177, 4, 1, "", "reverse_hard_box"], [177, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[178, 3, 1, "", "_duration"], [178, 3, 1, "", "_instructions"], [178, 4, 1, "", "append"], [178, 4, 1, "", "copy"], [178, 5, 1, "", "duration"], [178, 4, 1, "", "extend"], [178, 4, 1, "", "pop"], [178, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[181, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[182, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[184, 2, 1, "", "Chirp"], [185, 2, 1, "", "ChirpImag"], [186, 2, 1, "", "Cosine"], [187, 2, 1, "", "CosineFall"], [188, 2, 1, "", "CosineFallFlex"], [189, 2, 1, "", "CosineRise"], [190, 2, 1, "", "CosineRiseFallDerivative"], [191, 2, 1, "", "CosineRiseFlex"], [192, 2, 1, "", "ModulatedCosineRiseFall"], [193, 2, 1, "", "PiecewiseConstant"], [194, 2, 1, "", "PolynomialCosine"], [195, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[184, 4, 1, "", "_sample"], [184, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[185, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[186, 4, 1, "", "_sample"], [186, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[187, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineFallFlex": [[188, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[189, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[190, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFlex": [[191, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[192, 4, 1, "", "_sample"], [192, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.PiecewiseConstant": [[193, 4, 1, "", "_sample"], [193, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.PolynomialCosine": [[194, 4, 1, "", "_sample"], [194, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[195, 4, 1, "", "_sample"], [195, 4, 1, "", "_sample_normalized_slepian"], [195, 4, 1, "", "_t_tau"], [195, 4, 1, "", "_theta_tau"], [195, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[197, 2, 1, "", "QuantumOp"], [198, 6, 1, "", "QuantumOpTable"], [199, 1, 1, "", "validate_locus_calibration"], [200, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[197, 3, 1, "", "arity"], [197, 4, 1, "", "copy"], [197, 5, 1, "", "default_implementation"], [197, 3, 1, "", "defaults_for_locus"], [197, 3, 1, "", "factorizable"], [197, 4, 1, "", "get_default_implementation_for_locus"], [197, 3, 1, "", "implementations"], [197, 3, 1, "", "name"], [197, 3, 1, "", "optional_params"], [197, 3, 1, "", "params"], [197, 4, 1, "", "set_default_implementation"], [197, 4, 1, "", "set_default_implementation_for_locus"], [197, 3, 1, "", "symmetric"], [197, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[202, 6, 1, "", "BLOCKING"], [203, 6, 1, "", "NONSOLID"], [204, 2, 1, "", "SegmentPointer"], [205, 1, 1, "", "extend_hard_boundary"], [206, 1, 1, "", "extend_hard_boundary_in_seconds"], [207, 1, 1, "", "extend_schedule"], [208, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[204, 3, 1, "", "TOL"], [204, 4, 1, "", "cut_tail"], [204, 4, 1, "", "fastforward"], [204, 3, 1, "", "frac"], [204, 4, 1, "", "get"], [204, 3, 1, "", "idx"], [204, 4, 1, "", "next"], [204, 5, 1, "", "remainder"], [204, 4, 1, "", "rewind"], [204, 3, 1, "", "source"], [204, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[210, 2, 1, "", "MultiplexedProbeTimeBox"], [211, 2, 1, "", "SchedulingAlgorithm"], [212, 2, 1, "", "SchedulingStrategy"], [213, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[210, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[211, 3, 1, "", "HARD_BOUNDARY"], [211, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[212, 3, 1, "", "ALAP"], [212, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[213, 3, 1, "", "atom"], [213, 4, 1, "", "atomic"], [213, 3, 1, "", "children"], [213, 4, 1, "", "composite"], [213, 3, 1, "", "label"], [213, 3, 1, "", "locus_components"], [213, 3, 1, "", "neighborhood_components"], [213, 4, 1, "", "print"], [213, 3, 1, "", "scheduling"], [213, 3, 1, "", "scheduling_algorithm"], [213, 4, 1, "", "set_alap"], [213, 4, 1, "", "set_asap"], [213, 4, 1, "", "validate"]], "iqm.pulse.utils": [[215, 1, 1, "", "map_waveform_param_types"], [216, 1, 1, "", "normalize_angle"], [217, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[219, 2, 1, "", "AWGScheduleValidationData"], [220, 7, 1, "", "AWGScheduleValidationError"], [221, 7, 1, "", "InvalidInstructionError"], [222, 7, 1, "", "PlaylistValidationError"], [223, 1, 1, "", "validate_awg_and_schedule_compatibility"], [224, 1, 1, "", "validate_channel"], [225, 1, 1, "", "validate_instruction_and_wf_length"], [226, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 228, 233], "puls": [1, 3, 7, 8, 9, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 57, 58, 61, 64, 66, 68, 71, 72, 88, 89, 108, 109, 110, 112, 113, 122, 127, 136, 137, 138, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 179, 182, 198, 199, 200, 202, 203, 205, 206, 207, 208, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 230, 232], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 57, 58, 61, 64, 66, 68, 71, 72, 88, 89, 108, 109, 110, 112, 113, 122, 127, 136, 137, 138, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 179, 182, 198, 199, 200, 202, 203, 205, 206, 207, 208, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 230], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 234], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 13, 14, 15, 16], "circuit": 11, "circuitoperationlist": 12, "get_unitary_from_circuit": 13, "get_unitary_from_op": 14, "reorder": 15, "reshape_unitari": 16, "gate_implement": [17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33], "compositecach": 18, "compositeg": 19, "customiqwaveform": 20, "gateimplement": [21, 228, 229], "locu": 22, "nestedparam": 23, "ocalibrationdata": 24, "oicalibrationdata": 25, "oilcalibrationdata": 26, "opcalibrationdatatre": 27, "probe_lines_locus_map": 28, "single_components_with_drive_locus_map": 29, "single_components_with_flux_awg_locus_map": 30, "single_components_with_readout_locus_map": 31, "singlepulseg": 32, "get_waveform_paramet": 33, "gate": [34, 57, 58, 61, 64, 66, 68, 71, 72, 88, 89, 108, 109, 110, 112, 113, 122, 127, 229], "barrier": [35, 36], "condit": 37, "ccprx_composit": 38, "ccprx_composite_dragcosinerisefal": 39, "ccprx_composite_draggaussian": 40, "cz": [41, 57, 58], "cz_crf": 42, "cz_crf_acstarkcrf": 43, "cz_gaussiansmoothedsquar": 44, "cz_slepian": 45, "cz_slepian_acstarkcrf": 46, "cz_slepian_crf": 47, "cz_truncatedgaussiansmoothedsquar": 48, "couplerfluxpulsequbitacstarkpulseg": 49, "fluxpulseg": 50, "fluxpulsegate_crf_crf": 51, "fluxpulsegate_smoothconst": 52, "fluxpulsegate_tgss_crf": 53, "fluxpulse_smoothconstant_smoothconst": 54, "fluxpulse_smoothconstant_coupl": 55, "fluxpulse_smoothconstant_qubit": 56, "round_to_granular": 57, "split_flat_top_part_into_granular_part": 58, "default_g": 59, "delai": [60, 61, 62], "delay_max_duration_second": 61, "enum": [63, 64, 66], "two_qubit_unitari": 64, "twoqubitg": 65, "xygate_unitari": 66, "xygat": 67, "expose_implement": 68, "flux_multiplex": [69, 71], "fluxmultiplexer_samplelinear": 70, "toler": [71, 179], "get_implementation_class": 72, "measur": [73, 232], "measure_const": 74, "measure_constant_qnd": 75, "measure_customwaveform": 76, "probepulse_customwaveform": 77, "probepulse_customwaveforms_nointegr": 78, "probe_const": 79, "shelved_measure_const": 80, "shelved_measure_customwaveform": 81, "move": [82, 88, 89], "move_crf_crf": 83, "move_customwaveform": 84, "move_slepian_crf": 85, "move_tgss_crf": 86, "movemark": 87, "apply_move_gate_phase_correct": 88, "validate_move_instruct": 89, "prx": [90, 108], "abc_constant_smooth": 91, "constant_prx_with_smooth_rise_fal": 92, "prx_cosin": 93, "prx_customwaveform": 94, "prx_customwaveformssx": 95, "prx_dragcosinerisefal": 96, "prx_dragcosinerisefallsx": 97, "prx_draggaussian": 98, "prx_draggaussiansx": 99, "prx_fastdrag": 100, "prx_fastdragsx": 101, "prx_hddrag": 102, "prx_hddragsx": 103, "prx_modulatedcustomwaveform": 104, "prx_modulateddragcosinerisefal": 105, "prx_singlepulse_gateimplement": 106, "prxgateimplement": 107, "get_unitary_prx": 108, "register_implement": 109, "register_oper": 110, "reset": [111, 112, 113], "reset_feedback_kei": 112, "reset_measurement_kei": 113, "reset_condit": 114, "reset_wait": 115, "rz": [116, 122], "rz_acstarkshift": 117, "rz_acstarkshift_cosinerisefal": 118, "rz_acstarkshift_smoothconst": 119, "rz_prx_composit": 120, "rz_virtual": 121, "get_unitary_rz": 122, "sx": 123, "sxgate": 124, "u": [125, 127], "ugat": 126, "get_unitary_u": 127, "playlist": [128, 136, 137, 138, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 174, 179, 182, 228], "channel": [129, 136, 137, 138], "channelconfigur": 130, "channeldescript": 131, "channelproperti": 132, "iqchannelconfig": 133, "probechannelproperti": 134, "realchannelconfig": 135, "get_channel_properti": 136, "get_channel_properties_from_station_set": 137, "round_duration_to_granularity_sampl": 138, "fast_drag": [139, 144, 145, 146, 147, 148], "fastdrag": 140, "fastdragi": 141, "fastdragq": 142, "suppressedpuls": 143, "compute_matrix_of_summed_fourier_transform_inner_product": 144, "evaluate_fast_drag_i_envelop": 145, "evaluate_fast_drag_q_envelop": 146, "fourier_transform_of_cos_basis_functions_as_tensor": 147, "solve_fast_coefficients_for_given_weights_and_rang": 148, "hd_drag": [149, 150, 154, 155, 156, 157, 158], "cosine_coefficients_dict": 150, "hddrag": 151, "hddragi": 152, "hddragq": 153, "evaluate_hd_drag_i_envelop": 154, "evaluate_hd_drag_q_envelop": 155, "evaluate_nth_derivative_of_basis_envelop": 156, "solve_cosine_coefs_for_hd_drag": 157, "solve_hd_drag_coefficients_from_suppressed_frequ": 158, "instruct": [159, 166, 228, 229], "acquisitionmethod": 160, "block": [161, 202], "complexintegr": 162, "conditionalinstruct": 163, "fluxpuls": 164, "iqpuls": 165, "multiplexediqpuls": 167, "readouttrigg": [168, 232], "realpuls": 169, "thresholdstatediscrimin": 170, "timetrac": 171, "virtualrz": 172, "wait": 173, "schedul": [175, 177, 179, 201, 202, 203, 205, 206, 207, 208, 228, 234], "noth": 176, "segment": 178, "visualis": [180, 182], "base": [181, 182, 229], "inspect_playlist": 182, "waveform": [183, 229], "chirp": 184, "chirpimag": 185, "cosin": 186, "cosinefal": 187, "cosinefallflex": 188, "cosineris": 189, "cosinerisefallderiv": 190, "cosineriseflex": 191, "modulatedcosinerisefal": 192, "piecewiseconst": 193, "polynomialcosin": 194, "slepian": 195, "quantum_op": [196, 198, 199, 200], "quantumop": [197, 228, 229], "quantumopt": 198, "validate_locus_calibr": 199, "validate_op_calibr": 200, "nonsolid": 203, "segmentpoint": 204, "extend_hard_boundari": 205, "extend_hard_boundary_in_second": 206, "extend_schedul": 207, "extend_schedule_new": 208, "timebox": [209, 213, 228, 234], "multiplexedprobetimebox": 210, "schedulingalgorithm": 211, "schedulingstrategi": 212, "util": [214, 215, 216, 217], "map_waveform_param_typ": 215, "normalize_angl": 216, "phase_transform": 217, "valid": [218, 220, 221, 222, 223, 224, 225, 226], "awgschedulevalidationdata": 219, "awgschedulevalidationerror": 220, "invalidinstructionerror": 221, "playlistvalidationerror": 222, "validate_awg_and_schedule_compat": 223, "validate_channel": 224, "validate_instruction_and_wf_length": 225, "validate_playlist_compat": 226, "changelog": 227, "version": 227, "12": 227, "1": 227, "0": 227, "2025": 227, "09": 227, "featur": [227, 234], "11": 227, "break": 227, "chang": 227, "2": 227, "10": 227, "08": 227, "5": 227, "03": 227, "4": 227, "3": 227, "07": 227, "18": 227, "bug": 227, "fix": 227, "16": 227, "9": 227, "21": 227, "20": 227, "19": 227, "02": 227, "17": 227, "01": 227, "15": 227, "06": 227, "14": 227, "13": 227, "05": 227, "30": 227, "28": 227, "8": 227, "7": 227, "04": 227, "6": 227, "25": 227, "22": 227, "27": 227, "26": 227, "24": 227, "23": 227, "2024": 227, "29": 227, "31": 227, "concept": 228, "class": [228, 229], "quick": 228, "custom": 229, "implement": 229, "calibr": 229, "data": 229, "more": 229, "regist": 229, "content": 230, "indic": 230, "tabl": 230, "licens": 231, "time": 232, "fast": 232, "feedback": 232, "us": 234, "creat": 234, "compos": 234, "resolv": 234, "miscellan": 234, "common": 234, "pitfal": 234}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"CZ_CRF": [[42, "cz-crf"]], "CCPRX_Composite": [[38, "ccprx-composite"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[31, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[32, "singlepulsegate"]], "gates": [[34, "module-iqm.pulse.gates"]], "CCPRX_Composite_DRAGCosineRiseFall": [[39, "ccprx-composite-dragcosinerisefall"]], "CZ_Slepian": [[45, "cz-slepian"]], "Barrier": [[36, "barrier"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[33, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "CZ_CRF_ACStarkCRF": [[43, "cz-crf-acstarkcrf"]], "iqm.pulse.gate_implementation.OCalibrationData": [[24, "iqm-pulse-gate-implementation-ocalibrationdata"]], "CCPRX_Composite_DRAGGaussian": [[40, "ccprx-composite-draggaussian"]], "barrier": [[35, "module-iqm.pulse.gates.barrier"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "cz": [[41, "module-iqm.pulse.gates.cz"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[26, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "CZ_Slepian_ACStarkCRF": [[46, "cz-slepian-acstarkcrf"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[27, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.OICalibrationData": [[25, "iqm-pulse-gate-implementation-oicalibrationdata"]], "CZ_Slepian_CRF": [[47, "cz-slepian-crf"]], "conditional": [[37, "module-iqm.pulse.gates.conditional"]], "CZ_GaussianSmoothedSquare": [[44, "cz-gaussiansmoothedsquare"]], "FluxPulseGate": [[50, "fluxpulsegate"]], "FluxPulse_SmoothConstant_qubit": [[56, "fluxpulse-smoothconstant-qubit"]], "FluxPulseGate_CRF_CRF": [[51, "fluxpulsegate-crf-crf"]], "FluxPulseGate_SmoothConstant": [[52, "fluxpulsegate-smoothconstant"]], "iqm.pulse.gates.expose_implementation": [[68, "iqm-pulse-gates-expose-implementation"]], "Delay": [[62, "delay"]], "CouplerFluxPulseQubitACStarkPulseGate": [[49, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxMultiplexer_SampleLinear": [[70, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[71, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "FluxPulse_SmoothConstant_coupler": [[55, "fluxpulse-smoothconstant-coupler"]], "enums": [[63, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[61, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "iqm.pulse.gates.cz.round_to_granularity": [[57, "iqm-pulse-gates-cz-round-to-granularity"]], "XYGate": [[67, "xygate"]], "TwoQubitGate": [[65, "twoqubitgate"]], "FluxPulseGate_TGSS_CRF": [[53, "fluxpulsegate-tgss-crf"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[64, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "FluxPulse_SmoothConstant_SmoothConstant": [[54, "fluxpulse-smoothconstant-smoothconstant"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[66, "iqm-pulse-gates-enums-xygate-unitaries"]], "default_gates": [[59, "module-iqm.pulse.gates.default_gates"]], "delay": [[60, "module-iqm.pulse.gates.delay"]], "flux_multiplexer": [[69, "module-iqm.pulse.gates.flux_multiplexer"]], "CZ_TruncatedGaussianSmoothedSquare": [[48, "cz-truncatedgaussiansmoothedsquare"]], "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts": [[58, "iqm-pulse-gates-cz-split-flat-top-part-into-granular-parts"]], "iqm.pulse.circuit_operations.reshape_unitary": [[16, "iqm-pulse-circuit-operations-reshape-unitary"]], "Circuit": [[11, "circuit"]], "CircuitOperation": [[5, "circuitoperation"]], "CompositeCache": [[18, "compositecache"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "CompositeGate": [[19, "compositegate"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "builder": [[4, "module-iqm.pulse.builder"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "gate_implementation": [[17, "module-iqm.pulse.gate_implementation"]], "iqm.pulse.gate_implementation.Locus": [[22, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[23, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "CircuitOperationList": [[12, "circuitoperationlist"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "iqm.pulse.circuit_operations.reorder": [[15, "iqm-pulse-circuit-operations-reorder"]], "pulse": [[1, "module-iqm.pulse"]], "GateImplementation": [[21, "gateimplementation"]], "API reference": [[0, "api-reference"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[14, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "CustomIQWaveforms": [[20, "customiqwaveforms"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[13, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "Constant_PRX_with_smooth_rise_fall": [[92, "constant-prx-with-smooth-rise-fall"]], "MOVE_CRF_CRF": [[83, "move-crf-crf"]], "MoveMarker": [[87, "movemarker"]], "measure": [[73, "module-iqm.pulse.gates.measure"]], "Measure_CustomWaveforms": [[76, "measure-customwaveforms"]], "MOVE_TGSS_CRF": [[86, "move-tgss-crf"]], "ProbePulse_CustomWaveforms": [[77, "probepulse-customwaveforms"]], "Shelved_Measure_CustomWaveforms": [[81, "shelved-measure-customwaveforms"]], "MOVE_SLEPIAN_CRF": [[85, "move-slepian-crf"]], "Probe_Constant": [[79, "probe-constant"]], "MOVE_CustomWaveforms": [[84, "move-customwaveforms"]], "PRX_Cosine": [[93, "prx-cosine"]], "iqm.pulse.gates.move.validate_move_instructions": [[89, "iqm-pulse-gates-move-validate-move-instructions"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[88, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "prx": [[90, "module-iqm.pulse.gates.prx"]], "PRX_CustomWaveforms": [[94, "prx-customwaveforms"]], "Measure_Constant": [[74, "measure-constant"]], "Measure_Constant_Qnd": [[75, "measure-constant-qnd"]], "PRX_CustomWaveformsSX": [[95, "prx-customwaveformssx"]], "ProbePulse_CustomWaveforms_noIntegration": [[78, "probepulse-customwaveforms-nointegration"]], "Shelved_Measure_Constant": [[80, "shelved-measure-constant"]], "move": [[82, "module-iqm.pulse.gates.move"]], "iqm.pulse.gates.get_implementation_class": [[72, "iqm-pulse-gates-get-implementation-class"]], "ABC_Constant_smooth": [[91, "abc-constant-smooth"]], "iqm.pulse.validation.validate_playlist_compatibility": [[226, "iqm-pulse-validation-validate-playlist-compatibility"]], "Using ScheduleBuilder": [[234, "using-schedulebuilder"]], "Creating TimeBoxes": [[234, "creating-timeboxes"]], "Composing TimeBoxes": [[234, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[234, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[234, "miscellaneous-features"]], "Common pitfalls": [[234, "common-pitfalls"]], "Custom gate implementations": [[229, "custom-gate-implementations"], [229, "id1"]], "QuantumOp": [[229, "quantumop"], [197, "quantumop"]], "GateImplementation class": [[229, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[229, "instructions-waveforms-and-calibration-data"]], "More base classes": [[229, "more-base-classes"]], "Registering gates and implementations": [[229, "registering-gates-and-implementations"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[223, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.AWGScheduleValidationError": [[220, "iqm-pulse-validation-awgschedulevalidationerror"]], "Concepts and classes": [[228, "concepts-and-classes"]], "Quick reference": [[228, "quick-reference"]], "Instructions": [[228, "instructions"]], "Schedules": [[228, "schedules"]], "TimeBoxes": [[228, "timeboxes"]], "QuantumOps": [[228, "quantumops"]], "GateImplementations": [[228, "gateimplementations"]], "Playlists": [[228, "playlists"]], "iqm.pulse.utils.normalize_angle": [[216, "iqm-pulse-utils-normalize-angle"]], "AWGScheduleValidationData": [[219, "awgschedulevalidationdata"]], "Pulse timing": [[232, "pulse-timing"]], "Measure and ReadoutTrigger": [[232, "measure-and-readouttrigger"]], "Fast feedback timing": [[232, "fast-feedback-timing"]], "validation": [[218, "module-iqm.pulse.validation"]], "iqm.pulse.validation.PlaylistValidationError": [[222, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[225, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "References": [[233, "references"]], "License": [[231, "license"]], "iqm.pulse.validation.InvalidInstructionError": [[221, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.validate_channel": [[224, "iqm-pulse-validation-validate-channel"]], "Changelog": [[227, "changelog"]], "Version 12.1.0 (2025-09-12)": [[227, "version-12-1-0-2025-09-12"]], "Features": [[227, "features"], [227, "id1"], [227, "id2"], [227, "id3"], [227, "id4"], [227, "id5"], [227, "id6"], [227, "id9"], [227, "id10"], [227, "id13"], [227, "id14"], [227, "id15"], [227, "id16"], [227, "id19"], [227, "id20"], [227, "id21"], [227, "id22"], [227, "id23"], [227, "id25"], [227, "id26"], [227, "id27"], [227, "id28"], [227, "id29"], [227, "id32"], [227, "id34"], [227, "id36"], [227, "id37"], [227, "id38"], [227, "id39"], [227, "id40"], [227, "id41"], [227, "id42"], [227, "id44"], [227, "id46"], [227, "id48"], [227, "id49"], [227, "id50"], [227, "id51"], [227, "id52"], [227, "id54"], [227, "id55"], [227, "id56"], [227, "id59"], [227, "id60"], [227, "id61"], [227, "id62"], [227, "id63"], [227, "id64"], [227, "id65"], [227, "id66"], [227, "id67"], [227, "id68"], [227, "id70"], [227, "id71"], [227, "id72"], [227, "id74"], [227, "id76"], [227, "id77"], [227, "id78"], [227, "id82"], [227, "id84"], [227, "id87"], [227, "id89"], [227, "id90"], [227, "id92"], [227, "id95"], [227, "id98"], [227, "id100"], [227, "id101"], [227, "id102"], [227, "id103"], [227, "id104"], [227, "id105"], [227, "id106"], [227, "id108"], [227, "id109"], [227, "id110"], [227, "id111"], [227, "id112"], [227, "id113"], [227, "id114"], [227, "id115"], [227, "id116"], [227, "id117"], [227, "id119"], [227, "id120"], [227, "id122"], [227, "id123"], [227, "id124"]], "Version 12.0.0 (2025-09-11)": [[227, "version-12-0-0-2025-09-11"]], "Breaking changes": [[227, "breaking-changes"], [227, "id11"], [227, "id33"], [227, "id73"], [227, "id88"], [227, "id97"], [227, "id99"], [227, "id107"], [227, "id121"]], "Version 11.2.0 (2025-09-10)": [[227, "version-11-2-0-2025-09-10"]], "Version 11.1.0 (2025-09-08)": [[227, "version-11-1-0-2025-09-08"]], "Version 11.0.0 (2025-09-08)": [[227, "version-11-0-0-2025-09-08"]], "Version 10.5.0 (2025-09-03)": [[227, "version-10-5-0-2025-09-03"]], "Version 10.4.0 (2025-08-12)": [[227, "version-10-4-0-2025-08-12"]], "Version 10.3.0 (2025-08-11)": [[227, "version-10-3-0-2025-08-11"]], "Feature": [[227, "feature"], [227, "id35"]], "Version 10.2.0 (2025-08-08)": [[227, "version-10-2-0-2025-08-08"]], "Version 10.1.0 (2025-07-18)": [[227, "version-10-1-0-2025-07-18"]], "Bug Fixes": [[227, "bug-fixes"], [227, "id53"]], "Version 10.0.0 (2025-07-16)": [[227, "version-10-0-0-2025-07-16"]], "Version 9.21.0 (2025-07-10)": [[227, "version-9-21-0-2025-07-10"]], "Bug fixes": [[227, "id12"], [227, "id17"], [227, "id18"], [227, "id24"], [227, "id30"], [227, "id31"], [227, "id43"], [227, "id47"], [227, "id57"], [227, "id75"], [227, "id79"], [227, "id80"], [227, "id81"], [227, "id83"], [227, "id85"], [227, "id86"], [227, "id91"], [227, "id93"], [227, "id94"], [227, "id96"], [227, "id118"]], "Version 9.20.0 (2025-07-09)": [[227, "version-9-20-0-2025-07-09"]], "Version 9.19.0 (2025-07-08)": [[227, "version-9-19-0-2025-07-08"]], "Version 9.18.0 (2025-07-02)": [[227, "version-9-18-0-2025-07-02"]], "Version 9.17.0 (2025-07-01)": [[227, "version-9-17-0-2025-07-01"]], "Version 9.16.0 (2025-07-01)": [[227, "version-9-16-0-2025-07-01"]], "Version 9.15.0 (2025-06-17)": [[227, "version-9-15-0-2025-06-17"]], "Version 9.14.0 (2025-06-13)": [[227, "version-9-14-0-2025-06-13"]], "Version 9.13.0 (2025-06-11)": [[227, "version-9-13-0-2025-06-11"]], "Version 9.12.0 (2025-05-30)": [[227, "version-9-12-0-2025-05-30"]], "Version 9.11.0 (2025-05-28)": [[227, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[227, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[227, "version-9-9-0-2025-05-19"]], "Version 9.8.0 (2025-05-12)": [[227, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[227, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[227, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[227, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[227, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[227, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[227, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[227, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[227, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[227, "version-9-0-0-2025-04-09"]], "Version 8.13.0 (2025-04-07)": [[227, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[227, "version-8-12-0-2025-04-03"]], "Version 8.11.0 (2025-04-02)": [[227, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[227, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[227, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[227, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[227, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[227, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[227, "version-8-5-0-2025-03-26"]], "Bug fix": [[227, "bug-fix"], [227, "id45"], [227, "id58"], [227, "id69"]], "Version 8.4.0 (2025-03-21)": [[227, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[227, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[227, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[227, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[227, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[227, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[227, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[227, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[227, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[227, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[227, "version-7-19-0-2025-02-04"]], "Version 7.18.0 (2025-02-04)": [[227, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[227, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[227, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[227, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[227, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[227, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[227, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[227, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[227, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[227, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[227, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[227, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[227, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[227, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[227, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[227, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[227, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[227, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[227, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[227, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[227, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[227, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[227, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[227, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[227, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[227, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[227, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[227, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[227, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[227, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[227, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[227, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[227, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[227, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[227, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[227, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[227, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[227, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[227, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[227, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[227, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[227, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[227, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[227, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[227, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[227, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[227, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[227, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[227, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[227, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[227, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[227, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[227, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[227, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[227, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[227, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[227, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[227, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[227, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[227, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[227, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[227, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[227, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[227, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[227, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[227, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[227, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[227, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[227, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[227, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[227, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[227, "version-1-0-2024-07-01"]], "IQM Pulse": [[230, "iqm-pulse"]], "Contents": [[230, "contents"]], "Indices and tables": [[230, "indices-and-tables"]], "iqm.pulse.utils.phase_transformation": [[217, "iqm-pulse-utils-phase-transformation"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[199, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "scheduler": [[201, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.extend_schedule": [[207, "iqm-pulse-scheduler-extend-schedule"]], "SchedulingAlgorithm": [[211, "schedulingalgorithm"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[206, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "SchedulingStrategy": [[212, "schedulingstrategy"]], "iqm.pulse.utils.map_waveform_param_types": [[215, "iqm-pulse-utils-map-waveform-param-types"]], "TimeBox": [[213, "timebox"]], "timebox": [[209, "module-iqm.pulse.timebox"]], "iqm.pulse.scheduler.extend_schedule_new": [[208, "iqm-pulse-scheduler-extend-schedule-new"]], "ModulatedCosineRiseFall": [[192, "modulatedcosinerisefall"]], "Slepian": [[195, "slepian"]], "PolynomialCosine": [[194, "polynomialcosine"]], "iqm.pulse.scheduler.BLOCKING": [[202, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[203, "iqm-pulse-scheduler-nonsolid"]], "MultiplexedProbeTimeBox": [[210, "multiplexedprobetimebox"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[200, "iqm-pulse-quantum-ops-validate-op-calibration"]], "utils": [[214, "module-iqm.pulse.utils"]], "quantum_ops": [[196, "module-iqm.pulse.quantum_ops"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[198, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.scheduler.extend_hard_boundary": [[205, "iqm-pulse-scheduler-extend-hard-boundary"]], "PiecewiseConstant": [[193, "piecewiseconstant"]], "SegmentPointer": [[204, "segmentpointer"]], "HdDragI": [[152, "hddragi"]], "Block": [[161, "block"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[145, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[154, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "IQPulse": [[165, "iqpulse"]], "MultiplexedIQPulse": [[167, "multiplexediqpulse"]], "ComplexIntegration": [[162, "complexintegration"]], "hd_drag": [[149, "module-iqm.pulse.playlist.hd_drag"]], "AcquisitionMethod": [[160, "acquisitionmethod"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[150, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "instructions": [[159, "module-iqm.pulse.playlist.instructions"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[148, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[158, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "HdDragQ": [[153, "hddragq"]], "ConditionalInstruction": [[163, "conditionalinstruction"]], "FluxPulse": [[164, "fluxpulse"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[155, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[156, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[144, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[146, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[157, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "Instruction": [[166, "instruction"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[147, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "HdDrag": [[151, "hddrag"]], "RealPulse": [[169, "realpulse"]], "waveforms": [[183, "module-iqm.pulse.playlist.waveforms"]], "Schedule": [[177, "schedule"]], "Nothing": [[176, "nothing"]], "CosineFallFlex": [[188, "cosinefallflex"]], "Chirp": [[184, "chirp"]], "VirtualRZ": [[172, "virtualrz"]], "CosineFall": [[187, "cosinefall"]], "ChirpImag": [[185, "chirpimag"]], "playlist": [[174, "module-iqm.pulse.playlist.playlist"], [128, "module-iqm.pulse.playlist"]], "ReadoutTrigger": [[168, "readouttrigger"]], "ThresholdStateDiscrimination": [[170, "thresholdstatediscrimination"]], "base": [[181, "module-iqm.pulse.playlist.visualisation.base"]], "Wait": [[173, "wait"]], "CosineRise": [[189, "cosinerise"]], "Cosine": [[186, "cosine"]], "schedule": [[175, "module-iqm.pulse.playlist.schedule"]], "CosineRiseFlex": [[191, "cosineriseflex"]], "Segment": [[178, "segment"]], "TimeTrace": [[171, "timetrace"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[182, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "visualisation": [[180, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[179, "iqm-pulse-playlist-schedule-tolerance"]], "CosineRiseFallDerivative": [[190, "cosinerisefallderivative"]], "RZ_Virtual": [[121, "rz-virtual"]], "SXGate": [[124, "sxgate"]], "iqm.pulse.playlist.channel.get_channel_properties": [[136, "iqm-pulse-playlist-channel-get-channel-properties"]], "FastDragI": [[141, "fastdragi"]], "ChannelConfiguration": [[130, "channelconfiguration"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[137, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[138, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "IQChannelConfig": [[133, "iqchannelconfig"]], "FastDragQ": [[142, "fastdragq"]], "u": [[125, "module-iqm.pulse.gates.u"]], "ChannelProperties": [[132, "channelproperties"]], "iqm.pulse.gates.u.get_unitary_u": [[127, "iqm-pulse-gates-u-get-unitary-u"]], "sx": [[123, "module-iqm.pulse.gates.sx"]], "fast_drag": [[139, "module-iqm.pulse.playlist.fast_drag"]], "UGate": [[126, "ugate"]], "iqm.pulse.gates.rz.get_unitary_rz": [[122, "iqm-pulse-gates-rz-get-unitary-rz"]], "RZ_PRX_Composite": [[120, "rz-prx-composite"]], "channel": [[129, "module-iqm.pulse.playlist.channel"]], "ChannelDescription": [[131, "channeldescription"]], "SuppressedPulse": [[143, "suppressedpulse"]], "ProbeChannelProperties": [[134, "probechannelproperties"]], "FastDrag": [[140, "fastdrag"]], "RealChannelConfig": [[135, "realchannelconfig"]], "iqm.pulse.gates.register_implementation": [[109, "iqm-pulse-gates-register-implementation"]], "PRX_SinglePulse_GateImplementation": [[106, "prx-singlepulse-gateimplementation"]], "PRX_ModulatedDRAGCosineRiseFall": [[105, "prx-modulateddragcosinerisefall"]], "PrxGateImplementation": [[107, "prxgateimplementation"]], "PRX_HdDrag": [[102, "prx-hddrag"]], "PRX_HdDragSX": [[103, "prx-hddragsx"]], "PRX_FastDragSX": [[101, "prx-fastdragsx"]], "Reset_Wait": [[115, "reset-wait"]], "RZ_ACStarkShift_CosineRiseFall": [[118, "rz-acstarkshift-cosinerisefall"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[112, "iqm-pulse-gates-reset-reset-feedback-key"]], "PRX_DRAGCosineRiseFall": [[96, "prx-dragcosinerisefall"]], "PRX_FastDrag": [[100, "prx-fastdrag"]], "PRX_ModulatedCustomWaveForms": [[104, "prx-modulatedcustomwaveforms"]], "rz": [[116, "module-iqm.pulse.gates.rz"]], "reset": [[111, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[113, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[114, "reset-conditional"]], "PRX_DRAGCosineRiseFallSX": [[97, "prx-dragcosinerisefallsx"]], "iqm.pulse.gates.prx.get_unitary_prx": [[108, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_operation": [[110, "iqm-pulse-gates-register-operation"]], "PRX_DRAGGaussianSX": [[99, "prx-draggaussiansx"]], "PRX_DRAGGaussian": [[98, "prx-draggaussian"]], "RZ_ACStarkShift_smoothConstant": [[119, "rz-acstarkshift-smoothconstant"]], "RZ_ACStarkShift": [[117, "rz-acstarkshift"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [17, "module-iqm.pulse.gate_implementation"], [34, "module-iqm.pulse.gates"], [35, "module-iqm.pulse.gates.barrier"], [37, "module-iqm.pulse.gates.conditional"], [41, "module-iqm.pulse.gates.cz"], [59, "module-iqm.pulse.gates.default_gates"], [60, "module-iqm.pulse.gates.delay"], [63, "module-iqm.pulse.gates.enums"], [69, "module-iqm.pulse.gates.flux_multiplexer"], [73, "module-iqm.pulse.gates.measure"], [82, "module-iqm.pulse.gates.move"], [90, "module-iqm.pulse.gates.prx"], [111, "module-iqm.pulse.gates.reset"], [116, "module-iqm.pulse.gates.rz"], [123, "module-iqm.pulse.gates.sx"], [125, "module-iqm.pulse.gates.u"], [128, "module-iqm.pulse.playlist"], [129, "module-iqm.pulse.playlist.channel"], [139, "module-iqm.pulse.playlist.fast_drag"], [149, "module-iqm.pulse.playlist.hd_drag"], [159, "module-iqm.pulse.playlist.instructions"], [174, "module-iqm.pulse.playlist.playlist"], [175, "module-iqm.pulse.playlist.schedule"], [180, "module-iqm.pulse.playlist.visualisation"], [181, "module-iqm.pulse.playlist.visualisation.base"], [183, "module-iqm.pulse.playlist.waveforms"], [196, "module-iqm.pulse.quantum_ops"], [201, "module-iqm.pulse.scheduler"], [209, "module-iqm.pulse.timebox"], [214, "module-iqm.pulse.utils"], [218, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuit (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.Circuit"]], "all_locus_components() (iqm.pulse.circuit_operations.circuit method)": [[11, "iqm.pulse.circuit_operations.Circuit.all_locus_components"]], "instructions (iqm.pulse.circuit_operations.circuit attribute)": [[11, "iqm.pulse.circuit_operations.Circuit.instructions"]], "metadata (iqm.pulse.circuit_operations.circuit attribute)": [[11, "iqm.pulse.circuit_operations.Circuit.metadata"]], "name (iqm.pulse.circuit_operations.circuit attribute)": [[11, "iqm.pulse.circuit_operations.Circuit.name"]], "validate() (iqm.pulse.circuit_operations.circuit method)": [[11, "iqm.pulse.circuit_operations.Circuit.validate"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[12, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[16, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[17, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[18, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[18, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[18, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[19, "iqm.pulse.gate_implementation.CompositeGate.build"]], "customizable_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[19, "iqm.pulse.gate_implementation.CompositeGate.customizable_gates"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[19, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.compositegate class method)": [[19, "iqm.pulse.gate_implementation.CompositeGate.optional_calibration_keys"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[19, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[20, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[21, "iqm.pulse.gate_implementation.GateImplementation._call"]], "_timebox_cache (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation._timebox_cache"]], "construct_factorizable() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.construct_factorizable"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "id (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation.id"]], "may_have_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.may_have_calibration"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.gateimplementation class method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.optional_calibration_keys"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[21, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "sub_implementations (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation.sub_implementations"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[21, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[21, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[32, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate class method)": [[32, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[32, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[32, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[33, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[34, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[35, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[36, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[36, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[36, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[36, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[37, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "customizable_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite.customizable_gates"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "registered_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite.registered_gates"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[40, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[40, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[41, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[44, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[44, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[44, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[44, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[47, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[47, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[47, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[47, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[48, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[48, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[48, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[48, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[49, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[50, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_smoothconstant (class in iqm.pulse.gates.cz)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.rise_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.root_parameters"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[53, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[53, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[53, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[53, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[53, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "fluxpulse_smoothconstant_smoothconstant (class in iqm.pulse.gates.cz)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.symmetric"]], "fluxpulse_smoothconstant_coupler (class in iqm.pulse.gates.cz)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.symmetric"]], "fluxpulse_smoothconstant_qubit (class in iqm.pulse.gates.cz)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[56, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.symmetric"]], "round_to_granularity() (in module iqm.pulse.gates.cz)": [[57, "iqm.pulse.gates.cz.round_to_granularity"]], "split_flat_top_part_into_granular_parts() (in module iqm.pulse.gates.cz)": [[58, "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts"]], "iqm.pulse.gates.default_gates": [[59, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[60, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[61, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[62, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[62, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[62, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[63, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[64, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[65, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[65, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[65, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[65, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[66, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[67, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[68, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[69, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[70, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[70, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[70, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[71, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[72, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[73, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[74, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[75, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[75, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[75, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[75, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[75, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[76, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[78, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[79, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[79, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[79, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[79, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[79, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "shelved_measure_constant (class in iqm.pulse.gates.measure)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_q"]], "shelved_measure_customwaveforms (class in iqm.pulse.gates.measure)": [[81, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms"]], "_call() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[81, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_customwaveforms attribute)": [[81, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.dependent_waves"]], "probe_timebox() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[81, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.probe_timebox"]], "iqm.pulse.gates.move": [[82, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[83, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[83, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[83, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[83, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[83, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[84, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_slepian_crf (class in iqm.pulse.gates.move)": [[85, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_slepian_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_slepian_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[86, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[86, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[86, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[86, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[86, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[87, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[87, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[88, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[89, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[90, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[91, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[91, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[91, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[91, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[92, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_cosine (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_Cosine"]], "dependent_waves (iqm.pulse.gates.prx.prx_cosine attribute)": [[93, "iqm.pulse.gates.prx.PRX_Cosine.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_cosine attribute)": [[93, "iqm.pulse.gates.prx.PRX_Cosine.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_cosine attribute)": [[93, "iqm.pulse.gates.prx.PRX_Cosine.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_cosine attribute)": [[93, "iqm.pulse.gates.prx.PRX_Cosine.wave_q"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[95, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[95, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[95, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[95, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[99, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[99, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[99, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[99, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[99, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[100, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[101, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[101, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[101, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[101, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[101, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[102, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[103, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[103, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[103, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[103, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[103, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[105, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[106, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[106, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "prxgateimplementation (class in iqm.pulse.gates.prx)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation"]], "_call() (iqm.pulse.gates.prx.prxgateimplementation method)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prxgateimplementation method)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prxgateimplementation class method)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prxgateimplementation method)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prxgateimplementation method)": [[107, "iqm.pulse.gates.prx.PrxGateImplementation.ry"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[108, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[109, "iqm.pulse.gates.register_implementation"]], "register_operation() (in module iqm.pulse.gates)": [[110, "iqm.pulse.gates.register_operation"]], "iqm.pulse.gates.reset": [[111, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[112, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[113, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[114, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[114, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "customizable_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[114, "iqm.pulse.gates.reset.Reset_Conditional.customizable_gates"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[114, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[114, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[115, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[115, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[115, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[115, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[115, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[115, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[116, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[119, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[120, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "customizable_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[120, "iqm.pulse.gates.rz.RZ_PRX_Composite.customizable_gates"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[120, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[121, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[121, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[121, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[121, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[121, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[122, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[123, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[124, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[124, "iqm.pulse.gates.sx.SXGate._call"]], "customizable_gates (iqm.pulse.gates.sx.sxgate attribute)": [[124, "iqm.pulse.gates.sx.SXGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[124, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[125, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[126, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[126, "iqm.pulse.gates.u.UGate._call"]], "customizable_gates (iqm.pulse.gates.u.ugate attribute)": [[126, "iqm.pulse.gates.u.UGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[126, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[127, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[128, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[129, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[130, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[131, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[131, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[132, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[132, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[133, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[133, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[134, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[134, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[134, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[134, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[135, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[135, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[136, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[137, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[138, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[139, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[140, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[140, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[141, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[141, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[142, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[142, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[143, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[143, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[144, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[145, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[146, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[147, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[148, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[149, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[150, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[151, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[151, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[152, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[152, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[153, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[153, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[154, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[155, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[156, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[157, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[158, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[159, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[160, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "implementation (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[160, "iqm.pulse.playlist.instructions.AcquisitionMethod.implementation"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[160, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[162, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[162, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[163, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[163, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[163, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[163, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[163, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[164, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[164, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[165, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[165, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[165, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[165, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[166, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[166, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[166, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[166, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[166, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[166, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[167, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[167, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[168, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[168, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[168, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[169, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[169, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[169, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[169, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[169, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[170, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[170, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[170, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[171, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[171, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[172, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[172, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[173, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[174, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[175, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[176, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[177, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[177, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[177, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[178, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[178, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[178, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[178, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[178, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[178, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[178, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[178, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[178, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[179, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[180, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[181, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[182, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[183, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[184, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[184, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[184, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[185, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[185, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[186, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[186, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[186, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[187, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[187, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinefallflex (class in iqm.pulse.playlist.waveforms)": [[188, "iqm.pulse.playlist.waveforms.CosineFallFlex"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefallflex method)": [[188, "iqm.pulse.playlist.waveforms.CosineFallFlex._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[189, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[189, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[190, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[190, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "cosineriseflex (class in iqm.pulse.playlist.waveforms)": [[191, "iqm.pulse.playlist.waveforms.CosineRiseFlex"]], "_sample() (iqm.pulse.playlist.waveforms.cosineriseflex method)": [[191, "iqm.pulse.playlist.waveforms.CosineRiseFlex._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[192, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[192, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[192, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "piecewiseconstant (class in iqm.pulse.playlist.waveforms)": [[193, "iqm.pulse.playlist.waveforms.PiecewiseConstant"]], "_sample() (iqm.pulse.playlist.waveforms.piecewiseconstant method)": [[193, "iqm.pulse.playlist.waveforms.PiecewiseConstant._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.piecewiseconstant static method)": [[193, "iqm.pulse.playlist.waveforms.PiecewiseConstant.non_timelike_attributes"]], "polynomialcosine (class in iqm.pulse.playlist.waveforms)": [[194, "iqm.pulse.playlist.waveforms.PolynomialCosine"]], "_sample() (iqm.pulse.playlist.waveforms.polynomialcosine method)": [[194, "iqm.pulse.playlist.waveforms.PolynomialCosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.polynomialcosine static method)": [[194, "iqm.pulse.playlist.waveforms.PolynomialCosine.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[195, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[195, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[195, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[195, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[195, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[195, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[196, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[197, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[197, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[197, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[197, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.name"]], "optional_params (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.optional_params"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[197, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[197, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[197, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[198, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[199, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[200, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[201, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[202, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[203, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[204, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[204, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[204, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[204, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[204, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[204, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[204, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[205, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[206, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[207, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[208, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[209, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[210, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[210, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[211, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[211, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[211, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[212, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[212, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[212, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[213, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[213, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[213, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[213, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[213, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[213, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[213, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[213, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[214, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[215, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[216, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[217, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[218, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[219, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[220, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[221, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[222, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[223, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[224, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[225, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[226, "iqm.pulse.validation.validate_playlist_compatibility"]]}})