Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit", "api/iqm.pulse.gates.cz.round_to_granularity", "api/iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_Cosine", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.PrxGateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.register_operation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineFallFlex", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.CosineRiseFlex", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.PolynomialCosine", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.rst", "api/iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.rst", "api/iqm.pulse.gates.cz.round_to_granularity.rst", "api/iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_Cosine.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.PrxGateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.register_operation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineFallFlex.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFlex.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.PolynomialCosine.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_SmoothConstant", "FluxPulseGate_TGSS_CRF", "FluxPulse_SmoothConstant_SmoothConstant", "FluxPulse_SmoothConstant_coupler", "FluxPulse_SmoothConstant_qubit", "iqm.pulse.gates.cz.round_to_granularity", "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "Shelved_Measure_Constant", "Shelved_Measure_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_SLEPIAN_CRF", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_Cosine", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "PrxGateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "iqm.pulse.gates.register_operation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineFallFlex", "CosineRise", "CosineRiseFallDerivative", "CosineRiseFlex", "ModulatedCosineRiseFall", "PolynomialCosine", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 59, 61, 64, 75, 77, 80, 127, 128, 130, 131, 136, 137, 142, 158, 160, 165, 174, 175, 176, 205, 206, 211, 217, 221, 224, 225, 226, 227, 229, 230, 231, 232], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 64, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 159, 193, 195, 197, 215, 225, 226, 228, 230, 231, 232], "instruct": [1, 4, 6, 16, 20, 32, 35, 49, 59, 61, 75, 76, 77, 80, 81, 83, 86, 87, 88, 90, 91, 105, 106, 114, 118, 120, 127, 130, 131, 133, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 215, 216, 219, 221, 223, 224, 225, 228, 230, 232], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 61, 75, 76, 77, 80, 86, 87, 88, 90, 91, 94, 105, 106, 114, 116, 118, 120, 127, 131, 160, 172, 173, 175, 177, 195, 202, 207, 208, 209, 210, 211, 216, 218, 225, 227, 228, 230], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 58, 59, 61, 74, 75, 76, 77, 83, 88, 106, 110, 113, 114, 116, 120, 127, 165, 194, 195, 196, 198, 215, 225, 226, 227, 228, 231, 232], "comput": [1, 5, 6, 16, 31, 75, 83, 113, 124, 127, 131, 142, 143, 146, 147, 149, 150, 151, 152, 163, 165, 176, 177, 195, 199, 203, 204, 211, 215, 225, 226, 227, 228, 229, 232], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 51, 53, 54, 55, 57, 58, 59, 62, 68, 72, 81, 89, 110, 115, 122, 124, 127, 128, 138, 142, 148, 158, 173, 174, 179, 180, 182, 191, 194, 199, 207, 212, 216, 225, 227], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 58, 59, 62, 68, 72, 73, 74, 75, 79, 81, 82, 84, 85, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 110, 115, 117, 122, 124, 127, 128, 138, 148, 158, 173, 174, 176, 179, 180, 182, 194, 199, 207, 211, 212, 216, 225], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 64, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 148, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 207, 208, 209, 210, 211, 212, 216, 217, 225, 226, 227, 229, 230, 232], "subpackag": [1, 33, 127, 179], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 64, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 116, 117, 118, 119, 120, 123, 125, 127, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 148, 150, 151, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 208, 209, 210, 211, 217, 225, 226, 227, 228], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 64, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 147, 148, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 208, 209, 210, 211, 217, 225, 229, 230], "util": [2, 6, 225, 227], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 40, 48, 49, 81, 83, 89, 105, 113, 114, 115, 116, 124, 128, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 180, 187, 190, 193, 194, 195, 199, 211, 212, 216, 225, 227], "depend": [2, 19, 20, 31, 35, 48, 49, 61, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 116, 120, 150, 162, 225, 227], "other": [2, 6, 11, 15, 17, 18, 20, 61, 75, 77, 80, 83, 105, 114, 175, 185, 195, 203, 204, 209, 211, 221, 224, 225, 226, 227, 229, 230, 231, 232], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 64, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 148, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 207, 208, 209, 210, 211, 212, 216, 217, 225, 226, 227, 231, 232], "A": [3, 6, 7, 11, 14, 18, 37, 57, 75, 77, 79, 80, 143, 160, 183, 195, 199, 205, 206, 208, 211, 213, 225, 226, 227, 228, 229, 230, 231, 232], "b": [3, 14, 61, 75, 77, 80, 148, 199, 205, 206, 211, 229], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 67, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 117, 118, 131, 133, 142, 176, 195, 225, 232], "merg": [3, 6, 203], "two": [3, 6, 11, 37, 40, 42, 45, 49, 61, 62, 64, 69, 75, 77, 79, 80, 81, 83, 92, 94, 143, 147, 195, 203, 211, 225, 226, 227, 230, 232], "dictionari": [3, 64, 149, 227], "recurs": [3, 6, 211, 226, 232], "leav": 3, "origin": [3, 11, 15, 159, 176, 177, 225, 229], "unchang": [3, 176], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 120, 121, 123, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 202, 203, 204, 205, 206, 208, 211, 213, 214, 215, 217, 221, 222, 223, 224, 225, 226, 227, 230, 232], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 51, 69, 75, 76, 77, 83, 93, 94, 103, 108, 109, 114, 120, 135, 139, 150, 176, 183, 185, 191, 192, 193, 195, 196, 203, 204, 205, 206, 208, 211, 224, 225, 227], "anoth": [3, 6, 35, 49, 83, 86, 126, 195, 205, 206, 225, 226, 227, 232], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 67, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 117, 118, 131, 133, 137, 139, 140, 141, 142, 150, 151, 152, 176, 195, 202, 203, 204, 225], "whether": [3, 6, 13, 18, 88, 108, 131, 137, 142, 203, 204, 227, 229, 232], "also": [3, 6, 11, 17, 19, 20, 31, 35, 48, 49, 61, 76, 83, 87, 95, 96, 104, 105, 113, 114, 116, 130, 176, 195, 199, 203, 204, 206, 211, 215, 225, 227, 229, 230, 232], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 113, 114, 117, 118, 119, 123, 125, 159, 161, 165, 169, 170, 176, 177, 195, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 222, 224, 225, 227], "empti": [3, 11, 20, 69, 75, 76, 77, 80, 169, 176, 195, 225, 227], "size": [3, 13, 227], "valu": [3, 6, 11, 13, 20, 41, 42, 43, 44, 45, 46, 47, 50, 52, 56, 64, 66, 69, 70, 73, 74, 75, 77, 79, 80, 82, 84, 85, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117, 142, 143, 150, 151, 152, 160, 164, 166, 168, 169, 172, 183, 189, 198, 209, 210, 225, 226, 227, 232], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 51, 69, 75, 83, 87, 94, 95, 96, 104, 105, 113, 119, 123, 125, 131, 136, 139, 142, 143, 146, 147, 149, 150, 159, 163, 166, 169, 176, 177, 181, 182, 183, 185, 189, 191, 192, 193, 202, 204, 208, 211, 221, 225, 226, 227, 229, 230, 232], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 56, 57, 61, 64, 67, 69, 71, 75, 76, 77, 80, 83, 87, 88, 90, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 120, 121, 123, 125, 126, 130, 131, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 168, 176, 177, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 202, 203, 204, 205, 206, 208, 211, 213, 214, 215, 222, 224, 225, 227], "copi": [3, 6, 11, 87, 165, 176, 177, 195, 229], "content": [3, 6, 7, 11, 131, 165, 176, 177, 195, 202, 210, 211, 225, 226, 227, 229, 232], "take": [3, 7, 11, 20, 37, 49, 103, 176, 191, 193, 195, 225, 227, 230, 232], "preced": [3, 34, 35, 61, 120, 215], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 66, 67, 69, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 120, 121, 123, 125, 126, 130, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 168, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 217, 222, 224, 225, 227, 229], "tool": [4, 199, 202, 228], "build": [4, 6, 7, 18, 20, 75, 76, 77, 87, 93, 94, 95, 96, 208, 211, 225, 227], "class": [4, 5, 6, 7, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 64, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 148, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 216, 217, 225, 228, 229], "inherit": [4, 10, 16, 19, 20, 31, 34, 35, 36, 40, 48, 49, 51, 59, 62, 68, 72, 75, 76, 77, 81, 83, 89, 93, 94, 95, 96, 103, 104, 106, 110, 113, 114, 115, 116, 120, 122, 124, 128, 138, 148, 158, 174, 182, 194, 199, 207, 216, 225, 227], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 88, 225], "schedulebuild": [4, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 120, 123, 125, 211, 225, 226, 227, 228], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 225, 226, 227, 230, 232], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 64, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 119, 120, 123, 125, 130, 136, 159, 163, 176, 195, 196, 197, 204, 208, 209, 210, 211, 225, 226, 227, 229, 232], "locu": [5, 6, 7, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 195, 197, 208, 211, 225, 226, 227, 230, 232], "arg": [5, 11, 20, 31, 35, 48, 49, 83, 113, 114, 116, 227], "factori": [5, 6, 131, 133, 163, 195, 208, 211], "implement": [5, 6, 7, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 61, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 113, 114, 116, 117, 118, 119, 120, 123, 125, 139, 142, 159, 161, 169, 170, 176, 195, 197, 198, 215, 225, 226, 228, 230, 231, 232], "object": [5, 6, 11, 17, 32, 129, 130, 131, 147, 159, 165, 176, 177, 195, 202, 211, 217, 225, 227, 229], "specif": [5, 6, 20, 31, 33, 34, 35, 48, 49, 59, 83, 105, 113, 114, 116, 120, 130, 142, 176, 193, 195, 217, 221, 225, 226, 227, 229, 232], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 58, 60, 61, 75, 76, 77, 80, 81, 83, 106, 108, 109, 110, 112, 113, 114, 116, 119, 120, 123, 125, 159, 194, 195, 196, 197, 198, 211, 217, 225, 226, 227, 228, 230, 232], "appli": [5, 6, 37, 49, 61, 80, 81, 83, 86, 87, 105, 114, 165, 195, 225, 226, 227, 229, 230, 232], "part": [5, 6, 20, 51, 57, 90, 169, 184, 186, 188, 189, 191, 195, 202, 211, 225, 226, 227, 229, 230, 232], "qpu": [5, 6, 20, 21, 35, 69, 172, 195, 203, 207, 211, 225, 226, 227, 232], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 61, 73, 74, 75, 76, 77, 78, 79, 80, 83, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 116, 120, 122, 124, 139, 150, 157, 183, 185, 191, 192, 193, 195, 199, 203, 204, 205, 206, 211, 225, 227, 231, 232], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 61, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 116, 120, 139, 143, 150, 151, 152, 153, 154, 155, 156, 157, 183, 185, 191, 192, 193, 203, 204, 211, 225, 227, 231], "circuit": [5, 6, 9, 10, 11, 12, 13, 61, 75, 77, 80, 88, 114, 120, 195, 225, 226, 227, 228, 230, 232], "attribut": [5, 6, 7, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 64, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 116, 117, 118, 119, 120, 123, 125, 130, 131, 132, 133, 134, 139, 140, 141, 142, 148, 150, 151, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 208, 209, 210, 211, 217, 225, 227, 229, 230], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 64, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 150, 151, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 208, 209, 210, 211, 217, 225, 227, 232], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 119, 120, 123, 125, 130, 131, 135, 139, 150, 159, 161, 162, 163, 169, 170, 176, 181, 183, 185, 191, 192, 193, 195, 196, 197, 203, 204, 205, 206, 208, 211, 224, 227], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 37, 57, 69, 75, 76, 77, 113, 114, 119, 123, 125, 131, 133, 135, 147, 157, 162, 163, 164, 165, 166, 167, 168, 176, 195, 208, 211, 213, 215, 217, 227], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 75, 76, 77, 80, 83, 113, 114, 116, 142, 166, 175, 176, 193, 195, 203, 204, 208, 211, 225, 226, 227, 229, 232], "inform": [5, 6, 32, 88, 195, 225, 226, 227, 229, 230, 232], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 59, 61, 69, 75, 77, 80, 82, 83, 84, 85, 91, 113, 114, 117, 118, 131, 136, 139, 140, 141, 150, 151, 152, 166, 172, 193, 195, 203, 204, 208, 211, 225, 226, 227, 232], "qubit": [5, 6, 11, 12, 13, 14, 15, 20, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 64, 66, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 105, 106, 110, 114, 115, 116, 120, 122, 124, 193, 195, 203, 204, 225, 226, 227, 230, 231, 232], "reson": [5, 81, 82, 83, 84, 85, 86, 87, 116, 125, 131, 203, 204, 215, 225, 226, 231, 232], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 59, 61, 76, 83, 113, 114, 120, 195, 203, 204, 225, 226, 227, 229, 230, 232], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 75, 76, 77, 94, 114, 116, 120, 142, 195, 225, 227, 232], "valid": [5, 6, 9, 18, 20, 81, 88, 162, 164, 165, 168, 176, 197, 198, 211, 217, 225, 232], "op_tabl": [5, 6, 9, 11, 18, 37, 38, 39, 113, 119, 123, 125, 227], "against": [5, 6, 169, 198, 229, 232], "tabl": [5, 6, 7, 9, 11, 12, 13, 109, 130, 196, 225], "definit": [5, 6, 7, 8, 12, 19, 35, 76, 83, 109, 126, 138, 148, 182, 195, 196, 225, 226, 227, 229], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 120, 123, 125, 194, 196, 197, 225, 228, 232], "contain": [5, 6, 9, 11, 19, 20, 37, 57, 75, 76, 77, 80, 88, 114, 130, 143, 146, 147, 149, 155, 162, 164, 165, 168, 176, 195, 208, 211, 221, 225, 226, 227, 229, 232], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 57, 59, 108, 109, 120, 131, 142, 147, 166, 176, 203, 225, 226, 227, 230, 232], "rais": [5, 6, 7, 9, 57, 67, 88, 108, 109, 131, 162, 164, 165, 168, 183, 187, 190, 195, 197, 198, 213, 218, 219, 220, 225, 226], "valueerror": [5, 6, 7, 9, 57, 88, 108, 109, 131, 162, 164, 165, 168, 187, 190, 195, 197, 198, 213], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 122, 124, 131, 139, 140, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 168, 169, 176, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205, 206, 211, 215, 221, 224, 225, 226, 227, 228, 229, 230, 232], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 117, 118, 119, 120, 123, 125, 139, 150, 183, 185, 191, 192, 193, 195, 197, 198, 225, 226, 232], "chip_topologi": [6, 20, 69, 114, 135, 136, 227, 232], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 51, 59, 61, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 114, 116, 120, 129, 130, 131, 132, 133, 134, 160, 163, 164, 165, 171, 175, 176, 177, 199, 203, 204, 205, 206, 208, 209, 211, 221, 222, 224, 225, 226, 227, 230, 232], "component_channel": 6, "out": [6, 11, 93, 95, 225, 226, 227, 229, 230], "individu": [6, 60, 195, 226, 229], "encapsul": [6, 20, 33, 88, 232], "known": [6, 7, 67, 108, 109, 176, 193, 195, 196, 198, 226, 227], "op": [6, 7, 12, 13, 16, 18, 109, 195, 196, 197, 198, 227], "them": [6, 11, 12, 18, 37, 76, 80, 103, 113, 114, 119, 120, 123, 125, 195, 211, 225, 228], "topologi": [6, 136, 232], "properti": [6, 11, 20, 81, 128, 130, 131, 135, 136, 176, 177, 195, 202, 204, 205, 206, 225, 232], "quantumopt": [6, 11, 12, 13, 198, 225], "opcalibrationdatatre": [6, 20, 198], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 117, 118, 120, 130, 139, 150, 159, 183, 185, 191, 192, 193, 195, 197, 198, 217, 221, 224, 225, 226], "tree": [6, 8, 20, 136, 197, 198], "chiptopologi": [6, 20, 48, 49, 69, 75, 76, 77, 106, 113, 114, 120, 135, 136, 227], "chip": [6, 11, 136, 225], "deriv": [6, 105, 139, 142, 148, 149, 150, 151, 152, 153, 154, 155, 157, 189, 193, 225, 227, 229], "chad": [6, 195], "channelproperti": [6, 20, 128, 133, 135, 137, 176, 204, 205, 206, 222, 224], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 51, 63, 64, 65, 66, 69, 75, 76, 77, 106, 113, 114, 120, 130, 136, 139, 147, 149, 150, 162, 176, 183, 185, 191, 192, 193, 195, 196, 204, 211, 213, 225, 227], "configur": [6, 7, 129, 132, 134, 221, 224, 229], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 51, 75, 77, 80, 86, 87, 90, 103, 105, 113, 116, 120, 125, 131, 157, 163, 171, 215, 225, 226, 227, 230], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 82, 83, 84, 85, 163, 195, 225, 227], "readout": [6, 20, 30, 37, 73, 74, 75, 76, 77, 78, 79, 80, 113, 159, 167, 176, 208, 225, 230], "respons": [6, 131, 134, 227, 229, 230], "_cach": 6, "gateimplement": [6, 7, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 59, 61, 67, 68, 69, 71, 72, 81, 83, 89, 106, 108, 110, 113, 114, 115, 116, 120, 122, 124, 195, 197, 211, 225, 228, 230, 232], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 75, 77, 83, 113, 114, 116, 147, 176, 211, 225, 227], "The": [6, 11, 12, 17, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 61, 69, 75, 76, 77, 80, 81, 83, 86, 89, 90, 94, 103, 105, 108, 110, 111, 113, 114, 115, 116, 120, 122, 124, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 164, 169, 171, 176, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 199, 203, 204, 205, 206, 211, 221, 223, 224, 225, 226, 227, 229, 230, 232], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 75, 76, 77, 80, 81, 83, 114, 116, 120, 130, 139, 150, 165, 166, 169, 176, 183, 185, 189, 191, 192, 193, 195, 203, 204, 205, 206, 211, 221, 224, 225, 226, 227, 229, 230, 232], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 61, 75, 77, 80, 82, 83, 84, 85, 86, 90, 91, 105, 117, 118, 137, 140, 141, 144, 145, 147, 151, 152, 153, 154, 155, 164, 169, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 211, 221, 224, 225, 226, 227, 229, 230, 232], "structur": [6, 225], "composite_cach": 6, "compositeg": [6, 16, 17, 20, 36, 37, 38, 39, 110, 113, 115, 119, 122, 123, 124, 125, 225, 227], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 61, 68, 75, 76, 77, 80, 83, 90, 94, 105, 106, 113, 114, 116, 120, 123, 125, 203, 208, 209, 210, 225, 227, 228, 230], "flush": [6, 17, 225], "whenev": [6, 17, 75, 77, 80, 225], "inject": [6, 225], "_channel_to_compon": 6, "self": [6, 11, 19, 20, 48, 49, 75, 76, 77, 80, 95, 96, 104, 114, 176, 195, 202, 211, 226, 227], "invert": 6, "algorithm": [6, 199, 203, 205, 209, 211, 225, 227, 232], "perform": [6, 49, 51, 161, 169, 176, 229], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 51, 61, 64, 66, 69, 75, 76, 77, 80, 81, 83, 86, 90, 93, 94, 95, 96, 103, 104, 105, 106, 111, 112, 113, 114, 116, 120, 130, 131, 139, 142, 147, 149, 150, 159, 164, 166, 167, 169, 172, 176, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 199, 202, 203, 205, 206, 209, 211, 225, 226, 227, 229, 230, 232], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 61, 64, 66, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 93, 94, 105, 111, 112, 113, 114, 116, 119, 120, 123, 124, 125, 130, 131, 139, 142, 143, 147, 149, 150, 157, 160, 169, 171, 172, 175, 176, 181, 183, 185, 188, 191, 192, 193, 195, 203, 204, 209, 211, 215, 221, 224, 225, 226, 227, 228, 229, 230, 231], "determin": [6, 32, 203, 211, 226, 229, 232], "block": [6, 35, 37, 49, 75, 76, 77, 80, 105, 113, 114, 131, 158, 172, 175, 201, 203, 204, 208, 211, 225, 226, 230, 232], "associ": [6, 11, 75, 77, 80, 114, 130, 131, 167, 169, 227, 229, 230], "onli": [6, 7, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 66, 75, 76, 77, 80, 81, 82, 83, 84, 85, 91, 105, 113, 117, 118, 131, 176, 186, 188, 193, 195, 202, 211, 225, 226, 229, 230, 231, 232], "ar": [6, 7, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 75, 77, 80, 82, 83, 84, 85, 89, 91, 94, 95, 96, 104, 113, 117, 118, 119, 120, 123, 124, 125, 130, 131, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 157, 164, 166, 169, 176, 177, 183, 185, 189, 191, 192, 193, 195, 198, 202, 203, 204, 205, 206, 209, 210, 211, 221, 224, 225, 226, 227, 228, 229, 230, 232], "includ": [6, 9, 17, 19, 20, 75, 76, 77, 83, 93, 94, 103, 130, 142, 195, 211, 225, 227, 229], "non": [6, 11, 18, 57, 69, 74, 75, 77, 80, 110, 114, 139, 142, 150, 183, 185, 191, 192, 193, 213, 227, 229, 232], "certain": [6, 19, 20, 48, 49, 95, 96, 104, 131, 142, 227, 232], "virtual": [6, 37, 49, 51, 83, 86, 87, 114, 120, 125, 131, 225, 230, 232], "do": [6, 9, 11, 32, 57, 69, 120, 122, 131, 176, 182, 185, 203, 215, 225, 226, 227, 229, 232], "just": [6, 11, 17, 31, 75, 77, 80, 94, 113, 195, 211, 225, 226, 227], "themselv": [6, 20, 76, 226, 227], "_channel_typ": 6, "probe": [6, 27, 35, 37, 73, 74, 75, 76, 77, 78, 80, 114, 133, 159, 167, 204, 208, 225, 227], "_require_scheduling_in_second": 6, "requir": [6, 18, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 78, 79, 82, 83, 84, 85, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 112, 114, 117, 118, 120, 131, 139, 150, 183, 185, 188, 191, 192, 193, 195, 197, 198, 208, 215, 221, 224, 225, 226, 227, 229], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 57, 60, 61, 75, 76, 77, 80, 81, 114, 116, 120, 131, 139, 143, 147, 150, 176, 183, 185, 191, 192, 193, 202, 204, 205, 206, 225, 227, 230, 232], "instead": [6, 20, 86, 172, 203, 225, 226, 227, 230, 232], "sampl": [6, 20, 32, 86, 131, 133, 134, 137, 139, 140, 141, 142, 150, 151, 152, 159, 160, 164, 165, 166, 170, 172, 176, 177, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 208, 221, 224, 225, 226, 227, 228], "can": [6, 7, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 51, 54, 55, 61, 64, 66, 67, 75, 76, 77, 80, 83, 90, 94, 95, 96, 104, 105, 113, 114, 116, 119, 120, 123, 125, 130, 131, 139, 146, 150, 160, 162, 163, 165, 166, 169, 171, 175, 176, 181, 183, 185, 191, 192, 193, 195, 199, 201, 205, 206, 211, 215, 225, 226, 227, 230, 232], "happen": [6, 81, 86, 120, 172, 188, 199, 211, 226, 227], "reason": [6, 17, 94, 193, 211, 219, 226, 227, 229], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 63, 64, 65, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 164, 177, 183, 184, 187, 189, 190, 193, 195, 203, 209, 210, 211, 227, 228, 229, 230, 231, 232], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 75, 76, 77, 81, 83, 87, 94, 106, 113, 120, 169, 176, 195, 204, 210, 211, 225, 227, 229, 230, 232], "rate": [6, 32, 86, 131, 134, 137, 164, 165, 176, 203, 204, 221, 224, 227, 228], "uhfqa": [6, 131], "2": [6, 11, 14, 37, 48, 57, 64, 65, 69, 73, 74, 75, 79, 80, 81, 89, 94, 99, 100, 101, 102, 103, 115, 116, 122, 123, 124, 125, 126, 131, 140, 141, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 183, 184, 185, 189, 191, 192, 193, 203, 211, 227, 229, 230, 231, 232], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 75, 77, 80, 83, 90, 105, 113, 114, 137, 143, 151, 152, 157, 166, 176, 182, 195, 198, 203, 204, 211, 215, 225, 226, 227, 229, 230, 232], "granular": [6, 56, 57, 61, 131, 137, 166, 176, 204, 217, 221, 224, 225, 226, 230], "some": [6, 17, 18, 59, 124, 139, 150, 182, 183, 185, 191, 192, 193, 205, 206, 211, 225, 226, 227, 232], "mix": [6, 80], "station": [6, 37, 88, 131, 136, 195, 225, 226], "ro": 6, "devic": [6, 57, 76, 230], "vendor": 6, "than": [6, 11, 80, 114, 176, 187, 190, 195, 202, 205, 206, 221, 224, 225], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 51, 54, 55, 83, 90, 105, 176, 218, 221, 224, 225, 230], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 62, 69, 107, 121, 126, 139, 143, 162, 163, 176, 195, 196, 226, 227, 229, 230], "inject_calibr": [6, 225], "partial_calibr": 6, "new": [6, 11, 14, 17, 108, 109, 176, 195, 203, 204, 205, 206, 208, 211, 225, 226, 227], "chang": [6, 7, 17, 18, 69, 120, 165, 171, 195, 202, 215, 227, 229, 230], "after": [6, 69, 80, 94, 96, 98, 100, 102, 103, 120, 133, 164, 172, 201, 202, 203, 215, 225, 226, 230, 232], "initialis": [6, 19, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114], "invalid": [6, 7, 219], "affect": [6, 11, 35, 75, 120, 164, 176, 177, 195, 211, 225, 230], "loci": [6, 11, 24, 75, 114, 195, 226, 227, 232], "factoriz": [6, 20, 75, 113, 114, 195, 225], "its": [6, 17, 18, 20, 33, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 61, 75, 76, 82, 83, 84, 85, 91, 117, 118, 136, 142, 165, 166, 176, 177, 186, 188, 195, 204, 205, 206, 209, 211, 225, 226, 227, 229, 232], "wa": [6, 37, 83, 87, 193, 225, 229, 230, 232], "must": [6, 7, 9, 11, 12, 18, 20, 37, 49, 69, 113, 119, 123, 125, 131, 137, 147, 157, 176, 177, 193, 195, 211, 225, 227, 229], "doe": [6, 11, 37, 49, 67, 75, 76, 77, 80, 88, 108, 114, 164, 166, 172, 195, 225, 226, 227, 229, 230, 232], "all": [6, 11, 12, 15, 18, 19, 20, 27, 28, 29, 30, 31, 32, 35, 37, 49, 51, 57, 61, 66, 75, 76, 77, 80, 81, 87, 93, 94, 103, 105, 113, 114, 119, 120, 123, 125, 131, 136, 137, 139, 150, 162, 164, 165, 168, 171, 176, 177, 183, 185, 191, 192, 193, 199, 203, 209, 221, 224, 225, 226, 227, 228, 229, 230, 232], "found": [6, 11, 18, 38, 39, 67, 176, 195], "actual": [6, 7, 20, 37, 61, 75, 77, 80, 140, 141, 151, 152, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 221, 224, 225, 227, 230, 232], "previou": [6, 225, 230], "validate_calibr": 6, "check": [6, 13, 131, 221, 224, 225], "match": [6, 7, 69, 157, 176, 177, 221, 223, 224, 225, 232], "someth": [6, 19, 75, 76, 131, 162, 164, 165, 168, 197, 198, 215], "wrong": [6, 197, 198, 225], "get_drive_channel": [6, 232], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 56, 61, 67, 68, 69, 75, 76, 90, 91, 109, 116, 117, 118, 131, 137, 139, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 165, 176, 177, 181, 195, 204, 211, 214, 221, 224, 226, 227, 232], "exist": [6, 18, 67, 108, 109, 176, 225, 226, 227, 232], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 61, 75, 77, 80, 92, 95, 96, 97, 98, 99, 100, 101, 102, 126, 139, 146, 150, 182, 191, 211, 225, 226, 227, 229, 230], "get_probe_channel": 6, "line": [6, 27, 37, 75, 76, 77, 80, 133, 225, 227], "belong": [6, 75, 77, 80, 225], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 75, 77, 80, 111, 112, 113, 169, 225, 228, 232], "signal": [6, 16, 37, 75, 76, 77, 80, 161, 169, 170, 186, 187, 188, 190, 191, 225, 226, 228, 230, 231], "between": [6, 16, 20, 59, 61, 75, 81, 83, 86, 88, 114, 162, 176, 189, 193, 199, 226, 230], "sourc": [6, 83, 202, 225, 229, 230], "destin": [6, 230], "either": [6, 7, 35, 120, 171, 211, 225, 226, 229], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 67, 69, 95, 96, 104, 176, 177, 202, 225, 226, 227, 229], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 225, 230], "get": [6, 13, 17, 20, 48, 49, 71, 75, 76, 77, 106, 113, 120, 130, 135, 136, 195, 202, 225, 227, 230, 232], "node": [6, 18, 20, 37, 113, 119, 123, 125], "receiv": [6, 169, 229, 230], "bit": [6, 37, 225, 230], "which": [6, 11, 15, 20, 35, 48, 57, 75, 83, 90, 108, 109, 116, 120, 142, 143, 144, 145, 146, 147, 153, 154, 155, 176, 177, 184, 185, 191, 192, 193, 195, 203, 211, 215, 225, 226, 227, 228, 229, 230, 232], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 117, 118, 120, 124, 130, 131, 137, 139, 142, 143, 146, 147, 150, 157, 176, 183, 185, 191, 192, 193, 208, 213, 225, 226, 227, 228, 229, 232], "measur": [6, 9, 20, 37, 73, 74, 75, 76, 77, 78, 79, 80, 112, 113, 120, 131, 159, 195, 204, 225, 226, 227, 228, 232], "result": [6, 11, 17, 20, 37, 75, 76, 77, 80, 87, 92, 113, 120, 147, 161, 167, 169, 176, 225, 226, 229, 232], "support": [6, 33, 37, 69, 75, 77, 80, 114, 189, 193, 213, 221, 224, 225, 226, 227, 229, 230], "fast": [6, 48, 75, 77, 80, 99, 100, 111, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 169, 225, 228, 231, 232], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 108, 227], "impl_nam": [6, 11, 18, 20, 108, 197, 225, 227], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 82, 83, 84, 85, 91, 117, 118, 131, 195], "request": [6, 7, 11, 18, 20, 61, 106, 132, 134, 225, 226, 232], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 18, 76, 142, 171, 225], "neighbor": [6, 203, 204, 211, 232], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 81, 82, 83, 84, 85, 114, 193, 195, 203, 204, 211, 225, 226, 227, 231, 232], "ad": [6, 11, 17, 18, 37, 75, 77, 80, 87, 108, 109, 113, 119, 123, 125, 130, 176, 199, 203, 204, 225, 226, 227, 232], "separ": [6, 18, 32, 37, 113, 119, 123, 125, 225, 226, 229, 232], "resolut": [6, 211, 232], "phase": [6, 11, 37, 40, 42, 45, 48, 73, 74, 75, 76, 77, 78, 79, 81, 83, 87, 89, 90, 92, 94, 105, 106, 107, 116, 117, 120, 122, 163, 164, 171, 183, 184, 185, 191, 192, 195, 215, 225, 226, 227, 232], "Will": [6, 61, 209], "iter": [6, 9, 11, 12, 20, 69, 88, 114, 137, 176, 177, 195, 208, 211, 232], "wait": [6, 35, 37, 61, 81, 86, 113, 114, 131, 158, 160, 175, 176, 201, 203, 225, 226, 230, 232], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 116, 117, 118, 120, 131, 137, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 202, 203, 204, 205, 206, 208, 211, 221, 224, 225, 226, 227, 230, 232], "round": [6, 56, 57, 61, 131, 137, 225, 230, 232], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 55, 67, 73, 74, 75, 77, 79, 80, 82, 84, 85, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 117, 131, 133, 137, 142, 176, 195, 225, 227], "everi": [6, 20, 164, 221, 224, 225, 227, 232], "guarante": [6, 61, 226], "idl": [6, 114, 172, 176, 225], "cannot": [6, 7, 17, 160, 176, 211, 225, 227, 229, 230], "replac": [6, 11, 20, 108, 109, 160, 172, 225, 229], "dynam": [6, 172, 225], "decoupl": [6, 172, 225], "sequenc": [6, 9, 11, 12, 16, 21, 51, 83, 119, 160, 172, 173, 177, 181, 195, 202, 211, 215, 225, 226, 228, 230, 232], "thei": [6, 11, 18, 19, 20, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 120, 124, 130, 131, 176, 177, 195, 211, 221, 224, 225, 226, 227, 230, 232], "treat": [6, 203, 211, 225, 232], "remain": [6, 199, 202, 215, 229], "align": [6, 226, 230, 232], "time": [6, 11, 20, 37, 51, 53, 54, 55, 57, 59, 61, 75, 76, 81, 83, 86, 91, 105, 114, 118, 120, 131, 133, 137, 143, 144, 145, 147, 153, 154, 155, 160, 165, 169, 175, 176, 177, 186, 187, 188, 190, 193, 199, 202, 203, 205, 206, 211, 225, 226, 227, 228, 232], "dure": [6, 61, 80, 83, 131, 142, 150, 160, 175, 186, 188, 193, 211, 226, 232], "particular": [6, 11, 20, 23, 24, 25, 197, 225, 229, 230, 232], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 116, 117, 118, 120, 169, 172, 195, 211, 226, 227, 229, 230], "thu": [6, 32, 81, 90, 120, 142, 146, 226, 230], "less": [6, 11, 80, 199, 225], "space": [6, 13, 14, 15, 193, 230], "side": [6, 34, 35, 80, 131, 205, 206, 226], "todo": [6, 37, 69, 75, 77, 80, 131, 178], "For": [6, 11, 14, 17, 23, 24, 75, 131, 146, 176, 183, 195, 225, 226, 227, 229, 230, 232], "now": [6, 69, 120, 225], "nearest": [6, 56, 61], "each": [6, 11, 12, 20, 33, 37, 75, 77, 80, 83, 87, 114, 130, 143, 147, 166, 176, 195, 203, 204, 208, 211, 224, 226, 227, 229, 230, 232], "benefit": 6, "exa": [6, 20, 188, 213, 225, 227, 228, 232], "sweep": 6, "over": [6, 7, 12, 75, 77, 80, 143, 147, 176, 225], "In": [6, 7, 11, 37, 59, 61, 75, 76, 77, 80, 81, 86, 105, 114, 160, 165, 169, 176, 195, 203, 225, 226, 227, 229, 230, 232], "futur": 6, "gener": [6, 11, 20, 75, 76, 77, 80, 105, 120, 147, 181, 187, 211, 225, 227, 229], "should": [6, 18, 20, 37, 49, 51, 75, 76, 77, 80, 90, 111, 112, 130, 131, 142, 143, 147, 159, 193, 195, 199, 203, 204, 225, 227, 229, 230], "experi": [6, 11, 66, 195, 225], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 120, 121, 125, 126, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 163, 164, 168, 169, 171, 176, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 204, 205, 206, 214, 215, 217, 225, 227], "how": [6, 195, 211, 226, 227, 229, 230, 232], "long": [6, 57, 81, 90, 131, 186, 188, 225, 226, 227], "start": [6, 64, 66, 143, 147, 153, 154, 176, 199, 202, 203, 204, 209, 210, 225, 226, 227, 230], "simultan": [6, 75, 77, 80, 199, 211, 226, 232], "box": [6, 37, 90, 105, 106, 203, 209, 210, 211, 225, 232], "get_implement": [6, 18, 20, 75, 225, 227, 232], "use_priority_ord": 6, "strict_locu": [6, 18], "priority_calibr": [6, 18, 232], "provid": [6, 11, 18, 19, 20, 31, 32, 58, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 195, 221, 224, 225, 226, 227, 228, 229, 232], "an": [6, 7, 11, 13, 14, 16, 18, 19, 20, 29, 34, 48, 59, 67, 69, 75, 77, 81, 89, 90, 91, 93, 95, 105, 108, 109, 116, 117, 118, 120, 121, 124, 126, 130, 131, 132, 139, 162, 164, 166, 176, 177, 181, 187, 190, 193, 195, 203, 205, 208, 211, 215, 218, 219, 225, 226, 227, 228, 229, 230, 232], "mean": [6, 11, 75, 77, 80, 81, 169, 195, 211, 225, 227, 229, 230, 232], "chosen": [6, 125, 142, 226], "automat": [6, 11, 19, 76, 225, 227], "logic": [6, 19, 20, 31, 35, 48, 49, 83, 113, 114, 116, 142, 176, 225, 227, 232], "describ": [6, 11, 12, 20, 142, 143, 147, 159, 195, 211, 226, 229, 232], "below": [6, 20, 151, 152, 225, 226, 229, 230, 232], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 82, 83, 84, 85, 91, 117, 118, 143, 195, 225, 227], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 83, 151, 152, 155, 176, 193, 195, 211, 226, 227, 228, 230, 232], "avail": [6, 18, 20, 226, 227, 229, 230, 232], "effect": [6, 20, 37, 81, 105, 116, 195, 199, 211, 226, 227, 228, 230, 232], "get_default_implementation_for_locu": [6, 195, 225, 227], "otherwis": [6, 18, 20, 49, 51, 56, 75, 77, 80, 86, 113, 131, 176, 177, 189, 225, 227, 229], "first": [6, 11, 13, 34, 35, 37, 49, 75, 77, 80, 143, 146, 147, 176, 193, 195, 227, 230, 232], "prioriti": [6, 7, 195, 225], "follow": [6, 7, 61, 75, 76, 81, 113, 120, 136, 146, 171, 193, 199, 203, 211, 221, 224, 225, 226, 229, 230, 232], "defin": [6, 7, 11, 18, 19, 20, 22, 28, 29, 30, 32, 38, 39, 48, 49, 57, 75, 76, 81, 89, 95, 96, 104, 114, 115, 131, 140, 141, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 182, 183, 193, 195, 197, 198, 209, 211, 225, 226, 227, 228, 229, 232], "defaults_for_locu": [6, 7, 195, 225], "global": [6, 69, 195, 225], "load": [6, 8, 225], "common": [6, 18, 19, 37, 38, 39, 75, 76, 77, 93, 94, 103, 113, 119, 123, 124, 125, 137, 203, 225, 228, 229], "singl": [6, 20, 31, 33, 66, 73, 74, 75, 76, 78, 89, 93, 94, 96, 105, 115, 120, 122, 124, 176, 177, 195, 208, 211, 222, 225, 226, 227, 230, 231, 232], "note": [6, 7, 16, 49, 75, 143, 147, 157, 164, 176, 198, 202, 211, 227, 230], "prevent": [6, 226, 227], "could": [6, 17, 61, 195, 227, 230], "_find_implementation_and_locu": 6, "find": [6, 193, 232], "instanc": [6, 11, 13, 18, 20, 33, 75, 77, 80, 86, 90, 91, 105, 116, 117, 118, 164, 167, 195, 215, 227, 232], "compat": [6, 75, 77, 80, 221, 224, 225], "both": [6, 49, 53, 83, 90, 205, 225, 227, 230, 232], "caller": 6, "highest": [6, 195], "we": [6, 17, 61, 69, 83, 120, 131, 142, 143, 146, 147, 150, 193, 195, 215, 227, 229, 230, 232], "equival": [6, 80, 120, 199, 211, 215, 226, 232], "one": [6, 9, 11, 18, 20, 38, 39, 42, 45, 49, 62, 75, 76, 80, 90, 176, 195, 203, 204, 208, 211, 225, 226, 227, 229, 230, 232], "had": [6, 225], "_get_implement": 6, "built": [6, 11, 124, 225], "when": [6, 11, 17, 18, 20, 35, 37, 61, 75, 77, 80, 81, 114, 139, 150, 176, 178, 183, 185, 191, 192, 193, 203, 204, 211, 218, 219, 220, 225, 226, 227, 230, 232], "later": [6, 11], "needs_calibr": [6, 18, 20], "interact": [6, 49], "nontrivi": 6, "wai": [6, 11, 159, 211, 225, 226, 227, 232], "composit": [6, 17, 18, 37, 38, 39, 113, 119, 123, 125, 209, 210, 211, 225, 226, 227, 232], "yet": [6, 69, 203, 204, 225], "constant": [6, 51, 53, 54, 55, 73, 74, 75, 78, 79, 90, 91, 112, 118, 186, 187, 188, 189, 190, 225, 230], "cc_prx": [6, 113, 225, 227, 230], "prx_composit": 6, "prx": [6, 11, 19, 37, 38, 39, 73, 74, 75, 76, 77, 78, 79, 80, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 115, 119, 120, 123, 125, 195, 215, 225, 226, 227, 230, 231, 232], "drag_crf": [6, 11, 38, 225], "reset": [6, 113, 114, 164, 195, 225, 226, 227, 230], "condit": [6, 37, 38, 39, 113, 162, 169, 221, 224, 225, 227, 229, 230], "meaning": [6, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 82, 83, 84, 85, 91, 117, 118, 195], "rz": [6, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 82, 83, 84, 85, 94, 96, 98, 100, 102, 116, 117, 118, 119, 120, 125, 163, 215, 225], "overrid": [6, 18, 19, 20, 31, 35, 48, 49, 51, 75, 76, 77, 83, 93, 94, 95, 96, 103, 104, 106, 113, 114, 116, 120, 142, 225, 227, 232], "work": [6, 11, 51, 83, 114, 176, 202, 225, 226, 227, 229, 232], "sinc": [6, 32, 49, 83, 120, 193, 195, 225, 227], "get_implementation_class": [6, 67], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 75, 76, 77, 80, 83, 106, 108, 113, 114, 116, 119, 120, 123, 125, 139, 150, 164, 169, 183, 184, 185, 191, 192, 193, 195, 198, 225, 226, 227, 232], "validate_quantum_circuit": [6, 225], "require_measur": [6, 9], "constitut": [6, 9, 229], "least": [6, 9, 20, 61, 131, 137, 143, 147, 203, 204, 221, 224, 226, 227, 229, 232], "circuit_to_timebox": [6, 225], "scheduling_algorithm": [6, 208, 211], "schedulingalgorithm": [6, 207, 208, 211], "hard_boundari": [6, 208, 209, 211], "locus_map": [6, 225], "convert": [6, 11, 20, 94, 125, 131, 139, 150, 160, 175, 183, 185, 191, 192, 193, 201, 211, 225, 226, 227, 228], "resolv": [6, 20, 188, 209, 211, 226, 228], "option": [6, 11, 12, 13, 18, 20, 32, 75, 176, 195, 225, 227, 230], "placehold": [6, 11, 225], "physic": [6, 11, 21, 131, 203, 225, 226, 227], "while": [6, 94, 209, 225, 226, 227, 229, 232], "unresolv": 6, "fail": [6, 218, 220], "timeboxes_to_front_padded_playlist": [6, 225], "neighborhood": [6, 209, 211, 225], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 63, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 114, 117, 118, 124, 125, 131, 133, 139, 140, 141, 146, 149, 150, 151, 152, 153, 154, 157, 162, 164, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 202, 208, 211, 215, 227, 228, 229, 232], "temporari": [6, 225], "helper": [6, 20], "playlist": [6, 81, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 148, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 216, 220, 221, 224, 225, 228, 230, 232], "front": [6, 176], "pad": [6, 35, 91, 118, 143, 146, 147, 176, 203, 209, 232], "equal": [6, 11, 37, 81, 120, 123, 186, 188, 202, 205, 206, 225, 226, 232], "delai": [6, 37, 73, 74, 75, 76, 79, 113, 159, 166, 225, 226, 230], "befor": [6, 80, 86, 94, 96, 98, 100, 102, 131, 133, 215, 225, 232], "final": [6, 20, 103, 183, 226, 227, 232], "wish": 6, "lose": [6, 225], "coher": [6, 164], "done": [6, 94, 171, 178, 193, 199, 204, 225, 227], "onc": [6, 225, 226, 227], "handl": [6, 19, 32, 61, 76, 113, 130, 131, 137, 203, 206, 215, 225, 227], "better": [6, 20, 131, 211, 225], "remov": [6, 77, 120, 131, 176, 177, 178, 225, 232], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 86, 90, 93, 94, 99, 100, 103, 116, 130, 131, 133, 137, 139, 140, 141, 142, 143, 147, 150, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 203, 208, 211, 217, 225], "far": 6, "By": [6, 18, 20, 37, 48, 49, 75, 76, 77, 83, 106, 113, 119, 120, 123, 125, 139, 150, 183, 185, 191, 192, 193, 215], "occupi": [6, 176, 203, 204, 211, 226], "label": [6, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 114, 117, 118, 159, 161, 169, 170, 208, 211, 225, 226, 227], "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 62, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 113, 117, 136, 147, 176, 184, 195, 203, 204, 208, 211, 225, 226, 227, 228, 230, 232], "format": [6, 32, 159, 225, 229], "impl": [6, 197, 227], "unnecessari": [6, 37, 203, 225], "pack": [6, 209], "assum": [6, 35, 49, 87, 105, 113, 120, 125, 137, 153, 154, 157, 176, 186, 188, 193, 226, 227, 229, 232], "refer": [6, 7, 94, 124, 130, 171, 225, 227, 228, 232], "ensur": [6, 151, 152, 226, 230, 232], "intend": [6, 83, 114, 195, 226, 227], "properli": 6, "higher": [6, 148, 150, 151, 152, 225, 226, 230], "help": [6, 11, 226, 227, 230], "defend": [6, 229], "crosstalk": [6, 68, 69, 163, 199, 225, 227], "expens": 6, "longer": [6, 114, 225], "more": [6, 19, 61, 139, 160, 187, 190, 195, 211, 225, 226, 229, 230], "decoher": [6, 59], "timebox_to_schedul": 6, "finish": [6, 114, 225], "readi": [6, 228], "execut": [6, 34, 35, 130, 165, 173, 176, 195, 199, 225, 226, 227, 228, 229, 230, 232], "sample_r": [6, 131, 132, 133, 134], "_finish_schedul": 6, "fuse": [6, 94, 225], "distanc": [6, 225], "correct": [6, 13, 68, 69, 83, 87, 122, 163, 225, 227, 232], "_fuse_long_distance_virtual_rz": 6, "virtualrz": [6, 83, 86, 87, 120, 158, 225, 226], "next": [6, 202, 226, 227, 230], "fluxpuls": [6, 158], "resolve_timebox": [6, 211, 225, 232], "compute_neighborhood_hard_boundari": 6, "children": [6, 208, 211, 226, 232], "concaten": [6, 211, 226, 232], "strategi": [6, 203, 204, 210, 211], "solid": 6, "rectangl": [6, 232], "longest": [6, 61, 203, 209], "within": [6, 13, 56, 169, 176, 210, 226, 229], "tetri": [6, 160, 209], "tightli": [6, 209], "possibl": [6, 20, 61, 120, 162, 176, 193, 203, 204, 209, 210, 211, 225, 226, 229, 230, 232], "still": [6, 11, 69, 177, 225], "overlap": [6, 160, 166, 175, 203, 226, 232], "regardless": [6, 230], "boundari": [6, 64, 66, 203, 209, 210], "modifi": [6, 7, 11, 176, 177, 202, 203, 204, 205, 206, 215, 225, 227, 229, 232], "so": [6, 11, 19, 37, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 120, 176, 177, 199, 211, 225, 226, 227, 228, 232], "becom": [6, 11, 37, 183, 232], "atom": [6, 20, 208, 209, 211, 226, 227, 232], "isn": 6, "t": [6, 7, 69, 90, 103, 124, 140, 141, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 182, 183, 185, 189, 192, 193, 225, 229], "alreadi": [6, 11, 67, 176, 211, 225, 227], "precomput": [6, 176, 211, 227], "typic": [6, 49, 75, 131, 143, 146, 195, 199, 226, 227, 230, 232], "want": [6, 11, 19, 48, 49, 75, 77, 80, 95, 96, 104, 143, 147, 172, 227], "top": [6, 18, 20, 57, 227], "layer": 6, "would": [6, 11, 17, 49, 86, 225, 227, 230, 232], "unus": 6, "lower": [6, 56, 228], "where": [6, 48, 49, 61, 69, 75, 76, 77, 80, 81, 89, 103, 115, 116, 124, 131, 140, 141, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 166, 176, 183, 185, 187, 189, 190, 192, 193, 195, 203, 206, 225, 226, 227, 229], "improv": [6, 37, 75, 77, 80, 225, 229], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 51, 69, 75, 76, 77, 80, 83, 113, 114, 116, 139, 150, 176, 177, 183, 185, 191, 192, 193, 195, 225, 226, 227, 228, 232], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 20, 66, 169, 227, 232], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 67, 114, 130, 176, 205, 206, 225, 226, 227, 229, 232], "addit": [6, 11, 18, 20, 31, 32, 35, 48, 49, 51, 75, 81, 83, 113, 114, 116, 122, 164, 176, 191, 195, 211, 227, 229, 232], "ideal": [6, 16, 59, 195, 199], "model": [6, 138, 148, 182, 199, 226], "correctli": [6, 17, 225, 227], "frame": [6, 83, 163, 193, 215, 225, 227], "subspac": [6, 81, 195, 199, 226, 227], "connect": [6, 11, 114, 195, 211, 226, 227, 232], "those": [6, 32, 75, 77, 80, 113, 146, 195, 211, 225, 227, 229, 232], "henc": [6, 215], "evolut": 6, "Of": 6, "cours": [6, 59, 227], "realiti": [6, 59], "possibli": [6, 49, 230], "applic": [6, 227, 229], "essenti": [6, 146, 147, 227], "precis": [6, 56, 57, 226], "interest": 6, "howev": [6, 18, 61, 113, 139, 150, 172, 183, 185, 191, 192, 193, 226, 227, 229], "well": [6, 88, 114, 165, 176, 195, 221, 224, 225, 227, 228, 230, 232], "local": [6, 83, 120, 163, 171, 215], "shut": 6, "down": [6, 56], "unwant": 6, "like": [6, 11, 19, 20, 75, 77, 80, 114, 139, 150, 159, 183, 185, 191, 192, 193, 225, 226, 227, 232], "end": [6, 11, 40, 80, 83, 86, 87, 120, 124, 143, 147, 153, 154, 160, 175, 176, 177, 189, 225, 226, 229, 230], "carri": [6, 226, 229], "meant": [6, 11], "zero": [6, 11, 35, 49, 61, 69, 70, 83, 94, 105, 110, 142, 143, 146, 147, 160, 166, 172, 191, 193, 195, 202, 205, 206, 225, 226], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 83, 131, 139, 140, 141, 143, 144, 145, 146, 147, 149, 151, 153, 154, 156, 157, 161, 166, 176, 193, 195, 208, 211, 221, 224, 225, 226, 227, 230, 232], "involv": [6, 20, 35, 226, 228, 232], "compress": [6, 226], "duplic": 6, "transfer": [6, 57, 105, 229], "drop": 6, "point": [6, 120, 143, 144, 145, 147, 153, 154, 155, 202, 203, 204, 227], "finalis": 6, "unless": [6, 20, 139, 150, 183, 185, 191, 192, 193, 211, 225, 227, 229, 232], "process": [6, 87, 160, 226, 231], "call": [6, 11, 13, 17, 18, 20, 83, 114, 123, 225, 227, 232], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 20, 31, 37, 49, 90, 159, 181, 225, 226, 227, 228], "shortcut": [6, 11, 225, 232], "If": [6, 11, 13, 18, 19, 20, 38, 39, 56, 67, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 120, 130, 131, 139, 142, 150, 159, 172, 176, 177, 183, 185, 191, 192, 193, 195, 205, 211, 225, 226, 227, 229, 232], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 227], "canon": [7, 58, 109, 225, 227], "extend": [7, 13, 15, 61, 143, 175, 176, 177, 203, 204, 205, 206, 211], "ones": [7, 34, 35, 209, 211, 227], "case": [7, 11, 20, 31, 35, 48, 49, 61, 75, 76, 77, 105, 114, 116, 120, 176, 185, 189, 195, 203, 206, 215, 225, 226, 227], "caveat": 7, "redefin": [7, 11, 139, 150, 183, 185, 191, 192, 193], "you": [7, 11, 18, 75, 76, 83, 172, 195, 225, 228, 229, 232], "gate_definit": 7, "section": [7, 226, 227, 229, 230, 232], "yaml": [7, 8, 225], "file": [7, 8, 229], "expos": 7, "being": [7, 49, 105, 143, 195, 225, 227, 230], "undefin": [7, 81, 226], "don": [7, 182, 229], "config": [8, 130, 225], "circuitoperationlist": [10, 225], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 18, 40, 89, 105, 113, 114, 120, 122, 124, 166, 193, 211, 225, 226, 227], "mostli": [11, 226], "conveni": [11, 20, 75, 77, 80, 211, 225, 228], "enabl": [11, 61, 83, 90, 186, 188, 225], "easi": [11, 232], "creation": [11, 225, 227], "calcul": [11, 12, 15, 83, 189, 193, 225], "onto": 11, "import": [11, 62, 227, 229, 232], "present": [11, 12, 18, 20, 81, 176, 203], "think": 11, "about": [11, 88, 162, 164, 165, 168, 225, 226, 230, 232], "qiskit": [11, 225], "quantumregist": 11, "most": [11, 227, 228], "simpli": [11, 37, 120, 195, 226], "taken": [11, 225], "good": 11, "practic": [11, 227, 230, 232], "mutabl": [11, 176], "regist": [11, 12, 13, 18, 108, 109, 195, 225, 226, 228, 232], "usabl": [11, 20, 37, 225], "fundament": 11, "popul": [11, 80, 81], "qb1": [11, 75, 195, 227, 232], "qbn": 11, "qb2": [11, 75, 195, 227, 230, 232], "altern": [11, 226, 230], "To": [11, 37, 57, 61, 176, 227, 228, 229, 230, 232], "your": [11, 227, 229], "own": [11, 17, 20, 33, 195, 225, 226, 227, 229], "initi": [11, 32, 33, 142, 150, 183, 193, 225, 226, 227], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 195, 225, 226, 227], "__add__": [11, 75, 77, 80, 225], "__mul__": [11, 225], "__getitem__": [11, 225], "3": [11, 37, 51, 69, 73, 74, 75, 79, 91, 118, 149, 203, 229, 231, 232], "circuit1": [11, 232], "circuit2": [11, 232], "4": [11, 63, 99, 100, 101, 102, 122, 124, 149, 229, 231], "produc": [11, 205, 225, 226, 230, 232], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 82, 83, 84, 85, 89, 90, 94, 105, 106, 107, 113, 115, 120, 121, 123, 124, 126, 163, 195, 214, 215, 225, 227, 232], "abov": [11, 226, 227, 228, 229, 232], "shorten": 11, "exactli": [11, 20, 195, 208], "syntax": [11, 225, 226, 227, 229, 232], "usual": [11, 17, 61, 167, 193, 226, 227, 230, 232], "attach": [11, 229], "init": [11, 225, 227], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 61, 75, 82, 83, 84, 85, 91, 117, 118, 195, 227], "unitari": [11, 12, 13, 15, 40, 64, 66, 81, 107, 110, 121, 126, 195, 225, 226, 227], "propag": [11, 15, 64, 66, 113, 225, 230], "entir": [11, 13, 131, 225], "u": [11, 63, 125, 225], "get_unitari": 11, "dimens": [11, 143, 146], "alwai": [11, 20, 34, 35, 37, 83, 151, 152, 195, 199, 203, 205, 227], "qb3": [11, 75, 195, 230, 232], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 69, 124, 143, 195, 225, 227], "correspond": [11, 13, 18, 37, 59, 63, 64, 65, 66, 69, 113, 119, 123, 125, 139, 142, 143, 146, 162, 195, 203, 211, 226, 230], "three": [11, 57, 90, 225], "big": [11, 12, 13, 195], "endian": [11, 12, 13, 195], "convent": [11, 12, 83, 136], "With": [11, 19, 75, 76, 77, 80, 230], "action": [11, 12, 195, 226], "ident": [11, 15, 59, 65, 105, 225], "physical_circuit": 11, "map_loci": [11, 225], "physical_qubit": 11, "exampl": [11, 14, 17, 83, 131, 142, 195, 225, 226, 227, 229, 232], "alic": 11, "zzz": 11, "qb5": [11, 195], "qb10": 11, "occurr": 11, "mani": [11, 225, 227, 232], "run": [11, 146, 225, 230], "parallel": [11, 195, 225], "larg": [11, 143, 147, 226], "left": [11, 20, 31, 35, 48, 49, 75, 76, 77, 114, 116, 120, 205, 206, 226, 227, 230], "ignor": [11, 37, 142, 225], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 131, 140, 141, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 183, 193, 225], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 63, 65, 69, 73, 74, 75, 79, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 225, 227], "ndarrai": [11, 12, 13, 14, 15, 37, 69, 73, 74, 75, 79, 99, 100, 101, 102, 107, 121, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 225, 227], "locus_indic": 11, "append": [11, 35, 75, 176, 177, 225], "store": [11, 13, 17, 20, 48, 49, 75, 76, 77, 106, 113, 120, 146, 163, 195, 227], "select": [11, 15, 230, 232], "indic": [11, 15, 86, 142, 143, 146, 181, 226, 229], "qb4": [11, 230], "param": [11, 13, 20, 195, 225, 227], "barrier": [11, 12, 195, 227], "compos": [11, 199, 228], "safer": 11, "togeth": [11, 37, 48, 75, 77, 80, 86, 203, 211, 225, 226, 227, 232], "probabl": 11, "wire": 11, "k": [11, 14, 143, 151, 152, 153, 154, 155, 156, 157, 193, 225], "achiev": [11, 227], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 186, 188, 211], "make_circuit": [11, 225], "fresh": 11, "length": [11, 35, 69, 73, 74, 75, 76, 79, 156, 157, 170, 176, 193, 203, 209, 221, 223, 224, 225], "total": [11, 87, 177, 199, 232], "across": [11, 147, 151, 152], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 75, 77, 80, 225, 227, 229], "skip": [12, 176], "product": [12, 146, 226, 229], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 75, 76, 77, 114, 116, 120, 226, 227, 232], "fetch": 13, "Then": [13, 211, 227], "hilbert": [13, 15], "whole": [13, 69, 226, 229], "perm": 14, "permut": [14, 225], "state": [14, 40, 59, 80, 81, 83, 89, 94, 110, 113, 114, 120, 122, 124, 195, 215, 226, 227, 229, 230], "vector": [14, 143, 225], "index": [14, 69, 130, 177, 202, 225, 226, 228], "th": [14, 143, 193], "old": 14, "kron": [14, 195], "c": [14, 189, 211, 229], "n_qubit": 15, "larger": [15, 176, 226], "system": [15, 20, 225, 229, 230, 232], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 69, 73, 74, 78, 79, 82, 83, 84, 85, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 114, 117, 118, 120], "hash": 15, "purpos": [15, 20, 75, 77, 80, 225, 227, 229], "rang": [15, 142, 143, 147, 153, 154, 183, 211, 225], "abstract": [16, 106, 195, 226, 227, 228], "conceptu": [16, 226], "wherea": [16, 75, 160, 195, 226, 227], "concret": [16, 195, 226, 227, 228, 232], "One": [16, 20, 106, 226], "approxim": [16, 143, 147], "abc": [16, 20, 34, 36, 40, 59, 68, 72, 81, 89, 106, 110, 115, 122, 124], "customiqwaveform": [16, 72, 75, 76, 77, 89, 93, 94, 227], "singlepulseg": [16, 89, 105, 225], "compositecach": 16, "gate_implement": [17, 18, 19, 20, 31, 34, 36, 40, 59, 68, 72, 81, 89, 110, 115, 122, 124], "__call__": [17, 20, 31, 35, 48, 49, 75, 77, 80, 83, 113, 114, 116, 225, 227], "normal": [17, 20, 37, 69, 151, 152, 155, 193, 195, 214, 225, 227, 229], "_timebox_cach": [17, 20], "trust": 17, "itself": [17, 18, 83, 114, 225, 227, 230], "member": [17, 18, 37, 38, 39, 64, 66, 113, 119, 123, 125, 225, 227], "consist": [17, 48, 49, 51, 90, 94, 105, 116, 139, 150, 176, 183, 185, 191, 192, 193, 195, 225, 227, 229], "deduc": 17, "locat": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 227], "kei": [17, 18, 20, 37, 38, 39, 75, 76, 77, 80, 111, 112, 113, 119, 123, 125, 225, 226, 227], "identifi": [17, 20, 37, 131, 159, 176, 227, 229], "cast": 17, "extra": [17, 37, 83, 94, 187, 190, 227], "string": [17, 69, 73, 74, 75, 79, 169, 181], "id": [17, 20], "further": [17, 191, 193, 211], "did": [17, 225], "come": [17, 227, 232], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 225, 227], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 227], "term": [18, 139, 140, 141, 144, 145, 149, 150, 151, 153, 154, 155, 157, 183, 185, 191, 192, 193, 195, 226, 227, 228, 229], "pre": [18, 142, 149, 150, 151, 152, 193], "_call": [18, 20, 31, 35, 37, 48, 49, 61, 75, 76, 77, 80, 83, 90, 94, 105, 106, 113, 114, 116, 120, 123, 125, 225, 227], "code": [18, 225, 227, 229, 230], "subclass": [18, 20, 31, 33, 35, 48, 49, 75, 76, 77, 114, 116, 120, 139, 150, 183, 185, 191, 192, 193, 195, 225, 227], "declar": 18, "abl": [18, 137, 225], "verifi": [18, 225], "registered_g": [18, 37, 113, 119, 123, 125, 225, 227], "possib": 18, "customizable_g": [18, 37, 113, 119, 123, 125], "custom": [18, 19, 20, 75, 76, 77, 225, 226, 228], "tell": 18, "oilcalibrationdata": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 123, 125, 197, 227], "There": [18, 37, 94, 113, 119, 123, 125, 227, 230, 232], "These": [18, 20, 37, 113, 119, 123, 125, 203, 204, 211, 225, 226, 227, 232], "ocalibrationdata": [18, 37, 113, 119, 123, 125], "under": [18, 20, 37, 108, 113, 119, 123, 125, 199, 211, 229], "subset": [18, 20, 37, 64, 113, 119, 123, 125], "customiz": [18, 37, 113, 119, 123, 125], "default_implement": [18, 38, 39, 195], "design": [18, 38, 39, 225, 229], "fill": [18, 38, 39, 226], "classmethod": [18, 20, 31, 48, 49, 69, 75, 76, 77, 90, 93, 94, 95, 96, 103, 104, 106, 113, 114, 116, 120, 225], "optional_calibration_kei": [18, 20], "item": [18, 20, 176], "level": [18, 20, 87, 88, 195, 226, 227, 228, 230, 232], "construct": [18, 20, 33, 75, 90, 91, 105, 116, 117, 118, 139, 150, 183, 185, 191, 192, 193, 225, 226, 228, 232], "sought": 18, "deprec": [18, 225], "waveform": [19, 20, 32, 41, 43, 44, 47, 48, 49, 51, 54, 55, 57, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 116, 130, 138, 139, 140, 141, 142, 148, 150, 151, 152, 163, 164, 165, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 221, 223, 224, 225, 226, 228], "iqpuls": [19, 31, 48, 75, 76, 77, 90, 93, 94, 95, 96, 103, 104, 105, 116, 120, 158, 161, 166, 169, 171, 215, 223, 225, 226, 227], "info": [19, 20, 225, 227], "somethingels": [19, 75, 76], "q": [19, 48, 73, 74, 75, 76, 77, 78, 79, 80, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 116, 139, 141, 145, 152, 154, 164, 225, 227, 231, 232], "mygat": [19, 75, 76], "i_wav": [19, 75, 76], "q_wave": [19, 75, 76], "wave_i": [19, 73, 74, 78, 79, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 164, 227], "wave_q": [19, 73, 74, 78, 79, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 164, 227], "dependent_wav": [19, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "consid": [19, 61, 70, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 146, 202, 205, 206, 225, 227, 232], "share": [19, 32, 49, 51, 73, 74, 75, 76, 77, 78, 79, 80, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 229, 232], "drag": [19, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 225, 227], "root_paramet": [19, 49, 51, 75, 76, 77, 83, 93, 94, 103], "independ": [19, 75, 76, 77, 93, 94, 103, 176, 177, 195, 226, 230], "excluded_paramet": [19, 48, 49, 95, 96, 104], "exclud": [19, 48, 49, 95, 96, 104, 229], "__init__": [20, 225, 227], "via": [20, 69, 94, 113, 114, 125, 155, 189, 193, 225, 227], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 66, 82, 83, 84, 85, 89, 90, 94, 105, 106, 107, 115, 120, 121, 122, 124, 126, 215, 225, 227, 232], "input": [20, 37, 75, 77, 80, 103, 226, 227], "reimplement": [20, 31, 35, 48, 49, 75, 76, 77, 114, 116, 120, 227], "without": [20, 37, 77, 143, 146, 147, 170, 175, 211, 225, 226, 227, 229, 232], "even": [20, 76, 153, 203, 204, 225, 227, 229], "though": [20, 76, 225, 226, 227], "avoid": [20, 142, 143, 225], "unpredict": 20, "raw": [20, 161, 169, 170, 181, 230], "access": [20, 227, 232], "special_implement": [20, 225], "special": [20, 49, 86, 92, 105, 182, 195, 225, 227, 229, 232], "never": [20, 225, 227], "explicitli": [20, 75, 77, 80, 225, 227, 229, 232], "uniqu": [20, 130, 195, 226, 227], "sub_implement": 20, "sub": [20, 232], "len": [20, 75, 77, 80, 143, 146, 157], "At": [20, 83, 143, 147, 227], "qualified_nam": 20, "qualifi": 20, "f": [20, 37, 69, 75, 76, 77, 80, 143, 183, 185, 189, 192, 193, 195, 225, 227], "may_have_calibr": 20, "kwarg": [20, 31, 35, 48, 49, 75, 83, 90, 95, 96, 104, 113, 114, 116], "signatur": [20, 31, 35, 48, 49, 83, 113, 114, 116, 195, 225, 227], "suffici": [20, 31, 35, 48, 49, 83, 113, 114, 116, 131, 193], "insid": [20, 31, 35, 37, 48, 49, 83, 94, 113, 114, 116, 183, 202, 211, 225, 226], "construct_factoriz": 20, "to_timebox": 20, "wrap": [20, 232], "duration_in_second": [20, 31, 35, 48, 49, 75, 76, 77, 114, 116, 120, 176], "unimpl": [20, 31, 35, 48, 49, 75, 76, 77, 114, 116, 120], "make": [20, 31, 35, 48, 49, 75, 76, 77, 83, 114, 116, 120, 165, 172, 176, 177, 195, 199, 202, 225, 227, 229, 232], "sens": [20, 31, 35, 48, 49, 75, 76, 77, 114, 116, 120], "convert_calibration_data": 20, "channel_prop": 20, "_top_level": 20, "frequenc": [20, 48, 73, 74, 75, 76, 77, 78, 79, 83, 92, 103, 104, 116, 132, 133, 139, 142, 143, 146, 147, 149, 150, 151, 153, 154, 156, 157, 164, 183, 185, 191, 192, 193, 225, 227], "fraction": 20, "hz": [20, 42, 45, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 92, 99, 100, 101, 102, 103, 104, 117, 131, 132, 134, 139, 142, 143, 146, 147, 150, 157, 183, 185, 191, 192, 193, 227], "parameter": 20, "treatment": 20, "n_sampl": [20, 32, 90, 93, 94, 103, 116, 139, 140, 141, 142, 150, 151, 152, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 69, 73, 74, 78, 79, 82, 83, 84, 85, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 114, 117, 118], "cl": 20, "specifi": [20, 31, 37, 139, 165, 209, 227, 230, 232], "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 176, 229], "dot": 20, "root": [20, 64], "settingnod": [20, 135, 136], "get_locus_mapping_nam": [20, 48, 49, 75, 76, 77, 106, 113, 120, 227], "operation_nam": [20, 48, 49, 75, 76, 77, 106, 113, 120], "implementation_nam": [20, 48, 49, 75, 76, 77, 106, 113, 120], "behaviour": [20, 48, 49, 75, 76, 77, 106, 113, 120, 225, 227], "get_custom_locus_map": [20, 69, 114, 225, 227], "component_to_channel": [20, 69, 114, 136], "wrt": 20, "know": [20, 227], "often": [20, 225, 227], "set_locus_map": 20, "frozenset": [20, 69, 114, 227], "matter": [21, 83, 227], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 73, 74, 78, 79, 82, 84, 85, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117, 118, 196, 225], "probe_lin": [27, 75, 76], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 51, 54, 55, 69, 75, 77, 80, 83, 90, 116, 164, 166, 167, 168, 208, 225, 226, 227, 232], "_get_puls": [31, 93, 94, 95, 96, 103, 104, 225], "_get_pulse_channel": 31, "basic": [31, 177, 225, 227], "insert": [31, 86, 225], "overridden": [31, 195, 227], "wave": [32, 163, 164, 168, 185, 192], "label_prefix": 32, "prefix": [32, 75], "nativ": [33, 195, 232], "been": [33, 37, 114, 211, 225, 226, 229, 230], "sever": [33, 160, 195, 225, 227, 230, 232], "scheme": [33, 226], "likewis": 33, "sometim": [33, 226], "metaoper": [34, 35, 195, 227], "forc": [34, 59, 131, 137], "tempor": [34, 35], "qudit": [35, 195], "metainstruct": 35, "caus": [35, 37, 61, 69, 225, 229, 230], "turn": [35, 225], "impos": 35, "relat": [35, 87, 225, 230, 232], "classic": [36, 37, 225, 230], "ccprx_composit": [36, 38, 39, 225, 230], "ccprx_composite_dragcosinerisefal": [36, 225], "ccprx_composite_draggaussian": [36, 225], "discrimin": [37, 80], "obtain": [37, 105, 139, 143, 226, 229, 231], "segment": [37, 90, 114, 169, 171, 174, 176, 181, 202, 203, 204, 225, 226, 230], "activ": [37, 167, 226], "underneath": 37, "control_delai": [37, 230], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 61, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118, 139, 144, 145, 150, 153, 154, 155, 157, 164, 176, 183, 185, 191, 192, 193, 226, 227, 230], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118, 213, 225], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118, 213], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118], "instrument": [37, 120, 131, 134, 142, 158, 174, 230], "drive_control": [37, 135], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 75, 77, 80, 225], "conditionalinstruct": [37, 75, 77, 80, 158, 169, 230], "until": [37, 120, 226], "enough": [37, 230], "arriv": [37, 230], "place": [37, 176, 188, 191, 203, 204, 229], "sequenti": 37, "care": [37, 232], "yourself": [37, 228], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 92, 94, 96, 98, 100, 102, 107, 117, 121, 215], "multipl": [37, 56, 57, 75, 77, 80, 114, 131, 137, 139, 150, 155, 162, 166, 169, 183, 185, 191, 192, 193, 225, 226], "__": [37, 69, 75, 76, 77, 80, 225], "current": [37, 75, 77, 80, 83, 202], "hw": [37, 75, 77, 80, 225], "per": [37, 75, 77, 80, 195, 225], "listen": [37, 225], "user": [37, 69, 75, 77, 80, 142, 193, 211, 225, 226, 227, 230, 232], "drag_gaussian": [39, 225, 232], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 64, 72, 73, 74, 78, 82, 83, 84, 85, 94, 115, 120, 122, 124, 126, 215, 225, 227], "flip": [40, 225], "rel": [40, 83, 139, 150, 157, 164, 183, 185, 191, 192, 193, 225, 226, 227, 232], "11": [40, 228, 231], "text": [40, 81, 94, 189, 193, 229], "begin": [40, 83, 86, 124, 159, 166, 177, 189, 202, 205, 206, 225, 230, 232], "pmatrix": [40, 124], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 52, 81, 83, 227], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 225], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 225], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "fluxpulsegate_smoothconst": [40, 53, 54, 55], "fluxpulse_smoothconstant_qubit": 40, "fluxpulse_smoothconstant_coupl": 40, "fluxpulse_smoothconstant_smoothconst": [40, 225], "cz": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 63, 64, 81, 83, 120, 195, 225, 226, 227, 231, 232], "cosinerisefal": [41, 42, 46, 50, 52, 82, 84, 85, 95, 96, 104, 191], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 83, 84, 85, 227], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 116, 117, 139, 142, 150, 183, 185, 187, 188, 190, 191, 192, 193, 225, 227], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 117, 118], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 52, 82, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117, 139, 140, 141, 150, 151, 152, 189, 191, 193, 227], "crf": [41, 42, 45, 46, 50, 52, 82, 84, 85, 95, 96, 104], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 52, 73, 74, 75, 79, 82, 84, 85, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 82, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117, 139, 140, 141, 142, 150, 151, 152, 187, 189, 190, 191, 193], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 82, 84, 85, 91, 95, 96, 104, 117, 118, 187, 188, 189, 190, 191], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 82, 83, 84, 85, 227], "cosin": [42, 45, 51, 91, 92, 104, 117, 118, 139, 140, 141, 144, 145, 146, 147, 149, 153, 154, 155, 156, 182, 183, 186, 187, 188, 190, 191, 192, 193, 225], "rise": [42, 45, 51, 53, 54, 55, 57, 90, 91, 104, 117, 118, 186, 187, 188, 189, 190, 191, 225], "fall": [42, 45, 51, 53, 54, 55, 57, 90, 91, 104, 117, 118, 186, 187, 189, 191, 195, 225], "ac": [42, 45, 48, 90, 91, 116, 117, 118, 225], "stark": [42, 45, 48, 90, 91, 116, 117, 118, 225], "first_qubit": [42, 45], "mcrf": [42, 45, 117], "modulation_frequ": [42, 45, 117, 164, 191], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 117, 182], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 84, 182, 225], "coupling_strength_norm": [44, 45, 46, 84, 193], "frequency_initial_norm": [44, 45, 46, 84, 193], "frequency_to_minimize_norm": [44, 45, 46, 84, 193], "lambda_1": [44, 45, 46, 84, 193], "lambda_2": [44, 45, 46, 84, 193], "squid_asymmetri": [44, 45, 46, 84, 193], "truncatedgaussiansmoothedsquar": [47, 52, 85, 191], "tgss": [47, 52, 85], "analog": 48, "tune": [48, 138, 139, 140, 141], "_ac_stark_puls": [48, 116], "phase_incr": [48, 116, 117, 120, 164, 171], "quadratur": [48, 116, 164], "pi": [48, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 116, 122, 123, 124, 140, 141, 143, 144, 145, 146, 151, 152, 155, 156, 183, 184, 185, 189, 192, 214, 225, 227, 230, 232], "discret": 49, "mediat": [49, 81], "coupl": [49, 193], "tunabl": [49, 231], "arbitrari": [49, 76, 103, 104, 120, 124, 166, 215, 225, 230, 232], "assign": [49, 75, 76, 77, 80, 130, 225], "slot": 49, "move": [49, 82, 83, 84, 85, 86, 202, 225, 232], "flux_puls": [49, 51], "radian": [49, 51, 89, 90, 105, 106, 115, 120, 124, 164, 171, 185, 192, 214], "realiz": [51, 225, 231], "similar": [51, 77, 130, 225, 227], "width": [51, 53, 54, 55, 57, 139, 142, 176, 189, 191], "rise_wav": [51, 53, 54, 55], "cosineriseflex": [51, 53, 54, 55, 182], "fall_wav": [51, 53, 54, 55], "cosinefallflex": [51, 53, 54, 55, 182], "smooth": [53, 54, 55, 90, 186, 188], "1e": [56, 57, 70, 178, 205, 206], "15": 56, "10": [57, 61, 70, 81, 231], "save": 57, "memori": [57, 90, 225, 226], "flat": [57, 69, 136, 187, 190], "divid": 57, "consecut": 57, "conform": [57, 88], "minimum": [57, 221, 224, 226], "leftov": [57, 187, 190], "error": [57, 67, 143, 147, 187, 190, 193, 197, 211, 218, 219, 220, 225, 226, 232], "obei": 57, "maximum": [60, 70, 114, 151, 152, 176, 193, 203], "up": [61, 75, 77, 80, 83, 87, 131, 137, 151, 152, 176, 193, 203, 225, 227], "hardwar": [61, 171, 195, 221, 224, 226, 227, 228, 230], "again": 61, "much": [61, 76, 226], "why": [61, 227], "except": [61, 75, 77, 94, 216, 218, 219, 220, 225, 226, 227, 229], "enumer": [62, 64, 66], "xygat": [62, 65, 106], "intenum": [62, 66], "reprenum": 62, "twoqubitg": [62, 63], "iswap": [63, 64, 231], "j": [63, 65, 69, 143, 231], "sqrt_iswap": [63, 64], "70710678": [63, 65], "70710678j": [63, 65], "matric": [63, 65, 227], "enum": [64, 66, 207, 209, 210], "qualnam": [64, 66, 209, 210], "two_qubit_unitari": 64, "squar": 64, "x_90": 65, "x_180": 65, "x_m90": 65, "y_90": 65, "y_180": 65, "y_m90": 65, "su": [65, 124, 125, 126], "clifford": [66, 106], "axi": [66, 89, 122, 124, 215, 225, 227], "xy": [66, 89, 106], "plane": [66, 89, 122], "xygate_unitari": 66, "tomographi": 66, "overwrit": [67, 108, 109], "fluxmultiplexer_samplelinear": [68, 225], "flux_multiplex": 69, "linear": [69, 105, 183, 184], "multiplex": [69, 75, 77, 80, 113, 208, 225], "cross": [69, 229, 232], "talk": [69, 232], "element": [69, 139, 143, 147, 211, 225, 226, 232], "c_ij": 69, "aris": [69, 229], "a_i": [69, 103], "w_i": 69, "sum_j": 69, "a_j": 69, "w_j": [69, 143], "spars": 69, "form": [69, 193, 225, 226, 227, 229], "xarrai": 69, "matrix_index": 69, "relev": 69, "np": [69, 195, 227, 230, 232], "matrix_el": 69, "experiment": 69, "r": [69, 122, 189, 231], "d": [69, 143, 183, 211, 229, 231], "everyth": [69, 232], "here": [69, 94, 157, 182, 193, 227, 230, 232], "subject": [69, 226, 229], "absolut": 70, "uniformli": 70, "class_nam": 71, "project": [72, 73, 74, 78, 113, 120], "basi": [72, 73, 74, 78, 113, 120, 124, 139, 142, 143, 146, 147, 149, 151, 152, 153, 154, 155, 156, 195, 229], "measure_customwaveform": [72, 73, 74, 76, 80, 227], "measure_const": [72, 225], "measure_constant_qnd": 72, "probepulse_customwaveform": [72, 77, 225], "probepulse_customwaveforms_nointegr": [72, 78, 225], "probe_const": 72, "shelved_measure_customwaveform": [72, 79, 225], "shelved_measure_const": [72, 225], "dispers": [73, 74, 75, 78, 80], "acquisition_delai": [73, 74, 75, 76, 79], "acquisit": [73, 74, 75, 76, 77, 79, 80, 159, 167, 225, 230], "acquisition_typ": [73, 74, 75, 79], "threshold": [73, 74, 75, 77, 79, 80, 169], "amplitude_i": [73, 74, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 118, 227], "amplitude_q": [73, 74, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 118, 227], "integration_length": [73, 74, 75, 76, 79, 225], "integr": [73, 74, 75, 76, 77, 79, 133, 161, 169, 170, 193, 225, 230], "integration_threshold": [73, 74, 75, 79], "integration_weights_i": [73, 74, 75, 79], "weight": [73, 74, 75, 76, 79, 99, 100, 139, 140, 141, 143, 147, 161, 169, 225], "dtype": [73, 74, 75, 79, 140, 141, 151, 152, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 227], "float64": [73, 74, 75, 79], "integration_weights_q": [73, 74, 75, 79], "demolit": 74, "intermedi": [75, 227], "IF": 75, "center": [75, 133, 142, 143, 157, 189, 191, 193], "offset": [75, 166, 189, 193], "readouttrigg": [75, 76, 77, 80, 158, 169, 208, 226, 228], "_multiplexed_timebox": [75, 77], "multiplexedprobetimebox": [75, 77, 80, 207, 225], "probe_timebox": [75, 77, 80], "_time_trac": 75, "time_trac": [75, 76, 159], "_build_instruct": [75, 76, 77], "waveform_param": [75, 76, 77], "root_param": [75, 76, 77], "if_freq": [75, 77], "acquisitionmethod": [75, 76, 158, 161, 167, 170], "do_acquisit": [75, 77, 80], "nake": [75, 77, 80], "trigger": [75, 76, 77, 80, 167, 176, 208, 225, 230], "goe": [75, 77, 80], "maintain": [75, 77, 80], "backward": [75, 77, 80], "rout": [75, 77, 80, 169], "probelin": [75, 77, 80, 226, 230], "behav": [75, 77, 80, 160, 172], "featur": [75, 77, 80, 227, 228], "mode": [75, 77, 80], "pick": [75, 77, 80], "anywher": [75, 77, 80, 169, 225], "pass": [75, 77, 80, 86, 87, 88, 225, 230], "acquisition_dur": 75, "trace": [75, 76], "record": 75, "acqusit": 75, "due": [76, 81, 83, 116, 163, 188, 226], "limit": [76, 90, 123, 221, 224, 225, 229, 232], "contrari": 76, "probl": 76, "shelv": [79, 80, 225], "surround": 79, "prx_12": [79, 80, 225], "standard": [80, 136, 232], "swap": [80, 81], "back": [80, 83, 195, 202], "roughtli": 80, "collaps": 80, "advantag": 80, "suscept": 80, "t_1": 80, "decai": 80, "_skip_overrid": 80, "exchang": 81, "invari": 81, "span": 81, "00": [81, 149], "rangl": [81, 110], "01": [81, 149], "anyth": [81, 227], "orthogon": [81, 227], "involut": 81, "_": [81, 147, 151, 156, 157], "i_": 81, "langl": 81, "complex": [81, 99, 100, 101, 102, 161, 227, 230, 232], "degre": [81, 122], "freedom": [81, 230], "continuum": 81, "cancel": [81, 225], "movemark": [81, 83, 225], "move_customwaveform": [81, 82, 84, 85, 87, 225], "move_crf_crf": [81, 225], "move_slepian_crf": [81, 225], "move_tgss_crf": 81, "detun": [82, 83, 84, 85, 86, 87, 225], "bookkeep": 83, "unknown": [83, 195, 219], "pair": [83, 166, 186, 188, 195, 227], "came": 83, "sandwich": [83, 87, 88, 225], "annot": [83, 86, 225, 229], "mark": [83, 225, 229], "counteract": 83, "accumul": 83, "proport": 83, "sum": [83, 87, 139, 150, 166, 177, 183, 185, 191, 192, 193, 211, 232], "complet": [83, 226], "apply_move_gate_phase_correct": [83, 225], "track": [83, 177, 203, 225, 229, 232], "right": [86, 225, 226, 229, 230, 232], "link": [86, 182, 225, 229], "noth": [86, 174, 176, 199, 201, 205, 206, 227, 229], "explicit": [86, 225, 226], "aforement": [86, 177, 203, 227], "marker": 86, "post": [86, 142, 150], "compil": [86, 88, 131, 160, 228, 229, 232], "apply_detuning_correct": 87, "validate_prx": 88, "prepar": [88, 229], "constraint": [88, 166, 226, 230], "unmodifi": 88, "x": [89, 90, 94, 96, 105, 106, 122, 124, 192, 225, 227, 231], "r_": [89, 94, 120], "phi": [89, 94, 115, 120, 124, 125, 126, 185, 192, 215, 225], "theta": [89, 94, 120, 124, 125, 126, 193, 215, 225], "co": [89, 103, 124, 140, 143, 144, 146, 151, 152, 155, 156, 183, 185, 192, 225], "y": [89, 106, 122, 124, 126, 225], "sin": [89, 103, 124, 141, 145, 189], "r_z": [89, 94, 115, 120, 124, 125], "r_x": 89, "dagger": 89, "around": [89, 122, 124, 143, 191, 215], "li": 89, "bloch": [89, 124, 227], "sphere": [89, 124, 227], "prxgateimplement": [89, 90, 105, 115], "prx_singlepulse_gateimplement": [89, 93, 94, 225], "prx_customwaveform": [89, 92, 95, 97, 99, 101, 103, 225, 227], "prx_draggaussian": 89, "prx_dragcosinerisefal": 89, "prx_customwaveformssx": [89, 96, 98, 100, 102, 225], "prx_draggaussiansx": [89, 225], "prx_dragcosinerisefallsx": [89, 225], "prx_fastdragsx": [89, 225], "prx_fastdrag": [89, 225], "prx_hddragsx": [89, 225], "prx_hddrag": [89, 225], "prx_cosin": [89, 225], "abc_constant_smooth": [89, 91, 115], "constant_prx_with_smooth_rise_fal": [89, 115, 118, 225], "prx_modulatedcustomwaveform": [89, 104, 225], "prx_modulateddragcosinerisefal": [89, 225], "arbitrarili": [90, 186, 188, 225], "rise_waveform": [90, 91, 118], "main_waveform": [90, 91, 118], "fall_waveform": [90, 91, 118], "middl": [90, 191], "doesn": [90, 225], "_main_puls": 90, "main": [90, 226, 227], "_rise_puls": 90, "_fall_puls": 90, "cosinefal": [91, 118, 182], "cosineris": [91, 118, 182], "sideband": 92, "iq": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 131, 132, 139, 150, 161, 166, 169, 170, 215, 221, 224, 225], "hot": [93, 94, 103], "swappabl": [93, 94, 103], "rest_of_calibration_data": [93, 94, 103], "x_pi": [93, 95, 225], "sx": [94, 100, 102, 123, 225], "manipul": [94, 227], "formula": 94, "rz_after": [94, 96, 98, 100, 102], "rz_befor": [94, 96, 98, 100, 102, 225], "sqrt": [94, 96, 122, 225], "cosinerisefallderiv": [95, 96, 104, 182], "vz": [96, 98, 100, 102], "prx_customwaveformsvz": [96, 98], "truncatedgaussian": [97, 98, 227], "tg": [97, 98], "truncatedgaussianderiv": [97, 98, 227], "gaussian": [98, 227], "scale": [99, 101, 105, 142, 143, 163, 164, 168, 226, 227], "fdi": [99, 100], "coeffici": [99, 100, 101, 102, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 192, 193], "compute_coefs_from_frequ": [99, 100, 101, 102, 139, 140, 141, 142, 150, 151, 152], "boolean": [99, 100, 101, 102, 142, 169], "number_of_cos_term": [99, 100, 139, 140, 141], "5": [99, 100, 143, 149, 183, 227, 229, 231, 232], "suppressed_frequ": [99, 100, 101, 102, 139, 140, 141, 142, 150, 151, 152], "suppressed_interval_width": [99, 100, 139, 140, 141], "fastdragi": [99, 100, 138, 225], "fastdragq": [99, 100, 138, 225], "hd": [101, 102, 142, 148, 150, 151, 152, 153, 154, 155, 157, 225], "hdi": [101, 102], "hddragi": [101, 102, 148, 225], "hddragq": [101, 102, 148, 225], "baseband": 103, "shape": [103, 139, 140, 141, 146, 151, 152, 168, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 228], "delta": 103, "omega_i": 103, "omega_d": 103, "a_q": 103, "omega_q": 103, "omega": [103, 183], "band": [103, 104], "static": [105, 139, 142, 150, 183, 185, 191, 192, 193, 208, 211, 225], "_single_iq_puls": [105, 225], "resonantli": 105, "x_": 105, "linearli": [105, 227], "adjust": [105, 215, 225, 226, 230], "rx": [106, 225, 230, 232], "ry": [106, 225, 232], "xy_gat": 106, "2x2": [107, 121, 126], "impl_class": [108, 227], "set_as_default": 108, "reset_condit": [110, 230], "reset_wait": [110, 225], "__default_feedback": 111, "doubl": [111, 112], "underscor": [111, 112], "emphas": [111, 112], "fact": [111, 112], "manual": [111, 112, 185, 227], "__reset": 112, "necessari": [113, 199, 226, 227, 232], "accommod": 113, "upon": 113, "relax": [114, 225], "compar": [114, 169, 176, 225], "shot": [114, 226], "destroi": 114, "wait_box": 114, "besid": 114, "rz_virtual": 115, "rz_acstarkshift": [115, 117], "rz_acstarkshift_cosinerisefal": 115, "rz_acstarkshift_smoothconst": [115, 225], "rz_prx_composit": [115, 225], "strong": 116, "off": [116, 225], "lead": [116, 225], "shift": [116, 163], "ac_stark_puls": 116, "ac_stark_waveform": 117, "increment": [117, 120, 164, 171, 215, 225], "techniqu": [120, 125], "oscil": [120, 164, 171, 215], "shortest": 120, "algebra": [120, 171], "commut": [120, 215], "toward": 120, "hit": 120, "elimin": 120, "multi": 120, "hold": [120, 229], "diagon": 120, "immedi": [120, 199, 225], "conjug": 120, "alpha": [120, 183, 184], "accomplish": 120, "assumpt": [120, 193], "negat": 120, "sigma": [122, 227, 231], "_x": 122, "xz": 122, "90": [122, 231], "sxgate": [122, 225], "parametr": [124, 193, 227, 231], "euler": [124, 125], "lambda": [124, 125, 225, 227], "subsequ": [124, 229], "r_y": [124, 125], "express": [124, 139, 193, 229], "h": [124, 143], "8": [124, 149, 229], "http": [124, 229], "openqasm": 124, "com": 124, "languag": [124, 226, 229], "html": [124, 181, 225], "ugat": [124, 225], "lam": [125, 126], "decomposit": 125, "cdot": 125, "probechannelproperti": 128, "channelconfigur": [128, 134], "realchannelconfig": [128, 130, 132], "iqchannelconfig": 128, "channeldescript": [128, 221, 222], "instruction_t": 130, "waveform_t": 130, "add_instruct": 130, "integ": [130, 131, 162, 211, 232], "manner": 130, "instruction_duration_granular": [131, 133], "instruction_duration_min": [131, 133, 137], "compatible_instruct": [131, 133, 217], "is_iq": [131, 133], "is_virtu": [131, 133], "blocks_compon": [131, 133], "zi": 131, "hdawg": 131, "shfsg": 131, "shfqa": 131, "32": [131, 226], "16": [131, 176, 226, 231], "hack": 131, "frontend": 131, "sent": [131, 225, 226, 229], "might": [131, 225, 226, 227, 230, 232], "duration_to_sampl": 131, "duration_to_second": 131, "duration_to_int_sampl": 131, "messag": [131, 197, 211], "check_min_sampl": 131, "close": [131, 225, 232], "test": [131, 225], "output": [131, 160, 172, 181, 195, 225, 226, 230, 232], "unaccept": 131, "round_duration_to_granular": 131, "round_up": [131, 137], "force_min_dur": [131, 137], "closest": [131, 137], "upconvers": [132, 164, 171], "center_frequ": 133, "integration_start_dead_tim": 133, "integration_stop_dead_tim": 133, "dead": 133, "real": [134, 164, 168, 169, 193, 226], "flux_control": 135, "readout_control": 135, "intern": [135, 225, 226, 232], "channel_properti": [136, 176, 204], "largest": 137, "fourier": [138, 139, 140, 141, 143, 146, 147, 193], "ansatz": [138, 139, 140, 141], "spectrum": [138, 139, 140, 141, 142, 147], "suppressedpuls": [138, 139, 148, 150], "fastdrag": [138, 140, 141], "fast_drag": [139, 140, 141, 142, 148], "envelop": [139, 140, 141, 142, 144, 145, 149, 151, 152, 153, 154, 155, 156, 164, 225, 231], "domain": [139, 147], "suppress": [139, 142, 143, 147, 149, 150, 151, 153, 154, 156, 157], "interv": [139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156, 166, 226, 227], "accord": [139, 147, 151, 152, 211, 232], "furthermor": 139, "similarli": [139, 225, 227], "ordinari": 139, "detail": [139, 191, 193, 195, 226, 228, 230], "seri": [139, 140, 141, 142, 143, 144, 145, 155], "last": [139, 230, 232], "potenti": [139, 225], "cutoff": 139, "non_timelike_attribut": [139, 150, 183, 185, 191, 192, 193, 225, 227], "timelik": [139, 150, 183, 185, 191, 192, 193], "dimensionless": [139, 150, 183, 185, 191, 192, 193], "window": [139, 150, 159, 170, 183, 185, 189, 191, 192, 193], "invers": [139, 143, 150, 183, 185, 191, 192, 193], "sum_": [140, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 225], "c_n": [140, 141, 144, 145, 147], "t_p": [140, 141, 143, 144, 145, 146, 151, 152, 155, 156], "_sampl": [140, 141, 151, 152, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 227], "sample_coord": [140, 141, 151, 152, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 227], "coordin": [140, 141, 151, 152, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193], "expans": [142, 143], "choos": [142, 227, 229], "neglect": [142, 150], "_normal": 142, "clip": 142, "re": 142, "n_arr": [143, 146], "suppressed_freq_ranges_2darr": 143, "pulse_dur": [143, 144, 145, 146, 147, 153, 154, 155, 157], "time_scaling_factor": 143, "n_points_for_integr": [143, 147], "60": [143, 147], "evalu": [143, 144, 145, 146, 147, 153, 154, 155, 162], "eq": [143, 146, 147, 150, 151, 152, 157], "a_": 143, "nm": 143, "int_": 143, "f_": [143, 183], "l": [143, 231], "hat": 143, "_n": 143, "_m": 143, "mathrm": [143, 183], "m": [143, 225, 231], "row": 143, "column": 143, "denot": [143, 151, 152, 227], "transform": [143, 146, 147, 225, 226, 228, 229], "g_n": [143, 146], "importantli": [143, 226], "fulli": 143, "1d": [143, 146, 147], "2d": [143, 147], "give": [143, 226, 227, 229, 232], "factor": [143, 164, 168, 193, 227], "excess": 143, "small": [143, 225, 226], "integrand": [143, 147], "50": [143, 147, 229], "recommend": [143, 147, 229], "numer": [143, 147, 193], "low": [143, 147, 227], "t_arr": [144, 145, 153, 154, 155], "nth": [146, 155], "analyt": [146, 193, 231], "a7": [146, 147], "frequency_arr": 146, "tensor": 146, "dim": 146, "cartesian": 146, "dimension": 146, "number_of_cosin": 147, "weights_tupl": 147, "suppressed_freq_ranges_2d_tupl": 147, "solv": [147, 156, 157], "optim": [147, 193, 205, 225], "a5": 147, "a12": 147, "a13": 147, "effici": [147, 230], "rb": 147, "outer": 147, "appendix": [148, 229], "hddrag": [148, 151, 152], "33333333": 149, "6": [149, 229, 231], "22857143": 149, "02857143": 149, "66666667": 149, "95238095": 149, "35714286": 149, "07936508": 149, "00793651": 149, "71428571": 149, "07142857": 149, "47619048": 149, "14285714": 149, "02597403": 149, "0021645": 149, "75000000e": 149, "16666667e": 149, "83333333e": 149, "12121212e": 149, "30303030e": 149, "02": 149, "15850816e": 149, "03": 149, "82750583e": 149, "04": 149, "7": [149, 229], "77777778e": 149, "24444444e": 149, "78787879e": 149, "82828283e": 149, "70240870e": 149, "86480186e": 149, "48640249e": 149, "55400155e": 149, "0th": 149, "solve_cosine_coefs_for_hd_drag": 149, "hd_drag": [150, 151, 152], "b1": [150, 151, 152], "b2": 150, "beta_": [151, 152, 153, 154, 157], "2n": [151, 152, 153, 154, 157], "d_k": [151, 152, 155, 156], "continu": [151, 152], "2k": [151, 152], "slightli": [151, 152], "derivative_coefs_arr": [153, 154], "cosine_coefs_arr": [153, 154, 155], "number_of_suppressed_freq": 156, "suppressed_freq_arr": 157, "b5": 157, "beta_0": 157, "ghz": 157, "realpuls": [158, 163, 221, 223, 224, 227], "multiplexediqpuls": [158, 167], "timetrac": 158, "complexintegr": [158, 169], "thresholdstatediscrimin": 158, "delay_sampl": [159, 161, 169, 170], "acquir": [159, 167, 226], "qb1__readout": 159, "strictli": [160, 226, 227], "strict": [160, 225, 226], "version": [160, 228, 229], "dd": 160, "outcom": 162, "choic": 162, "ok": [162, 164, 165, 168], "get_child_instruct": [162, 165], "child": [162, 165, 203, 204, 221, 224], "collect": [163, 226], "scale_i": [164, 227], "scale_q": [164, 227], "upconvert": 164, "carrier": 164, "success": 164, "get_waveform": [164, 165, 168], "command": [165, 226, 230], "entri": [166, 227], "outsid": [166, 226, 227], "truncat": [166, 202, 225], "neg": 166, "probe_puls": 167, "feedback_signal_label": [169, 225], "transmit": 169, "field": [169, 225, 227, 229], "duration_sampl": 170, "captur": [170, 228], "updat": [171, 225, 230], "step": [172, 193, 225], "sure": 172, "synchron": 176, "program": 176, "critic": 176, "constructor": 176, "account": [176, 193, 225], "pprint": 176, "time_unit": 176, "fix": [176, 226], "graphic": 176, "represent": [176, 211, 226], "symbol": 176, "keysview": 176, "mutat": [176, 177], "vice": [176, 177], "versa": [176, 177], "immut": [176, 177], "add_channel": 176, "channel_nam": [176, 232], "front_pad": 176, "to_dur": 176, "variabl": [176, 203, 225], "front_pad_in_second": 176, "pad_to_hard_box": 176, "pad_to_hard_box_in_second": 176, "smallest": 176, "revers": 176, "preserv": [176, 199, 225, 226, 232], "rear": 176, "reverse_hard_box": 176, "No": [176, 225], "synchronis": 176, "break": 176, "cleanup": [176, 225], "clean": [176, 225], "thing": [176, 186, 188], "has_content_in": 176, "keep": [177, 203], "_instruct": 177, "_durat": 177, "prepend": 177, "pop": 177, "idx": [177, 202], "12": [178, 205, 206], "comp": [178, 225], "1281": 178, "visualis": [180, 225], "view": [181, 225], "browser": 181, "jupyt": 181, "notebook": 181, "ipython": 181, "core": [181, 225], "displai": [181, 225, 229], "inspect": 181, "serial": 182, "reimport": 182, "document": [182, 225, 229], "appear": [182, 226, 229], "polynomialcosin": [182, 225], "chirp": [182, 184, 225], "chirpimag": [182, 225], "freq_start": [183, 184], "freq_stop": [183, 184], "05": [183, 184], "taper": 183, "rectangular": [183, 203], "hann": 183, "nyquist": 183, "zone": 183, "constrain": 183, "5707963267948966": 184, "imaginari": 184, "period": [185, 192], "sinusoid": [185, 189, 191, 192], "made": [186, 188, 211, 227, 228, 229, 232], "buffer": [187, 190], "piecewis": [187, 190], "plateau": [187, 189, 190], "combin": [187, 190, 203, 229], "dummi": 188, "bug": 188, "fixm": 188, "p": [189, 192, 231], "Its": [189, 226], "midpoint": [189, 193], "descript": [191, 211, 229], "polynomi": [192, 225], "minim": [193, 199, 225], "adiabat": [193, 231], "prior": 193, "lambda_n": 193, "tau_": 193, "acceler": 193, "reconstruct": 193, "tau": 193, "lab": 193, "interpol": 193, "v": [193, 221, 224, 225], "voltag": 193, "go": [193, 226, 227], "advis": [193, 229], "look": [193, 227], "mathemat": [193, 228], "heavi": 193, "leakag": [193, 231], "strength": 193, "squid": [193, 225], "asymmetri": [193, 225], "_sample_normalized_slepian": 193, "coord": 193, "_t_tau": 193, "num_sampl": 193, "129": 193, "convers": [193, 227, 229], "solut": 193, "therefor": [193, 226], "scipi": [193, 225], "romb": 193, "_theta_tau": 193, "shown": [193, 225, 230], "tau_puls": 193, "quantum_op": 195, "short": [195, 205], "simpl": [195, 211, 226, 227, 231], "unambigu": [195, 226, 227], "subsystem": 195, "qumod": 195, "pictur": [195, 230], "famili": [195, 226], "plural": 195, "intent": 195, "target": [195, 225, 232], "callabl": [195, 227], "lowest": [195, 226], "docstr": [195, 225], "exact": [195, 227], "first_qubit_basis_ket": 195, "second_qubit_basis_ket": 195, "set_default_implement": [195, 227], "set_default_implementation_for_locu": [195, 227], "cal_data": 197, "noiseless": 199, "sync": 199, "spacer": 199, "try": [199, 225], "segmentpoint": 199, "nonsolid": 200, "nevertheless": 200, "tol": [202, 205, 206], "frac": 202, "serv": 202, "pointer": 202, "smaller": [202, 205, 206], "toler": 202, "remaind": 202, "cut_tail": 202, "cut": 202, "tail": 202, "onward": 202, "rewind": 202, "fastforward": 202, "forward": 202, "child_schedul": [203, 204], "child_compon": [203, 204], "neighborhood_compon": [203, 204, 208, 211], "component_dur": [203, 204], "is_alap": [203, 204], "respect": [203, 209, 221, 224, 226, 227], "hard": [203, 225], "rag": [203, 205, 206], "edg": [203, 225], "earliest": [203, 204], "max": 203, "extend_hard_boundary_in_second": 203, "computational_reson": [203, 204], "addition": [203, 204, 230], "ever": [203, 204], "alap": [203, 204, 210, 211, 226, 232], "As": [203, 204, 211, 227, 230], "late": [203, 204, 210, 211], "extend_hard_boundari": 204, "incom": 204, "extens": [205, 206, 225], "reserv": [207, 225], "resourc": 207, "schedulingstrategi": [207, 208, 209, 211, 232], "locus_compon": [208, 211, 227], "asap": [208, 210, 211, 226, 230, 232], "from_readout_trigg": 208, "readout_trigg": 208, "probe_channel": 208, "block_channel": 208, "block_dur": 208, "soon": [210, 211, 225, 230], "fragment": 211, "human": [211, 226, 227], "readabl": [211, 225, 226, 229], "union": [211, 229, 232], "rule": [211, 215, 225, 226, 227, 232], "operand": [211, 232], "pipe": [211, 232], "group": [211, 227, 232], "let": [211, 227], "a_then_b": 211, "c_then_d": 211, "set_alap": [211, 232], "abcd": 211, "abb": 211, "ccd": 211, "all_togeth": 211, "dictat": 211, "flatten": 211, "ancestor": 211, "set_asap": 211, "print": [211, 225, 229, 232], "_idx": 211, "type_hint": 213, "python": [213, 225, 227], "typehint": 213, "psi_1": 215, "psi_2": 215, "decrement": 215, "beforehand": 215, "opposit": 215, "direct": [215, 229], "playlistvalidationerror": 216, "awgschedulevalidationdata": [216, 221], "awgschedulevalidationerror": 216, "invalidinstructionerror": 216, "sampling_r": 217, "min_number_of_sampl": 217, "issue_str": 219, "encount": 219, "channel_descript": [221, 222], "device_constraint": [221, 222, 224], "split": [225, 226], "qnd": 225, "mid": 225, "measure_fidel": 225, "termin": [225, 229], "ruff": 225, "miss": 225, "exempt": 225, "librari": [225, 228, 230], "a_k": 225, "iq_puls": 225, "register_implement": [225, 226, 227], "register_oper": [225, 226, 227], "introduc": [225, 227], "mypi": 225, "ci": 225, "issu": [225, 229], "sw": 225, "1615": 225, "were": 225, "visual": [225, 226, 230], "faster": 225, "numpi": [225, 232], "inspector": 225, "render": 225, "mr": 225, "1086": 225, "bump": 225, "coco": 225, "isort": 225, "patch": 225, "1429": 225, "usag": [225, 227], "broken": 225, "inspect_playlist": [225, 226], "ifram": 225, "tag": 225, "licens": [225, 228], "vulner": 225, "safe_load": 225, "harm": 225, "remot": 225, "1378": 225, "modulated_drag_crf": 225, "baseclass": 225, "packag": 225, "publish": 225, "doc": [225, 227], "footer": 225, "1392": 225, "pep": 225, "604": 225, "lint": 225, "1230": 225, "rework": 225, "delet": 225, "major": 225, "stai": 225, "seen": 225, "register_g": 225, "validate_oper": 225, "compare_oper": 225, "add_implement": 225, "validate_implement": 225, "set_default": 225, "build_quantum_op": [225, 226], "py": 225, "yield": 225, "didn": 225, "renam": 225, "crystal": 225, "star": 225, "architectur": 225, "crystal_5": 225, "star_6": 225, "mini": 225, "mini_crystal_20": 225, "crystal_20": 225, "1059": 225, "electron": [225, 227, 229], "refactor": 225, "register_gate_implement": 225, "imposs": 225, "retain": [225, 229], "rapidjson": 225, "685": 225, "previous": 225, "x90": 225, "codebas": 225, "467": 225, "speed": 225, "reshap": 225, "neither": [225, 227], "assing": 225, "signific": 225, "speedup": 225, "anywai": 225, "diffrenet": 225, "broader": 225, "compatibili": 225, "migrat": 225, "guid": 225, "builtin": 225, "easili": [225, 228, 232], "quantumcircuit": 225, "extract": 225, "crf_acstarkcrf": 225, "slepian_acstarkcrf": 225, "repo": 225, "organ": [225, 232], "1042": 225, "disabl": 225, "horizont": 225, "scroll": 225, "toggl": 225, "cover": 225, "concept": [225, 227, 228], "531": 225, "gitlab": 225, "public": 225, "page": [225, 228, 229], "776": 225, "514": 225, "client": [225, 226, 227, 228], "apach": [225, 229], "extlink": 225, "sphinx": 225, "916": 225, "intersphinx": 225, "665": 225, "becaus": [225, 227], "proper": 225, "former": 225, "semant": [225, 226], "disturb": 225, "774": 225, "leak": 225, "web": 225, "artifact": 225, "resetwait": 225, "comfort": [225, 227], "timelin": [225, 226], "redisplai": 225, "upcom": 225, "releas": 225, "prefer": [225, 227, 229], "font": 225, "viewer": 225, "358": 225, "typo": 225, "api": [225, 227, 228, 232], "workflow": [225, 232], "meth": 225, "pulla": [225, 228, 232], "crash": 225, "discoveri": 225, "throw": 225, "sc": 225, "nonsens": 225, "mcm": 225, "merge_dict": 225, "crf_crf": 225, "interfac": [225, 227, 229], "feedback_label": 225, "conditional_prx": 225, "hopefulli": 225, "yml": 225, "conditionalreset": 225, "constant_qnd": 225, "qndness": 225, "phase_increment_befor": 225, "sign": 225, "phase_transform": 225, "fulfil": 225, "satisfi": [225, 230], "conditionalprx": 225, "accept": [225, 229], "signifi": 225, "weigth": 225, "whitelist": 225, "2112": 225, "write": [225, 227, 229], "1831": 225, "drag_crf_sx": 225, "drag_gaussian_sx": 225, "prx_u": 225, "prx_sx": 225, "_x_pi_puls": 225, "547": 225, "prioritis": 225, "1929": 225, "1468": 225, "programm": 225, "1925": 225, "crude": 225, "measure_nop": 225, "validate_move_instruct": 225, "2056": 225, "pipelin": [225, 230], "overview": 226, "terminologi": 226, "deliv": 226, "send": [226, 230], "assembli": 226, "batch": 226, "summar": 226, "imag": [226, 230], "illustr": [226, 230], "visibl": 226, "microwav": [226, 228], "ambigu": 226, "machin": 226, "violat": 226, "concern": 226, "philosophi": 226, "inaccess": 226, "attempt": 226, "smart": 226, "magic": 226, "inconsist": 226, "transpar": 226, "technic": 226, "apart": 226, "few": 226, "instant": 226, "thought": [226, 230], "desir": [226, 232], "read": [226, 230, 232], "disjoint": [226, 232], "partli": 226, "figur": [226, 230], "demonstr": 226, "explain": 226, "nonunitari": 226, "variou": [226, 227], "runtim": [226, 232], "bridg": 226, "gap": 226, "despit": 226, "appropri": [226, 229], "repeat": [226, 232], "repetit": 226, "encod": 226, "aim": 226, "fit": [226, 229], "chunk": 226, "neat": 226, "metadata": 227, "question": [227, 232], "cnot": 227, "NOT": 227, "On": [227, 230], "hand": 227, "frozen": 227, "programmat": 227, "procedur": 227, "invok": 227, "random": 227, "benchmark": 227, "qc": 227, "emphasi": 227, "def": 227, "superclass": 227, "triplet": 227, "_default": 227, "implementation_": 227, "default_prx_qb1": 227, "necessarili": [227, 229], "special_prx_qb1": 227, "my_special_prx": 227, "default_box": 227, "chain": [227, 230], "default_cz_box": 227, "pure": 227, "develop": 227, "thumb": 227, "rest": 227, "simplifi": [227, 230], "educ": 227, "__class__": 227, "__name__": 227, "subsect": 227, "relai": 227, "live": 227, "asymmetr": 227, "tri": 227, "replic": 227, "mandatori": 227, "alter": 227, "physcial": 227, "averag": 227, "mu": 227, "spread": 227, "recip": 227, "offset_coord": 227, "exp": 227, "resampl": 227, "understand": [227, 230, 231], "unitless": 227, "scalar_coeffieci": 227, "quick": [227, 228, 232], "simplest": 227, "compositehadamard": 227, "hadamard": 227, "member_prx": 227, "onelin": 227, "prx_mycoolwaveform": 227, "coolwaveformi": 227, "coolwaveformq": 227, "my": 227, "cool": 227, "cz_mycoolwaveform": 227, "coolcouplerwaveform": 227, "coolqubitwaveform": 227, "measure_mycoolwaveform": 227, "preload": 227, "snippet": 227, "cnot_matrix": 227, "cnot_op": 227, "my_build": 227, "my_cnot_impl": 227, "mycnotclass": 227, "default_g": 227, "_default_implement": 227, "date": [228, 229], "2025": 228, "09": 228, "14": 228, "high": [228, 231], "unifi": 228, "hide": 228, "But": 228, "framework": [228, 232], "machineri": 228, "standalon": 228, "encourag": [228, 232], "familiar": 228, "especi": [228, 232], "miscellan": 228, "pitfal": 228, "changelog": 228, "search": 228, "januari": 229, "2004": [229, 231], "www": 229, "org": 229, "AND": 229, "FOR": 229, "reproduct": 229, "distribut": 229, "shall": 229, "9": [229, 230, 232], "licensor": 229, "copyright": 229, "owner": 229, "entiti": 229, "author": 229, "grant": 229, "legal": 229, "power": 229, "indirect": 229, "manag": 229, "contract": 229, "ii": 229, "ownership": 229, "fifti": 229, "percent": 229, "outstand": 229, "iii": 229, "benefici": 229, "exercis": 229, "permiss": 229, "modif": 229, "softwar": [229, 231], "mechan": 229, "translat": 229, "media": 229, "authorship": 229, "notic": [229, 232], "editori": 229, "revis": 229, "elabor": 229, "mere": 229, "bind": 229, "thereof": 229, "contribut": 229, "intention": 229, "submit": 229, "inclus": 229, "behalf": 229, "verbal": 229, "written": 229, "commun": 229, "mail": 229, "discuss": 229, "conspicu": 229, "Not": [229, 232], "contributor": 229, "whom": 229, "incorpor": 229, "herebi": 229, "perpetu": 229, "worldwid": 229, "exclus": 229, "charg": 229, "royalti": 229, "free": [229, 231], "irrevoc": 229, "reproduc": 229, "publicli": 229, "sublicens": 229, "patent": 229, "offer": 229, "sell": 229, "claim": 229, "infring": 229, "alon": 229, "institut": 229, "litig": 229, "counterclaim": 229, "lawsuit": 229, "alleg": 229, "contributori": 229, "redistribut": 229, "medium": 229, "meet": 229, "recipi": 229, "promin": 229, "trademark": 229, "pertain": 229, "along": 229, "wherev": 229, "third": 229, "parti": 229, "alongsid": 229, "addendum": 229, "constru": 229, "statement": [229, 230], "compli": 229, "submiss": 229, "notwithstand": 229, "herein": 229, "supersed": 229, "agreement": 229, "regard": 229, "trade": 229, "servic": 229, "customari": 229, "disclaim": 229, "warranti": 229, "law": 229, "agre": 229, "AS": 229, "OR": 229, "OF": 229, "kind": 229, "impli": 229, "titl": 229, "merchant": 229, "sole": 229, "risk": 229, "liabil": 229, "event": 229, "theori": 229, "tort": 229, "neglig": 229, "deliber": 229, "grossli": 229, "liabl": 229, "damag": 229, "incident": 229, "consequenti": 229, "inabl": 229, "loss": 229, "goodwil": 229, "stoppag": 229, "failur": 229, "malfunct": 229, "commerci": 229, "fee": 229, "indemn": 229, "oblig": 229, "indemnifi": 229, "harmless": 229, "incur": 229, "assert": 229, "boilerpl": 229, "enclos": 229, "bracket": 229, "comment": 229, "easier": 229, "identif": 229, "archiv": 229, "2024": [229, 231], "complianc": 229, "govern": 229, "show": 230, "flexibl": 230, "goal": 230, "finit": 230, "condition": 230, "qccsw": 230, "excut": 230, "too": 230, "earli": 230, "facilit": 230, "travel": 230, "conditionalinstrucion": 230, "equaival": 230, "feedaback_kei": 230, "reset_qb2": 230, "set_qb3_to_1": 230, "cc_prx_qb4": 230, "2nd": [230, 231], "prx_qb3": 230, "prx_qb4": 230, "80e": [230, 232], "clariti": 230, "bottom": 230, "master": 230, "slave": 230, "compens": 230, "trigger_delai": 230, "explan": 230, "end_delai": 230, "spcecifi": 230, "trigger_mast": 230, "emit": 230, "daisi": 230, "central": 230, "cabl": 230, "eric": 231, "hyypp": 231, "\u00e4": 231, "antti": 231, "vep": 231, "inen": 231, "miha": 231, "papi": 231, "\u010d": 231, "chun": 231, "fai": 231, "chan": 231, "sinan": 231, "inel": 231, "alessandro": 231, "landra": 231, "wei": 231, "liu": 231, "\u00fc": 231, "rgen": 231, "luu": 231, "fabian": 231, "marxer": 231, "caspar": 231, "ockeloen": 231, "korppi": 231, "reduc": 231, "superconduct": 231, "processor": 231, "030353": 231, "doi": 231, "1103": 231, "prxquantum": 231, "john": 231, "martini": 231, "michael": 231, "geller": 231, "_z": 231, "phy": 231, "rev": 231, "022307": 231, "aug": 231, "2014": 231, "arxiv": 231, "1402": 231, "5467": 231, "physreva": 231, "lyon": 231, "digit": 231, "prentic": 231, "hall": 231, "edit": 231, "isbn": 231, "978": 231, "0131089891": 231, "cecilia": 231, "gisel": 231, "jarn": 231, "heurist": 231, "approach": 231, "anal": 231, "afa": 231, "29": 231, "51": 231, "57": 231, "2018": 231, "1703": 231, "06812": 231, "31527": 231, "analesafa": 231, "eyob": 231, "sete": 231, "nicola": 231, "didier": 231, "angela": 231, "chen": 231, "shobhan": 231, "kulshreshtha": 231, "riccardo": 231, "manenti": 231, "stefano": 231, "poletto": 231, "entangl": 231, "appl": 231, "024050": 231, "2021": 231, "2104": 231, "03511": 231, "physrevappli": 231, "youngkyu": 231, "sung": 231, "leon": 231, "ding": 231, "jochen": 231, "braum\u00fcller": 231, "veps\u00e4l\u00e4inen": 231, "bharath": 231, "kannan": 231, "morten": 231, "kjaergaard": 231, "ami": 231, "green": 231, "gabriel": 231, "o": 231, "samach": 231, "chri": 231, "mcnalli": 231, "david": 231, "kim": 231, "alexand": 231, "melvil": 231, "bethani": 231, "niedzielski": 231, "molli": 231, "schwartz": 231, "jonilyn": 231, "yoder": 231, "terri": 231, "orlando": 231, "simon": 231, "gustavsson": 231, "william": 231, "oliv": 231, "fidel": 231, "zz": 231, "021058": 231, "jun": 231, "2011": 231, "01261": 231, "physrevx": 231, "capabl": 232, "ask": 232, "recogn": 232, "cz_gate_impl": 232, "prx_gate_impl": 232, "measure_gate_impl": 232, "keyword": 232, "instanti": 232, "x180": 232, "y90": 232, "100e": 232, "p1": 232, "p2": 232, "handi": 232, "circuit3": 232, "word": 232, "slide": 232, "past": 232, "neighbour": 232, "neighbourhood": 232, "worri": 232, "advers": 232, "ruin": 232, "best": 232, "arrang": 232, "aid": 232, "discov": 232, "all_qubit": 232, "get_neighbor_locus_compon": 232, "160e": 232, "cz_schedul": 232, "forget": 232}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [127, 0, 0, "-", "playlist"], [194, 0, 0, "-", "quantum_ops"], [199, 0, 0, "-", "scheduler"], [207, 0, 0, "-", "timebox"], [212, 0, 0, "-", "utils"], [216, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "customizable_gates"], [18, 3, 1, "", "default_implementations"], [18, 4, 1, "", "optional_calibration_keys"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 3, 1, "", "_timebox_cache"], [20, 4, 1, "", "construct_factorizable"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 3, 1, "", "id"], [20, 4, 1, "", "may_have_calibration"], [20, 4, 1, "", "needs_calibration"], [20, 4, 1, "", "optional_calibration_keys"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "sub_implementations"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [58, 0, 0, "-", "default_gates"], [59, 0, 0, "-", "delay"], [62, 0, 0, "-", "enums"], [67, 1, 1, "", "expose_implementation"], [68, 0, 0, "-", "flux_multiplexer"], [71, 1, 1, "", "get_implementation_class"], [72, 0, 0, "-", "measure"], [81, 0, 0, "-", "move"], [89, 0, 0, "-", "prx"], [108, 1, 1, "", "register_implementation"], [109, 1, 1, "", "register_operation"], [110, 0, 0, "-", "reset"], [115, 0, 0, "-", "rz"], [122, 0, 0, "-", "sx"], [124, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "customizable_gates"], [37, 3, 1, "", "parameters"], [37, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_SmoothConstant"], [52, 2, 1, "", "FluxPulseGate_TGSS_CRF"], [53, 2, 1, "", "FluxPulse_SmoothConstant_SmoothConstant"], [54, 2, 1, "", "FluxPulse_SmoothConstant_coupler"], [55, 2, 1, "", "FluxPulse_SmoothConstant_qubit"], [56, 1, 1, "", "round_to_granularity"], [57, 1, 1, "", "split_flat_top_part_into_granular_parts"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "fall_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "rise_wave"], [51, 3, 1, "", "root_parameters"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[52, 3, 1, "", "coupler_wave"], [52, 3, 1, "", "parameters"], [52, 3, 1, "", "qubit_wave"], [52, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant": [[53, 3, 1, "", "coupler_wave"], [53, 3, 1, "", "fall_wave"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "qubit_wave"], [53, 3, 1, "", "rise_wave"], [53, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler": [[54, 3, 1, "", "coupler_wave"], [54, 3, 1, "", "fall_wave"], [54, 3, 1, "", "parameters"], [54, 3, 1, "", "qubit_wave"], [54, 3, 1, "", "rise_wave"], [54, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit": [[55, 3, 1, "", "coupler_wave"], [55, 3, 1, "", "fall_wave"], [55, 3, 1, "", "parameters"], [55, 3, 1, "", "qubit_wave"], [55, 3, 1, "", "rise_wave"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[60, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [61, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[61, 4, 1, "", "_call"], [61, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[63, 6, 1, "", "TWO_QUBIT_UNITARIES"], [64, 2, 1, "", "TwoQubitGate"], [65, 6, 1, "", "XYGATE_UNITARIES"], [66, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[64, 3, 1, "", "CZ"], [64, 3, 1, "", "ISWAP"], [64, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[69, 2, 1, "", "FluxMultiplexer_SampleLinear"], [70, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[69, 4, 1, "", "get_custom_locus_mapping"], [69, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[73, 2, 1, "", "Measure_Constant"], [74, 2, 1, "", "Measure_Constant_Qnd"], [75, 2, 1, "", "Measure_CustomWaveforms"], [76, 2, 1, "", "ProbePulse_CustomWaveforms"], [77, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [78, 2, 1, "", "Probe_Constant"], [79, 2, 1, "", "Shelved_Measure_Constant"], [80, 2, 1, "", "Shelved_Measure_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[73, 3, 1, "", "dependent_waves"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "wave_i"], [73, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[74, 3, 1, "", "dependent_waves"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "wave_i"], [74, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[75, 4, 1, "", "_build_instructions"], [75, 4, 1, "", "_call"], [75, 3, 1, "", "_multiplexed_timeboxes"], [75, 3, 1, "", "_time_traces"], [75, 3, 1, "", "dependent_waves"], [75, 4, 1, "", "duration_in_seconds"], [75, 4, 1, "", "get_locus_mapping_name"], [75, 4, 1, "", "probe_timebox"], [75, 3, 1, "", "root_parameters"], [75, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[76, 4, 1, "", "_build_instructions"], [76, 4, 1, "", "_call"], [76, 3, 1, "", "dependent_waves"], [76, 4, 1, "", "duration_in_seconds"], [76, 4, 1, "", "get_locus_mapping_name"], [76, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[77, 4, 1, "", "_build_instructions"], [77, 4, 1, "", "_call"], [77, 3, 1, "", "_multiplexed_timeboxes"], [77, 3, 1, "", "dependent_waves"], [77, 4, 1, "", "duration_in_seconds"], [77, 4, 1, "", "get_locus_mapping_name"], [77, 4, 1, "", "probe_timebox"], [77, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[78, 3, 1, "", "dependent_waves"], [78, 3, 1, "", "parameters"], [78, 3, 1, "", "wave_i"], [78, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_Constant": [[79, 3, 1, "", "dependent_waves"], [79, 3, 1, "", "parameters"], [79, 3, 1, "", "wave_i"], [79, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms": [[80, 4, 1, "", "_call"], [80, 3, 1, "", "dependent_waves"], [80, 4, 1, "", "probe_timebox"]], "iqm.pulse.gates.move": [[82, 2, 1, "", "MOVE_CRF_CRF"], [83, 2, 1, "", "MOVE_CustomWaveforms"], [84, 2, 1, "", "MOVE_SLEPIAN_CRF"], [85, 2, 1, "", "MOVE_TGSS_CRF"], [86, 2, 1, "", "MoveMarker"], [87, 1, 1, "", "apply_move_gate_phase_corrections"], [88, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[82, 3, 1, "", "coupler_wave"], [82, 3, 1, "", "parameters"], [82, 3, 1, "", "qubit_wave"], [82, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[83, 4, 1, "", "_call"], [83, 3, 1, "", "coupler_wave"], [83, 3, 1, "", "parameters"], [83, 3, 1, "", "qubit_wave"], [83, 3, 1, "", "root_parameters"], [83, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF": [[84, 3, 1, "", "coupler_wave"], [84, 3, 1, "", "parameters"], [84, 3, 1, "", "qubit_wave"], [84, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[85, 3, 1, "", "coupler_wave"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "qubit_wave"], [85, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[86, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[90, 2, 1, "", "ABC_Constant_smooth"], [91, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [92, 2, 1, "", "PRX_Cosine"], [93, 2, 1, "", "PRX_CustomWaveforms"], [94, 2, 1, "", "PRX_CustomWaveformsSX"], [95, 2, 1, "", "PRX_DRAGCosineRiseFall"], [96, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [97, 2, 1, "", "PRX_DRAGGaussian"], [98, 2, 1, "", "PRX_DRAGGaussianSX"], [99, 2, 1, "", "PRX_FastDrag"], [100, 2, 1, "", "PRX_FastDragSX"], [101, 2, 1, "", "PRX_HdDrag"], [102, 2, 1, "", "PRX_HdDragSX"], [103, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [104, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [105, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [106, 2, 1, "", "PrxGateImplementation"], [107, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[90, 4, 1, "", "_call"], [90, 4, 1, "", "_fall_pulse"], [90, 4, 1, "", "_main_pulse"], [90, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[91, 3, 1, "", "fall_waveform"], [91, 3, 1, "", "main_waveform"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "rise_waveform"], [91, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_Cosine": [[92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "wave_i"], [92, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[93, 4, 1, "", "_get_pulse"], [93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[94, 4, 1, "", "_call"], [94, 4, 1, "", "_get_pulse"], [94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[95, 4, 1, "", "_get_pulse"], [95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "excluded_parameters"], [95, 3, 1, "", "parameters"], [95, 3, 1, "", "wave_i"], [95, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[96, 4, 1, "", "_get_pulse"], [96, 3, 1, "", "dependent_waves"], [96, 3, 1, "", "excluded_parameters"], [96, 3, 1, "", "parameters"], [96, 3, 1, "", "wave_i"], [96, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[97, 3, 1, "", "dependent_waves"], [97, 3, 1, "", "parameters"], [97, 3, 1, "", "wave_i"], [97, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[98, 3, 1, "", "dependent_waves"], [98, 3, 1, "", "parameters"], [98, 3, 1, "", "wave_i"], [98, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[99, 3, 1, "", "dependent_waves"], [99, 3, 1, "", "parameters"], [99, 3, 1, "", "wave_i"], [99, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[100, 3, 1, "", "dependent_waves"], [100, 3, 1, "", "parameters"], [100, 3, 1, "", "wave_i"], [100, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[101, 3, 1, "", "dependent_waves"], [101, 3, 1, "", "parameters"], [101, 3, 1, "", "wave_i"], [101, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[102, 3, 1, "", "dependent_waves"], [102, 3, 1, "", "parameters"], [102, 3, 1, "", "wave_i"], [102, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[103, 4, 1, "", "_get_pulse"], [103, 3, 1, "", "dependent_waves"], [103, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[104, 4, 1, "", "_get_pulse"], [104, 3, 1, "", "dependent_waves"], [104, 3, 1, "", "excluded_parameters"], [104, 3, 1, "", "parameters"], [104, 3, 1, "", "wave_i"], [104, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[105, 4, 1, "", "_call"]], "iqm.pulse.gates.prx.PrxGateImplementation": [[106, 4, 1, "", "_call"], [106, 4, 1, "", "clifford"], [106, 4, 1, "", "get_locus_mapping_name"], [106, 4, 1, "", "rx"], [106, 4, 1, "", "ry"]], "iqm.pulse.gates.reset": [[111, 6, 1, "", "RESET_FEEDBACK_KEY"], [112, 6, 1, "", "RESET_MEASUREMENT_KEY"], [113, 2, 1, "", "Reset_Conditional"], [114, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[113, 4, 1, "", "_call"], [113, 3, 1, "", "customizable_gates"], [113, 4, 1, "", "get_locus_mapping_name"], [113, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[114, 4, 1, "", "_call"], [114, 4, 1, "", "duration_in_seconds"], [114, 4, 1, "", "get_custom_locus_mapping"], [114, 3, 1, "", "parameters"], [114, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[116, 2, 1, "", "RZ_ACStarkShift"], [117, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [118, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [119, 2, 1, "", "RZ_PRX_Composite"], [120, 2, 1, "", "RZ_Virtual"], [121, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[116, 4, 1, "", "_ac_stark_pulse"], [116, 4, 1, "", "_call"], [116, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[117, 3, 1, "", "ac_stark_waveform"], [117, 3, 1, "", "parameters"], [117, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[118, 3, 1, "", "fall_waveform"], [118, 3, 1, "", "main_waveform"], [118, 3, 1, "", "parameters"], [118, 3, 1, "", "rise_waveform"], [118, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[119, 3, 1, "", "customizable_gates"], [119, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[120, 4, 1, "", "_call"], [120, 4, 1, "", "duration_in_seconds"], [120, 4, 1, "", "get_locus_mapping_name"], [120, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[123, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[123, 4, 1, "", "_call"], [123, 3, 1, "", "customizable_gates"], [123, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[125, 2, 1, "", "UGate"], [126, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[125, 4, 1, "", "_call"], [125, 3, 1, "", "customizable_gates"], [125, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[128, 0, 0, "-", "channel"], [138, 0, 0, "-", "fast_drag"], [148, 0, 0, "-", "hd_drag"], [158, 0, 0, "-", "instructions"], [173, 0, 0, "-", "playlist"], [174, 0, 0, "-", "schedule"], [179, 0, 0, "-", "visualisation"], [182, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[129, 2, 1, "", "ChannelConfiguration"], [130, 2, 1, "", "ChannelDescription"], [131, 2, 1, "", "ChannelProperties"], [132, 2, 1, "", "IQChannelConfig"], [133, 2, 1, "", "ProbeChannelProperties"], [134, 2, 1, "", "RealChannelConfig"], [135, 1, 1, "", "get_channel_properties"], [136, 1, 1, "", "get_channel_properties_from_station_settings"], [137, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[130, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[131, 3, 1, "", "blocks_component"], [131, 3, 1, "", "compatible_instructions"], [131, 4, 1, "", "duration_to_int_samples"], [131, 4, 1, "", "duration_to_samples"], [131, 4, 1, "", "duration_to_seconds"], [131, 3, 1, "", "instruction_duration_granularity"], [131, 3, 1, "", "instruction_duration_min"], [131, 3, 1, "", "is_iq"], [131, 3, 1, "", "is_virtual"], [131, 4, 1, "", "round_duration_to_granularity"], [131, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[132, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[133, 3, 1, "", "center_frequency"], [133, 3, 1, "", "integration_start_dead_time"], [133, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[134, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[139, 2, 1, "", "FastDrag"], [140, 2, 1, "", "FastDragI"], [141, 2, 1, "", "FastDragQ"], [142, 2, 1, "", "SuppressedPulse"], [143, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [144, 1, 1, "", "evaluate_fast_drag_i_envelope"], [145, 1, 1, "", "evaluate_fast_drag_q_envelope"], [146, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [147, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[139, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[140, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[141, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[142, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[149, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [150, 2, 1, "", "HdDrag"], [151, 2, 1, "", "HdDragI"], [152, 2, 1, "", "HdDragQ"], [153, 1, 1, "", "evaluate_hd_drag_i_envelope"], [154, 1, 1, "", "evaluate_hd_drag_q_envelope"], [155, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [156, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [157, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[150, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[151, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[152, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[159, 2, 1, "", "AcquisitionMethod"], [160, 2, 1, "", "Block"], [161, 2, 1, "", "ComplexIntegration"], [162, 2, 1, "", "ConditionalInstruction"], [163, 2, 1, "", "FluxPulse"], [164, 2, 1, "", "IQPulse"], [165, 2, 1, "", "Instruction"], [166, 2, 1, "", "MultiplexedIQPulse"], [167, 2, 1, "", "ReadoutTrigger"], [168, 2, 1, "", "RealPulse"], [169, 2, 1, "", "ThresholdStateDiscrimination"], [170, 2, 1, "", "TimeTrace"], [171, 2, 1, "", "VirtualRZ"], [172, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[159, 3, 1, "", "delay_samples"], [159, 3, 1, "", "implementation"], [159, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[161, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[162, 3, 1, "", "condition"], [162, 4, 1, "", "get_child_instructions"], [162, 3, 1, "", "outcomes"], [162, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[163, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[164, 4, 1, "", "get_waveforms"], [164, 3, 1, "", "modulation_frequency"], [164, 3, 1, "", "phase"], [164, 3, 1, "", "phase_increment"], [164, 3, 1, "", "scale_i"], [164, 3, 1, "", "scale_q"], [164, 4, 1, "", "validate"], [164, 3, 1, "", "wave_i"], [164, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[165, 4, 1, "", "copy"], [165, 3, 1, "", "duration"], [165, 4, 1, "", "get_child_instructions"], [165, 4, 1, "", "get_waveforms"], [165, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[166, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[167, 3, 1, "", "acquisitions"], [167, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[168, 4, 1, "", "get_waveforms"], [168, 3, 1, "", "scale"], [168, 4, 1, "", "validate"], [168, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[169, 3, 1, "", "feedback_signal_label"], [169, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[170, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[171, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[175, 2, 1, "", "Nothing"], [176, 2, 1, "", "Schedule"], [177, 2, 1, "", "Segment"], [178, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[176, 4, 1, "", "add_channels"], [176, 4, 1, "", "append"], [176, 4, 1, "", "channels"], [176, 4, 1, "", "cleanup"], [176, 4, 1, "", "copy"], [176, 5, 1, "", "duration"], [176, 4, 1, "", "duration_in_seconds"], [176, 4, 1, "", "extend"], [176, 4, 1, "", "front_pad"], [176, 4, 1, "", "front_pad_in_seconds"], [176, 4, 1, "", "has_content_in"], [176, 4, 1, "", "items"], [176, 4, 1, "", "pad_to_hard_box"], [176, 4, 1, "", "pad_to_hard_box_in_seconds"], [176, 4, 1, "", "pprint"], [176, 4, 1, "", "reverse"], [176, 4, 1, "", "reverse_hard_box"], [176, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[177, 3, 1, "", "_duration"], [177, 3, 1, "", "_instructions"], [177, 4, 1, "", "append"], [177, 4, 1, "", "copy"], [177, 5, 1, "", "duration"], [177, 4, 1, "", "extend"], [177, 4, 1, "", "pop"], [177, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[180, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[181, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[183, 2, 1, "", "Chirp"], [184, 2, 1, "", "ChirpImag"], [185, 2, 1, "", "Cosine"], [186, 2, 1, "", "CosineFall"], [187, 2, 1, "", "CosineFallFlex"], [188, 2, 1, "", "CosineRise"], [189, 2, 1, "", "CosineRiseFallDerivative"], [190, 2, 1, "", "CosineRiseFlex"], [191, 2, 1, "", "ModulatedCosineRiseFall"], [192, 2, 1, "", "PolynomialCosine"], [193, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[183, 4, 1, "", "_sample"], [183, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[184, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[185, 4, 1, "", "_sample"], [185, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[186, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineFallFlex": [[187, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[188, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[189, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFlex": [[190, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[191, 4, 1, "", "_sample"], [191, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.PolynomialCosine": [[192, 4, 1, "", "_sample"], [192, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[193, 4, 1, "", "_sample"], [193, 4, 1, "", "_sample_normalized_slepian"], [193, 4, 1, "", "_t_tau"], [193, 4, 1, "", "_theta_tau"], [193, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[195, 2, 1, "", "QuantumOp"], [196, 6, 1, "", "QuantumOpTable"], [197, 1, 1, "", "validate_locus_calibration"], [198, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[195, 3, 1, "", "arity"], [195, 4, 1, "", "copy"], [195, 5, 1, "", "default_implementation"], [195, 3, 1, "", "defaults_for_locus"], [195, 3, 1, "", "factorizable"], [195, 4, 1, "", "get_default_implementation_for_locus"], [195, 3, 1, "", "implementations"], [195, 3, 1, "", "name"], [195, 3, 1, "", "params"], [195, 4, 1, "", "set_default_implementation"], [195, 4, 1, "", "set_default_implementation_for_locus"], [195, 3, 1, "", "symmetric"], [195, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[200, 6, 1, "", "BLOCKING"], [201, 6, 1, "", "NONSOLID"], [202, 2, 1, "", "SegmentPointer"], [203, 1, 1, "", "extend_hard_boundary"], [204, 1, 1, "", "extend_hard_boundary_in_seconds"], [205, 1, 1, "", "extend_schedule"], [206, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[202, 3, 1, "", "TOL"], [202, 4, 1, "", "cut_tail"], [202, 4, 1, "", "fastforward"], [202, 3, 1, "", "frac"], [202, 4, 1, "", "get"], [202, 3, 1, "", "idx"], [202, 4, 1, "", "next"], [202, 5, 1, "", "remainder"], [202, 4, 1, "", "rewind"], [202, 3, 1, "", "source"], [202, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[208, 2, 1, "", "MultiplexedProbeTimeBox"], [209, 2, 1, "", "SchedulingAlgorithm"], [210, 2, 1, "", "SchedulingStrategy"], [211, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[208, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[209, 3, 1, "", "HARD_BOUNDARY"], [209, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[210, 3, 1, "", "ALAP"], [210, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[211, 3, 1, "", "atom"], [211, 4, 1, "", "atomic"], [211, 3, 1, "", "children"], [211, 4, 1, "", "composite"], [211, 3, 1, "", "label"], [211, 3, 1, "", "locus_components"], [211, 3, 1, "", "neighborhood_components"], [211, 4, 1, "", "print"], [211, 3, 1, "", "scheduling"], [211, 3, 1, "", "scheduling_algorithm"], [211, 4, 1, "", "set_alap"], [211, 4, 1, "", "set_asap"], [211, 4, 1, "", "validate"]], "iqm.pulse.utils": [[213, 1, 1, "", "map_waveform_param_types"], [214, 1, 1, "", "normalize_angle"], [215, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[217, 2, 1, "", "AWGScheduleValidationData"], [218, 7, 1, "", "AWGScheduleValidationError"], [219, 7, 1, "", "InvalidInstructionError"], [220, 7, 1, "", "PlaylistValidationError"], [221, 1, 1, "", "validate_awg_and_schedule_compatibility"], [222, 1, 1, "", "validate_channel"], [223, 1, 1, "", "validate_instruction_and_wf_length"], [224, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 226, 231], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 56, 57, 60, 63, 65, 67, 70, 71, 87, 88, 107, 108, 109, 111, 112, 121, 126, 135, 136, 137, 143, 144, 145, 146, 147, 149, 153, 154, 155, 156, 157, 178, 181, 196, 197, 198, 200, 201, 203, 204, 205, 206, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 228, 230], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 56, 57, 60, 63, 65, 67, 70, 71, 87, 88, 107, 108, 109, 111, 112, 121, 126, 135, 136, 137, 143, 144, 145, 146, 147, 149, 153, 154, 155, 156, 157, 178, 181, 196, 197, 198, 200, 201, 203, 204, 205, 206, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 228], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 232], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 226, 227], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 56, 57, 60, 63, 65, 67, 70, 71, 87, 88, 107, 108, 109, 111, 112, 121, 126, 227], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": [40, 56, 57], "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_smoothconst": 51, "fluxpulsegate_tgss_crf": 52, "fluxpulse_smoothconstant_smoothconst": 53, "fluxpulse_smoothconstant_coupl": 54, "fluxpulse_smoothconstant_qubit": 55, "round_to_granular": 56, "split_flat_top_part_into_granular_part": 57, "default_g": 58, "delai": [59, 60, 61], "delay_max_duration_second": 60, "enum": [62, 63, 65], "two_qubit_unitari": 63, "twoqubitg": 64, "xygate_unitari": 65, "xygat": 66, "expose_implement": 67, "flux_multiplex": [68, 70], "fluxmultiplexer_samplelinear": 69, "toler": [70, 178], "get_implementation_class": 71, "measur": [72, 230], "measure_const": 73, "measure_constant_qnd": 74, "measure_customwaveform": 75, "probepulse_customwaveform": 76, "probepulse_customwaveforms_nointegr": 77, "probe_const": 78, "shelved_measure_const": 79, "shelved_measure_customwaveform": 80, "move": [81, 87, 88], "move_crf_crf": 82, "move_customwaveform": 83, "move_slepian_crf": 84, "move_tgss_crf": 85, "movemark": 86, "apply_move_gate_phase_correct": 87, "validate_move_instruct": 88, "prx": [89, 107], "abc_constant_smooth": 90, "constant_prx_with_smooth_rise_fal": 91, "prx_cosin": 92, "prx_customwaveform": 93, "prx_customwaveformssx": 94, "prx_dragcosinerisefal": 95, "prx_dragcosinerisefallsx": 96, "prx_draggaussian": 97, "prx_draggaussiansx": 98, "prx_fastdrag": 99, "prx_fastdragsx": 100, "prx_hddrag": 101, "prx_hddragsx": 102, "prx_modulatedcustomwaveform": 103, "prx_modulateddragcosinerisefal": 104, "prx_singlepulse_gateimplement": 105, "prxgateimplement": 106, "get_unitary_prx": 107, "register_implement": 108, "register_oper": 109, "reset": [110, 111, 112], "reset_feedback_kei": 111, "reset_measurement_kei": 112, "reset_condit": 113, "reset_wait": 114, "rz": [115, 121], "rz_acstarkshift": 116, "rz_acstarkshift_cosinerisefal": 117, "rz_acstarkshift_smoothconst": 118, "rz_prx_composit": 119, "rz_virtual": 120, "get_unitary_rz": 121, "sx": 122, "sxgate": 123, "u": [124, 126], "ugat": 125, "get_unitary_u": 126, "playlist": [127, 135, 136, 137, 143, 144, 145, 146, 147, 149, 153, 154, 155, 156, 157, 173, 178, 181, 226], "channel": [128, 135, 136, 137], "channelconfigur": 129, "channeldescript": 130, "channelproperti": 131, "iqchannelconfig": 132, "probechannelproperti": 133, "realchannelconfig": 134, "get_channel_properti": 135, "get_channel_properties_from_station_set": 136, "round_duration_to_granularity_sampl": 137, "fast_drag": [138, 143, 144, 145, 146, 147], "fastdrag": 139, "fastdragi": 140, "fastdragq": 141, "suppressedpuls": 142, "compute_matrix_of_summed_fourier_transform_inner_product": 143, "evaluate_fast_drag_i_envelop": 144, "evaluate_fast_drag_q_envelop": 145, "fourier_transform_of_cos_basis_functions_as_tensor": 146, "solve_fast_coefficients_for_given_weights_and_rang": 147, "hd_drag": [148, 149, 153, 154, 155, 156, 157], "cosine_coefficients_dict": 149, "hddrag": 150, "hddragi": 151, "hddragq": 152, "evaluate_hd_drag_i_envelop": 153, "evaluate_hd_drag_q_envelop": 154, "evaluate_nth_derivative_of_basis_envelop": 155, "solve_cosine_coefs_for_hd_drag": 156, "solve_hd_drag_coefficients_from_suppressed_frequ": 157, "instruct": [158, 165, 226, 227], "acquisitionmethod": 159, "block": [160, 200], "complexintegr": 161, "conditionalinstruct": 162, "fluxpuls": 163, "iqpuls": 164, "multiplexediqpuls": 166, "readouttrigg": [167, 230], "realpuls": 168, "thresholdstatediscrimin": 169, "timetrac": 170, "virtualrz": 171, "wait": 172, "schedul": [174, 176, 178, 199, 200, 201, 203, 204, 205, 206, 226, 232], "noth": 175, "segment": 177, "visualis": [179, 181], "base": [180, 181, 227], "inspect_playlist": 181, "waveform": [182, 227], "chirp": 183, "chirpimag": 184, "cosin": 185, "cosinefal": 186, "cosinefallflex": 187, "cosineris": 188, "cosinerisefallderiv": 189, "cosineriseflex": 190, "modulatedcosinerisefal": 191, "polynomialcosin": 192, "slepian": 193, "quantum_op": [194, 196, 197, 198], "quantumop": [195, 226, 227], "quantumopt": 196, "validate_locus_calibr": 197, "validate_op_calibr": 198, "nonsolid": 201, "segmentpoint": 202, "extend_hard_boundari": 203, "extend_hard_boundary_in_second": 204, "extend_schedul": 205, "extend_schedule_new": 206, "timebox": [207, 211, 226, 232], "multiplexedprobetimebox": 208, "schedulingalgorithm": 209, "schedulingstrategi": 210, "util": [212, 213, 214, 215], "map_waveform_param_typ": 213, "normalize_angl": 214, "phase_transform": 215, "valid": [216, 218, 219, 220, 221, 222, 223, 224], "awgschedulevalidationdata": 217, "awgschedulevalidationerror": 218, "invalidinstructionerror": 219, "playlistvalidationerror": 220, "validate_awg_and_schedule_compat": 221, "validate_channel": 222, "validate_instruction_and_wf_length": 223, "validate_playlist_compat": 224, "changelog": 225, "version": 225, "11": 225, "1": 225, "0": 225, "2025": 225, "09": 225, "08": 225, "featur": [225, 232], "10": 225, "5": 225, "03": 225, "4": 225, "12": 225, "3": 225, "2": 225, "07": 225, "18": 225, "bug": 225, "fix": 225, "16": 225, "break": 225, "chang": 225, "9": 225, "21": 225, "20": 225, "19": 225, "02": 225, "17": 225, "01": 225, "15": 225, "06": 225, "14": 225, "13": 225, "05": 225, "30": 225, "28": 225, "8": 225, "7": 225, "04": 225, "6": 225, "25": 225, "22": 225, "27": 225, "26": 225, "24": 225, "23": 225, "2024": 225, "29": 225, "31": 225, "concept": 226, "class": [226, 227], "quick": 226, "custom": 227, "implement": 227, "calibr": 227, "data": 227, "more": 227, "regist": 227, "content": 228, "indic": 228, "tabl": 228, "licens": 229, "time": 230, "fast": 230, "feedback": 230, "us": 232, "creat": 232, "compos": 232, "resolv": 232, "miscellan": 232, "common": 232, "pitfal": 232}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Delay": [[61, "delay"]], "FluxPulse_SmoothConstant_coupler": [[54, "fluxpulse-smoothconstant-coupler"]], "TwoQubitGate": [[64, "twoqubitgate"]], "flux_multiplexer": [[68, "module-iqm.pulse.gates.flux_multiplexer"]], "XYGate": [[66, "xygate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulse_SmoothConstant_qubit": [[55, "fluxpulse-smoothconstant-qubit"]], "iqm.pulse.gates.expose_implementation": [[67, "iqm-pulse-gates-expose-implementation"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "default_gates": [[58, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[60, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "enums": [[62, "module-iqm.pulse.gates.enums"]], "FluxPulse_SmoothConstant_SmoothConstant": [[53, "fluxpulse-smoothconstant-smoothconstant"]], "iqm.pulse.gates.cz.round_to_granularity": [[56, "iqm-pulse-gates-cz-round-to-granularity"]], "iqm.pulse.gates.get_implementation_class": [[71, "iqm-pulse-gates-get-implementation-class"]], "FluxPulseGate_TGSS_CRF": [[52, "fluxpulsegate-tgss-crf"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[63, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "FluxPulseGate_SmoothConstant": [[51, "fluxpulsegate-smoothconstant"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[65, "iqm-pulse-gates-enums-xygate-unitaries"]], "FluxMultiplexer_SampleLinear": [[69, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[70, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts": [[57, "iqm-pulse-gates-cz-split-flat-top-part-into-granular-parts"]], "delay": [[59, "module-iqm.pulse.gates.delay"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "Barrier": [[35, "barrier"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "CZ_Slepian": [[44, "cz-slepian"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CZ_CRF": [[41, "cz-crf"]], "builder": [[4, "module-iqm.pulse.builder"]], "GateImplementation": [[20, "gateimplementation"]], "CompositeGate": [[18, "compositegate"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "pulse": [[1, "module-iqm.pulse"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "API reference": [[0, "api-reference"]], "CompositeCache": [[17, "compositecache"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "CircuitOperation": [[5, "circuitoperation"]], "iqm.pulse.validation.InvalidInstructionError": [[219, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[223, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "License": [[229, "license"]], "IQM Pulse": [[228, "iqm-pulse"]], "Contents": [[228, "contents"]], "Indices and tables": [[228, "indices-and-tables"]], "iqm.pulse.validation.AWGScheduleValidationError": [[218, "iqm-pulse-validation-awgschedulevalidationerror"]], "Using ScheduleBuilder": [[232, "using-schedulebuilder"]], "Creating TimeBoxes": [[232, "creating-timeboxes"]], "Composing TimeBoxes": [[232, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[232, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[232, "miscellaneous-features"]], "Common pitfalls": [[232, "common-pitfalls"]], "Custom gate implementations": [[227, "custom-gate-implementations"], [227, "id1"]], "QuantumOp": [[227, "quantumop"], [195, "quantumop"]], "GateImplementation class": [[227, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[227, "instructions-waveforms-and-calibration-data"]], "More base classes": [[227, "more-base-classes"]], "Registering gates and implementations": [[227, "registering-gates-and-implementations"]], "Concepts and classes": [[226, "concepts-and-classes"]], "Quick reference": [[226, "quick-reference"]], "Instructions": [[226, "instructions"]], "Schedules": [[226, "schedules"]], "TimeBoxes": [[226, "timeboxes"]], "QuantumOps": [[226, "quantumops"]], "GateImplementations": [[226, "gateimplementations"]], "Playlists": [[226, "playlists"]], "AWGScheduleValidationData": [[217, "awgschedulevalidationdata"]], "Changelog": [[225, "changelog"]], "Version 11.1.0 (2025-09-08)": [[225, "version-11-1-0-2025-09-08"]], "Features": [[225, "features"], [225, "id1"], [225, "id2"], [225, "id3"], [225, "id6"], [225, "id7"], [225, "id9"], [225, "id10"], [225, "id11"], [225, "id12"], [225, "id15"], [225, "id16"], [225, "id17"], [225, "id18"], [225, "id19"], [225, "id21"], [225, "id22"], [225, "id23"], [225, "id24"], [225, "id25"], [225, "id28"], [225, "id30"], [225, "id32"], [225, "id33"], [225, "id34"], [225, "id35"], [225, "id36"], [225, "id37"], [225, "id38"], [225, "id40"], [225, "id42"], [225, "id44"], [225, "id45"], [225, "id46"], [225, "id47"], [225, "id48"], [225, "id50"], [225, "id51"], [225, "id52"], [225, "id55"], [225, "id56"], [225, "id57"], [225, "id58"], [225, "id59"], [225, "id60"], [225, "id61"], [225, "id62"], [225, "id63"], [225, "id64"], [225, "id66"], [225, "id67"], [225, "id68"], [225, "id70"], [225, "id72"], [225, "id73"], [225, "id74"], [225, "id78"], [225, "id80"], [225, "id83"], [225, "id85"], [225, "id86"], [225, "id88"], [225, "id91"], [225, "id94"], [225, "id96"], [225, "id97"], [225, "id98"], [225, "id99"], [225, "id100"], [225, "id101"], [225, "id102"], [225, "id104"], [225, "id105"], [225, "id106"], [225, "id107"], [225, "id108"], [225, "id109"], [225, "id110"], [225, "id111"], [225, "id112"], [225, "id113"], [225, "id115"], [225, "id116"], [225, "id118"], [225, "id119"], [225, "id120"]], "Version 11.0.0 (2025-09-08)": [[225, "version-11-0-0-2025-09-08"]], "Version 10.5.0 (2025-09-03)": [[225, "version-10-5-0-2025-09-03"]], "Version 10.4.0 (2025-08-12)": [[225, "version-10-4-0-2025-08-12"]], "Version 10.3.0 (2025-08-11)": [[225, "version-10-3-0-2025-08-11"]], "Feature": [[225, "feature"], [225, "id31"]], "Version 10.2.0 (2025-08-08)": [[225, "version-10-2-0-2025-08-08"]], "Version 10.1.0 (2025-07-18)": [[225, "version-10-1-0-2025-07-18"]], "Bug Fixes": [[225, "bug-fixes"], [225, "id49"]], "Version 10.0.0 (2025-07-16)": [[225, "version-10-0-0-2025-07-16"]], "Breaking changes": [[225, "breaking-changes"], [225, "id29"], [225, "id69"], [225, "id84"], [225, "id93"], [225, "id95"], [225, "id103"], [225, "id117"]], "Version 9.21.0 (2025-07-10)": [[225, "version-9-21-0-2025-07-10"]], "Bug fixes": [[225, "id8"], [225, "id13"], [225, "id14"], [225, "id20"], [225, "id26"], [225, "id27"], [225, "id39"], [225, "id43"], [225, "id53"], [225, "id71"], [225, "id75"], [225, "id76"], [225, "id77"], [225, "id79"], [225, "id81"], [225, "id82"], [225, "id87"], [225, "id89"], [225, "id90"], [225, "id92"], [225, "id114"]], "Version 9.20.0 (2025-07-09)": [[225, "version-9-20-0-2025-07-09"]], "Version 9.19.0 (2025-07-08)": [[225, "version-9-19-0-2025-07-08"]], "Version 9.18.0 (2025-07-02)": [[225, "version-9-18-0-2025-07-02"]], "Version 9.17.0 (2025-07-01)": [[225, "version-9-17-0-2025-07-01"]], "Version 9.16.0 (2025-07-01)": [[225, "version-9-16-0-2025-07-01"]], "Version 9.15.0 (2025-06-17)": [[225, "version-9-15-0-2025-06-17"]], "Version 9.14.0 (2025-06-13)": [[225, "version-9-14-0-2025-06-13"]], "Version 9.13.0 (2025-06-11)": [[225, "version-9-13-0-2025-06-11"]], "Version 9.12.0 (2025-05-30)": [[225, "version-9-12-0-2025-05-30"]], "Version 9.11.0 (2025-05-28)": [[225, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[225, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[225, "version-9-9-0-2025-05-19"]], "Version 9.8.0 (2025-05-12)": [[225, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[225, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[225, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[225, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[225, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[225, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[225, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[225, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[225, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[225, "version-9-0-0-2025-04-09"]], "Version 8.13.0 (2025-04-07)": [[225, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[225, "version-8-12-0-2025-04-03"]], "Version 8.11.0 (2025-04-02)": [[225, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[225, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[225, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[225, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[225, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[225, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[225, "version-8-5-0-2025-03-26"]], "Bug fix": [[225, "bug-fix"], [225, "id41"], [225, "id54"], [225, "id65"]], "Version 8.4.0 (2025-03-21)": [[225, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[225, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[225, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[225, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[225, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[225, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[225, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[225, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[225, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[225, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[225, "version-7-19-0-2025-02-04"]], "Version 7.18.0 (2025-02-04)": [[225, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[225, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[225, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[225, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[225, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[225, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[225, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[225, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[225, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[225, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[225, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[225, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[225, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[225, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[225, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[225, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[225, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[225, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[225, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[225, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[225, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[225, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[225, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[225, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[225, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[225, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[225, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[225, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[225, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[225, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[225, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[225, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[225, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[225, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[225, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[225, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[225, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[225, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[225, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[225, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[225, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[225, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[225, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[225, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[225, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[225, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[225, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[225, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[225, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[225, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[225, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[225, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[225, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[225, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[225, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[225, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[225, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[225, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[225, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[225, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[225, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[225, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[225, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[225, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[225, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[225, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[225, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[225, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[225, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[225, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[225, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[225, "version-1-0-2024-07-01"]], "iqm.pulse.validation.PlaylistValidationError": [[220, "iqm-pulse-validation-playlistvalidationerror"]], "References": [[231, "references"]], "iqm.pulse.validation.validate_playlist_compatibility": [[224, "iqm-pulse-validation-validate-playlist-compatibility"]], "iqm.pulse.validation.validate_channel": [[222, "iqm-pulse-validation-validate-channel"]], "Pulse timing": [[230, "pulse-timing"]], "Measure and ReadoutTrigger": [[230, "measure-and-readouttrigger"]], "Fast feedback timing": [[230, "fast-feedback-timing"]], "validation": [[216, "module-iqm.pulse.validation"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[221, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "Constant_PRX_with_smooth_rise_fall": [[91, "constant-prx-with-smooth-rise-fall"]], "PRX_Cosine": [[92, "prx-cosine"]], "Shelved_Measure_CustomWaveforms": [[80, "shelved-measure-customwaveforms"]], "iqm.pulse.gates.move.validate_move_instructions": [[88, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[89, "module-iqm.pulse.gates.prx"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[87, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "ProbePulse_CustomWaveforms_noIntegration": [[77, "probepulse-customwaveforms-nointegration"]], "MoveMarker": [[86, "movemarker"]], "measure": [[72, "module-iqm.pulse.gates.measure"]], "PRX_DRAGCosineRiseFall": [[95, "prx-dragcosinerisefall"]], "Measure_Constant_Qnd": [[74, "measure-constant-qnd"]], "ABC_Constant_smooth": [[90, "abc-constant-smooth"]], "Measure_Constant": [[73, "measure-constant"]], "ProbePulse_CustomWaveforms": [[76, "probepulse-customwaveforms"]], "Shelved_Measure_Constant": [[79, "shelved-measure-constant"]], "MOVE_CustomWaveforms": [[83, "move-customwaveforms"]], "Probe_Constant": [[78, "probe-constant"]], "Measure_CustomWaveforms": [[75, "measure-customwaveforms"]], "PRX_CustomWaveforms": [[93, "prx-customwaveforms"]], "MOVE_TGSS_CRF": [[85, "move-tgss-crf"]], "MOVE_CRF_CRF": [[82, "move-crf-crf"]], "move": [[81, "module-iqm.pulse.gates.move"]], "PRX_CustomWaveformsSX": [[94, "prx-customwaveformssx"]], "MOVE_SLEPIAN_CRF": [[84, "move-slepian-crf"]], "iqm.pulse.utils.map_waveform_param_types": [[213, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.scheduler.extend_schedule": [[205, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.utils.normalize_angle": [[214, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.scheduler.extend_schedule_new": [[206, "iqm-pulse-scheduler-extend-schedule-new"]], "scheduler": [[199, "module-iqm.pulse.scheduler"]], "SchedulingAlgorithm": [[209, "schedulingalgorithm"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[196, "iqm-pulse-quantum-ops-quantumoptable"]], "PolynomialCosine": [[192, "polynomialcosine"]], "utils": [[212, "module-iqm.pulse.utils"]], "quantum_ops": [[194, "module-iqm.pulse.quantum_ops"]], "MultiplexedProbeTimeBox": [[208, "multiplexedprobetimebox"]], "TimeBox": [[211, "timebox"]], "SegmentPointer": [[202, "segmentpointer"]], "timebox": [[207, "module-iqm.pulse.timebox"]], "iqm.pulse.scheduler.BLOCKING": [[200, "iqm-pulse-scheduler-blocking"]], "SchedulingStrategy": [[210, "schedulingstrategy"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[197, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.utils.phase_transformation": [[215, "iqm-pulse-utils-phase-transformation"]], "iqm.pulse.scheduler.NONSOLID": [[201, "iqm-pulse-scheduler-nonsolid"]], "Slepian": [[193, "slepian"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[204, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_hard_boundary": [[203, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[198, "iqm-pulse-quantum-ops-validate-op-calibration"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[153, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[157, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[145, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "ConditionalInstruction": [[162, "conditionalinstruction"]], "instructions": [[158, "module-iqm.pulse.playlist.instructions"]], "IQPulse": [[164, "iqpulse"]], "hd_drag": [[148, "module-iqm.pulse.playlist.hd_drag"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[146, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "ReadoutTrigger": [[167, "readouttrigger"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[144, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "HdDrag": [[150, "hddrag"]], "HdDragI": [[151, "hddragi"]], "HdDragQ": [[152, "hddragq"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[156, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[147, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "Block": [[160, "block"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[155, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "FluxPulse": [[163, "fluxpulse"]], "MultiplexedIQPulse": [[166, "multiplexediqpulse"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[154, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[149, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "AcquisitionMethod": [[159, "acquisitionmethod"]], "Instruction": [[165, "instruction"]], "ComplexIntegration": [[161, "complexintegration"]], "schedule": [[174, "module-iqm.pulse.playlist.schedule"]], "base": [[180, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[181, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "Wait": [[172, "wait"]], "Schedule": [[176, "schedule"]], "waveforms": [[182, "module-iqm.pulse.playlist.waveforms"]], "TimeTrace": [[170, "timetrace"]], "CosineFall": [[186, "cosinefall"]], "Nothing": [[175, "nothing"]], "RealPulse": [[168, "realpulse"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[178, "iqm-pulse-playlist-schedule-tolerance"]], "CosineRiseFlex": [[190, "cosineriseflex"]], "VirtualRZ": [[171, "virtualrz"]], "CosineRiseFallDerivative": [[189, "cosinerisefallderivative"]], "Chirp": [[183, "chirp"]], "ThresholdStateDiscrimination": [[169, "thresholdstatediscrimination"]], "visualisation": [[179, "module-iqm.pulse.playlist.visualisation"]], "Segment": [[177, "segment"]], "Cosine": [[185, "cosine"]], "playlist": [[173, "module-iqm.pulse.playlist.playlist"], [127, "module-iqm.pulse.playlist"]], "ModulatedCosineRiseFall": [[191, "modulatedcosinerisefall"]], "ChirpImag": [[184, "chirpimag"]], "CosineRise": [[188, "cosinerise"]], "CosineFallFlex": [[187, "cosinefallflex"]], "SXGate": [[123, "sxgate"]], "ChannelProperties": [[131, "channelproperties"]], "FastDragI": [[140, "fastdragi"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[137, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "FastDrag": [[139, "fastdrag"]], "ProbeChannelProperties": [[133, "probechannelproperties"]], "IQChannelConfig": [[132, "iqchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[135, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.gates.u.get_unitary_u": [[126, "iqm-pulse-gates-u-get-unitary-u"]], "ChannelConfiguration": [[129, "channelconfiguration"]], "SuppressedPulse": [[142, "suppressedpulse"]], "RZ_Virtual": [[120, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[121, "iqm-pulse-gates-rz-get-unitary-rz"]], "UGate": [[125, "ugate"]], "ChannelDescription": [[130, "channeldescription"]], "sx": [[122, "module-iqm.pulse.gates.sx"]], "channel": [[128, "module-iqm.pulse.playlist.channel"]], "u": [[124, "module-iqm.pulse.gates.u"]], "RealChannelConfig": [[134, "realchannelconfig"]], "fast_drag": [[138, "module-iqm.pulse.playlist.fast_drag"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[143, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "FastDragQ": [[141, "fastdragq"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[136, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "Reset_Wait": [[114, "reset-wait"]], "PRX_HdDragSX": [[102, "prx-hddragsx"]], "PRX_FastDrag": [[99, "prx-fastdrag"]], "PRX_DRAGCosineRiseFallSX": [[96, "prx-dragcosinerisefallsx"]], "PrxGateImplementation": [[106, "prxgateimplementation"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[111, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.register_implementation": [[108, "iqm-pulse-gates-register-implementation"]], "PRX_FastDragSX": [[100, "prx-fastdragsx"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[112, "iqm-pulse-gates-reset-reset-measurement-key"]], "PRX_DRAGGaussianSX": [[98, "prx-draggaussiansx"]], "rz": [[115, "module-iqm.pulse.gates.rz"]], "PRX_HdDrag": [[101, "prx-hddrag"]], "PRX_SinglePulse_GateImplementation": [[105, "prx-singlepulse-gateimplementation"]], "reset": [[110, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.prx.get_unitary_prx": [[107, "iqm-pulse-gates-prx-get-unitary-prx"]], "PRX_ModulatedCustomWaveForms": [[103, "prx-modulatedcustomwaveforms"]], "iqm.pulse.gates.register_operation": [[109, "iqm-pulse-gates-register-operation"]], "PRX_ModulatedDRAGCosineRiseFall": [[104, "prx-modulateddragcosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[118, "rz-acstarkshift-smoothconstant"]], "PRX_DRAGGaussian": [[97, "prx-draggaussian"]], "RZ_PRX_Composite": [[119, "rz-prx-composite"]], "RZ_ACStarkShift": [[116, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[117, "rz-acstarkshift-cosinerisefall"]], "Reset_Conditional": [[113, "reset-conditional"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [58, "module-iqm.pulse.gates.default_gates"], [59, "module-iqm.pulse.gates.delay"], [62, "module-iqm.pulse.gates.enums"], [68, "module-iqm.pulse.gates.flux_multiplexer"], [72, "module-iqm.pulse.gates.measure"], [81, "module-iqm.pulse.gates.move"], [89, "module-iqm.pulse.gates.prx"], [110, "module-iqm.pulse.gates.reset"], [115, "module-iqm.pulse.gates.rz"], [122, "module-iqm.pulse.gates.sx"], [124, "module-iqm.pulse.gates.u"], [127, "module-iqm.pulse.playlist"], [128, "module-iqm.pulse.playlist.channel"], [138, "module-iqm.pulse.playlist.fast_drag"], [148, "module-iqm.pulse.playlist.hd_drag"], [158, "module-iqm.pulse.playlist.instructions"], [173, "module-iqm.pulse.playlist.playlist"], [174, "module-iqm.pulse.playlist.schedule"], [179, "module-iqm.pulse.playlist.visualisation"], [180, "module-iqm.pulse.playlist.visualisation.base"], [182, "module-iqm.pulse.playlist.waveforms"], [194, "module-iqm.pulse.quantum_ops"], [199, "module-iqm.pulse.scheduler"], [207, "module-iqm.pulse.timebox"], [212, "module-iqm.pulse.utils"], [216, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "customizable_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.customizable_gates"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.compositegate class method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.optional_calibration_keys"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "_timebox_cache (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation._timebox_cache"]], "construct_factorizable() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.construct_factorizable"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "id (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.id"]], "may_have_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.may_have_calibration"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.optional_calibration_keys"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "sub_implementations (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.sub_implementations"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate class method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "customizable_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.customizable_gates"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "registered_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.registered_gates"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_smoothconstant (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.rise_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.root_parameters"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_smoothconstant attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_SmoothConstant.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[52, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "fluxpulse_smoothconstant_smoothconstant (class in iqm.pulse.gates.cz)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_smoothconstant attribute)": [[53, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_SmoothConstant.symmetric"]], "fluxpulse_smoothconstant_coupler (class in iqm.pulse.gates.cz)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_coupler attribute)": [[54, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_coupler.symmetric"]], "fluxpulse_smoothconstant_qubit (class in iqm.pulse.gates.cz)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.coupler_wave"]], "fall_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.fall_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.qubit_wave"]], "rise_wave (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.rise_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulse_smoothconstant_qubit attribute)": [[55, "iqm.pulse.gates.cz.FluxPulse_SmoothConstant_qubit.symmetric"]], "round_to_granularity() (in module iqm.pulse.gates.cz)": [[56, "iqm.pulse.gates.cz.round_to_granularity"]], "split_flat_top_part_into_granular_parts() (in module iqm.pulse.gates.cz)": [[57, "iqm.pulse.gates.cz.split_flat_top_part_into_granular_parts"]], "iqm.pulse.gates.default_gates": [[58, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[59, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[60, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[61, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[61, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[61, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[62, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[63, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[64, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[64, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[64, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[64, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[65, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[66, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[67, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[68, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[69, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[69, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[69, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[70, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[71, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[72, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[73, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[74, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[74, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[75, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[76, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[77, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[78, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[78, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[78, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[78, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[78, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "shelved_measure_constant (class in iqm.pulse.gates.measure)": [[79, "iqm.pulse.gates.measure.Shelved_Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[79, "iqm.pulse.gates.measure.Shelved_Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[79, "iqm.pulse.gates.measure.Shelved_Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[79, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[79, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_q"]], "shelved_measure_customwaveforms (class in iqm.pulse.gates.measure)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms"]], "_call() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_customwaveforms attribute)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.dependent_waves"]], "probe_timebox() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[80, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.probe_timebox"]], "iqm.pulse.gates.move": [[81, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[82, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[82, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[82, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[82, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[82, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[83, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_slepian_crf (class in iqm.pulse.gates.move)": [[84, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[84, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_slepian_crf attribute)": [[84, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[84, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_slepian_crf attribute)": [[84, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[85, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[85, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[86, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[86, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[87, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[88, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[89, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[90, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[90, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[90, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[90, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[91, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_cosine (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_Cosine"]], "dependent_waves (iqm.pulse.gates.prx.prx_cosine attribute)": [[92, "iqm.pulse.gates.prx.PRX_Cosine.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_cosine attribute)": [[92, "iqm.pulse.gates.prx.PRX_Cosine.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_cosine attribute)": [[92, "iqm.pulse.gates.prx.PRX_Cosine.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_cosine attribute)": [[92, "iqm.pulse.gates.prx.PRX_Cosine.wave_q"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[93, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[93, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[93, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[94, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[96, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[97, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[98, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[99, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[99, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[99, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[99, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[99, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[100, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[100, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[101, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[101, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[101, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[101, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[101, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[102, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[102, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[103, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[103, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[103, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[103, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[104, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[105, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[105, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "prxgateimplementation (class in iqm.pulse.gates.prx)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation"]], "_call() (iqm.pulse.gates.prx.prxgateimplementation method)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prxgateimplementation method)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prxgateimplementation class method)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prxgateimplementation method)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prxgateimplementation method)": [[106, "iqm.pulse.gates.prx.PrxGateImplementation.ry"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[107, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[108, "iqm.pulse.gates.register_implementation"]], "register_operation() (in module iqm.pulse.gates)": [[109, "iqm.pulse.gates.register_operation"]], "iqm.pulse.gates.reset": [[110, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[111, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[112, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[113, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[113, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "customizable_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[113, "iqm.pulse.gates.reset.Reset_Conditional.customizable_gates"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[113, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[113, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[114, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[114, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[114, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[114, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[114, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[114, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[115, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[116, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[116, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[116, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[116, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[117, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[118, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[119, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "customizable_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[119, "iqm.pulse.gates.rz.RZ_PRX_Composite.customizable_gates"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[119, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[120, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[120, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[120, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[120, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[120, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[121, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[122, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[123, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[123, "iqm.pulse.gates.sx.SXGate._call"]], "customizable_gates (iqm.pulse.gates.sx.sxgate attribute)": [[123, "iqm.pulse.gates.sx.SXGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[123, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[124, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[125, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[125, "iqm.pulse.gates.u.UGate._call"]], "customizable_gates (iqm.pulse.gates.u.ugate attribute)": [[125, "iqm.pulse.gates.u.UGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[125, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[126, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[127, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[128, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[129, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[130, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[130, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[131, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[131, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[132, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[132, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[133, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[133, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[133, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[133, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[134, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[134, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[135, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[136, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[137, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[138, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[139, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[139, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[140, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[140, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[141, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[141, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[142, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[142, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[143, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[144, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[145, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[146, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[147, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[148, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[149, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[150, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[150, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[151, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[151, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[152, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[152, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[153, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[154, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[155, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[156, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[157, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[158, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[159, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[159, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "implementation (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[159, "iqm.pulse.playlist.instructions.AcquisitionMethod.implementation"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[159, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[161, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[162, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[162, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[162, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[162, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[162, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[163, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[163, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[164, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[164, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[164, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[164, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[165, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[165, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[165, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[165, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[165, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[165, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[166, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[166, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[167, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[167, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[167, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[168, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[168, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[168, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[168, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[168, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[169, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[169, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[169, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[170, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[170, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[171, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[171, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[172, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[173, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[174, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[175, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[176, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[176, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[176, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[177, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[177, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[177, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[177, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[177, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[177, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[177, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[177, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[177, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[178, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[179, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[180, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[181, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[182, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[183, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[183, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[183, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[184, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[184, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[185, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[185, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[185, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[186, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[186, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinefallflex (class in iqm.pulse.playlist.waveforms)": [[187, "iqm.pulse.playlist.waveforms.CosineFallFlex"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefallflex method)": [[187, "iqm.pulse.playlist.waveforms.CosineFallFlex._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[188, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[188, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[189, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[189, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "cosineriseflex (class in iqm.pulse.playlist.waveforms)": [[190, "iqm.pulse.playlist.waveforms.CosineRiseFlex"]], "_sample() (iqm.pulse.playlist.waveforms.cosineriseflex method)": [[190, "iqm.pulse.playlist.waveforms.CosineRiseFlex._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[191, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[191, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[191, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "polynomialcosine (class in iqm.pulse.playlist.waveforms)": [[192, "iqm.pulse.playlist.waveforms.PolynomialCosine"]], "_sample() (iqm.pulse.playlist.waveforms.polynomialcosine method)": [[192, "iqm.pulse.playlist.waveforms.PolynomialCosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.polynomialcosine static method)": [[192, "iqm.pulse.playlist.waveforms.PolynomialCosine.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[193, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[193, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[193, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[193, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[193, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[193, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[194, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[195, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[195, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[195, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[195, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[195, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[195, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[195, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[196, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[197, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[198, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[199, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[200, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[201, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[202, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[202, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[202, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[202, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[202, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[202, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[202, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[203, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[204, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[205, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[206, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[207, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[208, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[208, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[209, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[209, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[209, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[210, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[210, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[210, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[211, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[211, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[211, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[211, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[211, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[211, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[211, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[211, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[212, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[213, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[214, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[215, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[216, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[217, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[218, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[219, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[220, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[221, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[222, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[223, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[224, "iqm.pulse.validation.validate_playlist_compatibility"]]}})