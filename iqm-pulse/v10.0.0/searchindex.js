Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.PrxGateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.register_operation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.PrxGateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.register_operation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "Shelved_Measure_Constant", "Shelved_Measure_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_SLEPIAN_CRF", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "PrxGateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "iqm.pulse.gates.register_operation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 53, 55, 58, 69, 71, 74, 120, 121, 123, 124, 129, 130, 135, 151, 153, 158, 167, 168, 169, 195, 196, 201, 207, 211, 214, 215, 216, 217, 219, 220, 221, 222], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 183, 185, 187, 205, 215, 216, 218, 220, 221, 222], "instruct": [1, 4, 6, 16, 20, 32, 35, 49, 53, 55, 69, 70, 71, 74, 75, 77, 80, 81, 82, 84, 85, 98, 99, 107, 111, 113, 120, 123, 124, 126, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 185, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 205, 206, 209, 211, 213, 214, 215, 218, 220, 222], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 71, 74, 80, 81, 82, 84, 85, 87, 98, 99, 107, 109, 111, 113, 120, 124, 153, 165, 166, 168, 170, 185, 192, 197, 198, 199, 200, 201, 206, 208, 215, 217, 218, 220], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 71, 77, 82, 99, 103, 106, 107, 109, 113, 120, 158, 184, 185, 186, 188, 205, 215, 216, 217, 218, 221, 222], "comput": [1, 5, 6, 16, 31, 69, 77, 106, 117, 120, 124, 135, 136, 139, 140, 142, 143, 144, 145, 156, 158, 169, 170, 185, 189, 193, 194, 201, 205, 215, 216, 217, 218, 219, 222], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 75, 83, 103, 108, 115, 117, 120, 121, 131, 135, 141, 151, 166, 167, 172, 173, 175, 182, 184, 189, 197, 202, 206, 215, 217], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 73, 75, 76, 78, 79, 83, 88, 89, 90, 91, 92, 93, 94, 95, 97, 103, 108, 110, 115, 117, 120, 121, 131, 141, 151, 166, 167, 169, 172, 173, 175, 184, 189, 197, 201, 202, 206, 215], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 197, 198, 199, 200, 201, 202, 206, 207, 215, 216, 217, 219, 220, 222], "subpackag": [1, 33, 120, 172], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 107, 109, 110, 111, 112, 113, 116, 118, 120, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 141, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 198, 199, 200, 201, 207, 215, 216, 217, 218], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 140, 141, 143, 144, 145, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 185, 192, 198, 199, 200, 201, 207, 215, 219, 220], "util": [2, 6, 215, 217], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 75, 77, 83, 98, 106, 107, 108, 109, 117, 121, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 173, 183, 184, 185, 189, 201, 202, 206, 215, 217], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 113, 143, 155, 215, 217], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 71, 74, 77, 98, 107, 168, 178, 185, 193, 194, 199, 201, 211, 214, 215, 216, 217, 219, 220, 221, 222], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 197, 198, 199, 200, 201, 202, 206, 207, 215, 216, 217, 221, 222], "A": [3, 6, 7, 11, 14, 18, 37, 69, 71, 73, 74, 136, 153, 176, 185, 189, 195, 196, 198, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222], "b": [3, 14, 55, 69, 71, 74, 141, 189, 195, 196, 201, 219], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 110, 111, 124, 126, 135, 169, 185, 215, 222], "merg": [3, 6, 193], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 74, 75, 77, 87, 136, 140, 185, 193, 201, 215, 216, 217, 220, 222], "dictionari": [3, 58, 142, 217], "recurs": [3, 6, 201, 216, 222], "leav": 3, "origin": [3, 11, 15, 169, 170, 215, 219], "unchang": [3, 169], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 192, 193, 194, 195, 196, 198, 201, 203, 204, 205, 207, 211, 212, 213, 214, 215, 216, 217, 220, 222], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 71, 77, 86, 87, 96, 101, 102, 107, 113, 128, 132, 143, 169, 176, 178, 182, 183, 185, 186, 193, 194, 195, 196, 198, 201, 214, 215, 217], "anoth": [3, 6, 35, 49, 77, 80, 119, 185, 195, 196, 215, 216, 217, 222], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 110, 111, 124, 126, 130, 132, 133, 134, 135, 143, 144, 145, 169, 185, 192, 193, 194, 215], "whether": [3, 6, 13, 18, 82, 101, 124, 130, 135, 193, 194, 217, 219, 222], "also": [3, 6, 11, 17, 19, 20, 31, 35, 48, 49, 55, 70, 77, 81, 88, 89, 97, 98, 106, 107, 109, 123, 169, 185, 189, 193, 194, 196, 201, 205, 215, 217, 219, 220, 222], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 106, 107, 110, 111, 112, 116, 118, 158, 169, 170, 185, 187, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 212, 214, 215, 217], "empti": [3, 11, 20, 63, 69, 70, 71, 74, 162, 169, 185, 215, 217], "size": [3, 13, 217], "valu": [3, 6, 11, 13, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 71, 73, 74, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 110, 135, 136, 143, 144, 145, 153, 157, 159, 161, 162, 165, 176, 181, 188, 199, 200, 215, 216, 217, 222], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 77, 81, 87, 88, 89, 97, 98, 106, 112, 116, 118, 124, 129, 132, 135, 136, 139, 140, 142, 143, 152, 156, 159, 162, 169, 170, 174, 175, 176, 178, 181, 182, 183, 192, 194, 198, 201, 211, 215, 216, 217, 219, 220, 222], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 71, 74, 77, 81, 82, 84, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 113, 114, 116, 118, 119, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 161, 169, 170, 174, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 192, 193, 194, 195, 196, 198, 201, 203, 204, 205, 212, 214, 215, 217], "copi": [3, 6, 11, 81, 158, 169, 170, 185, 219], "content": [3, 6, 7, 11, 124, 158, 169, 170, 185, 192, 200, 201, 215, 216, 217, 219, 222], "take": [3, 7, 11, 20, 37, 49, 96, 169, 182, 183, 185, 215, 217, 220, 222], "preced": [3, 34, 35, 55, 113, 205], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 161, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 207, 212, 214, 215, 217, 219], "tool": [4, 189, 192, 218], "build": [4, 6, 7, 18, 20, 69, 70, 71, 81, 86, 87, 88, 89, 198, 201, 215, 217], "class": [4, 5, 6, 7, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 206, 207, 215, 218, 219], "inherit": [4, 10, 16, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 75, 77, 83, 86, 87, 88, 89, 96, 97, 99, 103, 106, 107, 108, 109, 113, 115, 117, 121, 131, 141, 151, 167, 175, 184, 189, 197, 206, 215, 217], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 82, 215], "schedulebuild": [4, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 113, 116, 118, 201, 215, 216, 217, 218], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 215, 216, 217, 220, 222], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 109, 110, 111, 112, 113, 116, 118, 123, 129, 156, 169, 185, 186, 187, 194, 198, 199, 200, 201, 215, 216, 217, 219, 222], "locu": [5, 6, 7, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 185, 187, 198, 201, 215, 216, 217, 220, 222], "arg": [5, 11, 20, 31, 35, 48, 49, 77, 106, 107, 109, 217], "factori": [5, 6, 124, 126, 156, 185, 198, 201], "implement": [5, 6, 7, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 106, 107, 109, 110, 111, 112, 113, 116, 118, 132, 135, 169, 185, 187, 188, 205, 215, 216, 218, 220, 221, 222], "object": [5, 6, 11, 17, 32, 122, 123, 124, 140, 152, 158, 169, 170, 185, 192, 201, 207, 215, 217, 219], "specif": [5, 6, 20, 31, 33, 34, 35, 48, 49, 53, 77, 98, 106, 107, 109, 113, 123, 135, 169, 183, 185, 207, 211, 215, 216, 217, 219, 222], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 74, 75, 77, 99, 101, 102, 103, 105, 106, 107, 109, 112, 113, 116, 118, 184, 185, 186, 187, 188, 201, 207, 215, 216, 217, 218, 220, 222], "appli": [5, 6, 37, 49, 55, 74, 75, 77, 80, 81, 98, 107, 158, 185, 215, 216, 217, 219, 220, 222], "part": [5, 6, 20, 84, 162, 177, 179, 180, 181, 182, 185, 192, 201, 215, 216, 217, 219, 220, 222], "qpu": [5, 6, 20, 21, 35, 63, 165, 185, 193, 197, 201, 215, 216, 217, 222], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 77, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 108, 109, 113, 115, 117, 132, 143, 150, 176, 178, 182, 183, 185, 189, 193, 194, 195, 196, 201, 215, 217, 221, 222], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 113, 132, 136, 143, 144, 145, 146, 147, 148, 149, 150, 176, 178, 182, 183, 193, 194, 201, 215, 217, 221], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 71, 74, 82, 107, 113, 185, 215, 216, 217, 218, 220, 222], "attribut": [5, 6, 7, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 107, 109, 110, 111, 112, 113, 116, 118, 123, 124, 125, 126, 127, 132, 133, 134, 135, 141, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 198, 199, 200, 201, 207, 215, 217, 219, 220], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 185, 192, 198, 199, 200, 201, 207, 215, 217, 222], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 109, 110, 111, 112, 113, 116, 118, 123, 124, 128, 132, 143, 152, 154, 155, 156, 162, 163, 169, 174, 176, 178, 182, 183, 185, 186, 187, 193, 194, 195, 196, 198, 201, 214, 217], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 37, 63, 69, 70, 71, 106, 107, 112, 116, 118, 124, 126, 128, 140, 150, 155, 156, 157, 158, 159, 160, 161, 169, 185, 198, 201, 203, 205, 207, 217], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 71, 74, 77, 106, 107, 109, 135, 159, 168, 169, 183, 185, 193, 194, 198, 201, 215, 216, 217, 219, 222], "inform": [5, 6, 32, 82, 185, 215, 216, 217, 219, 220, 222], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 71, 74, 76, 77, 78, 79, 85, 106, 107, 110, 111, 124, 129, 132, 133, 134, 143, 144, 145, 159, 165, 183, 185, 193, 194, 198, 201, 215, 216, 217, 222], "qubit": [5, 6, 11, 12, 13, 14, 15, 20, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 98, 99, 103, 107, 108, 109, 113, 115, 117, 183, 185, 193, 194, 215, 216, 217, 220, 221, 222], "reson": [5, 75, 76, 77, 78, 79, 80, 81, 109, 118, 124, 193, 194, 205, 215, 216, 221, 222], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 77, 106, 107, 113, 185, 193, 194, 215, 216, 217, 219, 220, 222], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 71, 87, 107, 109, 113, 135, 185, 215, 217, 222], "valid": [5, 6, 9, 18, 20, 75, 82, 155, 157, 158, 161, 169, 187, 188, 201, 207, 215, 222], "op_tabl": [5, 6, 9, 11, 18, 37, 38, 39, 106, 112, 116, 118, 217], "against": [5, 6, 162, 188, 219, 222], "tabl": [5, 6, 7, 9, 11, 12, 13, 102, 123, 186, 215], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 77, 102, 119, 131, 141, 175, 185, 186, 215, 216, 217, 219], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 109, 110, 111, 113, 116, 118, 184, 186, 187, 215, 218, 222], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 71, 74, 82, 107, 123, 136, 139, 140, 142, 148, 155, 157, 158, 161, 169, 185, 198, 201, 211, 215, 216, 217, 219, 222], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 101, 102, 113, 124, 135, 140, 159, 169, 193, 215, 216, 217, 220, 222], "rais": [5, 6, 7, 9, 61, 82, 101, 102, 124, 155, 157, 158, 161, 176, 185, 187, 188, 203, 208, 209, 210, 215, 216], "valueerror": [5, 6, 7, 9, 82, 101, 102, 124, 155, 157, 158, 161, 185, 187, 188, 203], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 115, 117, 124, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 159, 161, 162, 169, 170, 171, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 192, 193, 194, 195, 196, 201, 205, 211, 214, 215, 216, 217, 218, 219, 220, 222], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 107, 110, 111, 112, 113, 116, 118, 132, 143, 176, 178, 182, 183, 185, 187, 188, 215, 216, 222], "chip_topologi": [6, 20, 63, 107, 128, 129, 217, 222], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 106, 107, 109, 113, 122, 123, 124, 125, 126, 127, 153, 156, 157, 158, 164, 168, 169, 170, 189, 193, 194, 195, 196, 198, 199, 201, 211, 212, 214, 215, 216, 217, 220, 222], "component_channel": 6, "out": [6, 11, 86, 88, 215, 216, 217, 219, 220], "individu": [6, 54, 185, 216, 219], "encapsul": [6, 20, 33, 82, 222], "known": [6, 7, 61, 101, 102, 169, 183, 185, 186, 188, 216, 217], "op": [6, 7, 12, 13, 16, 18, 102, 185, 186, 187, 188, 217], "them": [6, 11, 12, 18, 37, 70, 74, 96, 106, 107, 112, 113, 116, 118, 185, 201, 215, 218], "topologi": [6, 129, 222], "properti": [6, 11, 20, 75, 121, 123, 124, 128, 129, 169, 170, 185, 192, 194, 195, 196, 215, 222], "quantumopt": [6, 11, 12, 13, 188, 215], "opcalibrationdatatre": [6, 20, 188], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 110, 111, 113, 123, 132, 143, 152, 176, 178, 182, 183, 185, 187, 188, 207, 211, 214, 215, 216], "tree": [6, 8, 20, 129, 187, 188], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 71, 99, 106, 107, 113, 128, 129, 217], "chip": [6, 11, 129, 215], "deriv": [6, 98, 132, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 181, 183, 215, 217, 219], "chad": [6, 185], "channelproperti": [6, 20, 121, 126, 128, 130, 169, 194, 195, 196, 212, 214], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 63, 69, 70, 71, 99, 106, 107, 113, 123, 129, 132, 140, 142, 143, 155, 169, 176, 178, 182, 183, 185, 186, 194, 201, 203, 215, 217], "configur": [6, 7, 122, 125, 127, 211, 214, 219], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 71, 74, 80, 81, 84, 96, 98, 106, 109, 113, 118, 124, 150, 156, 164, 205, 215, 216, 217, 220], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 76, 77, 78, 79, 156, 185, 215, 217], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 71, 72, 73, 74, 106, 152, 160, 169, 198, 215, 220], "respons": [6, 124, 127, 217, 219, 220], "_cach": 6, "gateimplement": [6, 7, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 75, 77, 83, 99, 101, 103, 106, 107, 108, 109, 113, 115, 117, 185, 187, 201, 215, 218, 220, 222], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 71, 77, 106, 107, 109, 140, 169, 201, 215, 217], "The": [6, 11, 12, 17, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 74, 75, 77, 80, 83, 84, 87, 96, 98, 101, 103, 104, 106, 107, 108, 109, 113, 115, 117, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 157, 162, 164, 169, 174, 176, 178, 179, 180, 181, 182, 183, 185, 189, 193, 194, 195, 196, 201, 211, 213, 214, 215, 216, 217, 219, 220, 222], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 70, 71, 74, 75, 77, 107, 109, 113, 123, 132, 143, 158, 159, 162, 169, 176, 178, 181, 182, 183, 185, 193, 194, 195, 196, 201, 211, 214, 215, 216, 217, 219, 220, 222], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 80, 84, 85, 98, 110, 111, 130, 133, 134, 137, 138, 140, 144, 145, 146, 147, 148, 157, 162, 176, 178, 179, 180, 181, 182, 183, 194, 201, 211, 214, 215, 216, 217, 219, 220, 222], "structur": [6, 215], "composite_cach": 6, "compositeg": [6, 16, 17, 20, 36, 37, 38, 39, 103, 106, 108, 112, 115, 116, 117, 118, 215, 217], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 71, 74, 77, 84, 87, 98, 99, 106, 107, 109, 113, 116, 118, 193, 198, 199, 200, 215, 217, 218, 220], "flush": [6, 17, 215], "whenev": [6, 17, 69, 71, 74, 215], "inject": [6, 215], "_channel_to_compon": 6, "self": [6, 11, 19, 20, 48, 49, 69, 70, 71, 74, 88, 89, 97, 107, 169, 185, 192, 201, 216, 217], "invert": 6, "algorithm": [6, 189, 193, 195, 199, 201, 215, 217, 222], "perform": [6, 49, 154, 162, 169, 219], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 55, 58, 60, 63, 69, 70, 71, 74, 75, 77, 80, 84, 86, 87, 88, 89, 96, 97, 98, 99, 104, 105, 106, 107, 109, 113, 123, 124, 132, 135, 140, 142, 143, 157, 159, 160, 162, 165, 169, 175, 176, 178, 179, 180, 181, 182, 183, 185, 189, 192, 193, 195, 196, 199, 201, 215, 216, 217, 219, 220, 222], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 84, 86, 87, 98, 104, 105, 106, 107, 109, 112, 113, 116, 117, 118, 123, 124, 132, 135, 136, 140, 142, 143, 150, 153, 162, 164, 165, 168, 169, 174, 176, 178, 180, 182, 183, 185, 193, 194, 199, 201, 205, 211, 214, 215, 216, 217, 218, 219, 220, 221], "determin": [6, 32, 193, 201, 216, 219, 222], "block": [6, 35, 37, 49, 69, 70, 71, 74, 98, 106, 107, 124, 151, 165, 168, 191, 193, 194, 198, 201, 215, 216, 220, 222], "associ": [6, 11, 69, 71, 74, 107, 123, 124, 160, 162, 217, 219, 220], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 74, 75, 76, 77, 78, 79, 85, 98, 106, 110, 111, 124, 169, 179, 180, 183, 185, 192, 201, 215, 216, 219, 220, 221, 222], "ar": [6, 7, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 83, 85, 87, 88, 89, 97, 106, 110, 111, 112, 113, 116, 117, 118, 123, 124, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 150, 157, 159, 162, 169, 170, 176, 178, 181, 182, 183, 185, 188, 192, 193, 194, 195, 196, 199, 200, 201, 211, 214, 215, 216, 217, 218, 219, 220, 222], "includ": [6, 9, 17, 19, 20, 69, 70, 71, 77, 86, 87, 96, 123, 135, 185, 201, 215, 217, 219], "non": [6, 11, 18, 63, 68, 69, 71, 74, 103, 107, 132, 135, 143, 176, 178, 182, 183, 203, 217, 219, 222], "certain": [6, 19, 20, 48, 49, 88, 89, 97, 124, 135, 217, 222], "virtual": [6, 37, 49, 77, 80, 81, 107, 113, 118, 124, 215, 220, 222], "do": [6, 9, 11, 32, 63, 113, 115, 124, 169, 175, 178, 193, 205, 215, 216, 217, 219, 222], "just": [6, 11, 17, 31, 69, 71, 74, 87, 106, 185, 201, 215, 216, 217], "themselv": [6, 20, 70, 216, 217], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 71, 72, 74, 107, 126, 152, 160, 194, 198, 215, 217], "_require_scheduling_in_second": 6, "requir": [6, 18, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 105, 107, 110, 111, 113, 124, 132, 143, 176, 178, 180, 182, 183, 185, 187, 188, 198, 205, 211, 214, 215, 216, 217, 219], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 74, 75, 107, 109, 113, 124, 132, 136, 140, 143, 169, 176, 178, 182, 183, 192, 194, 195, 196, 215, 217, 220, 222], "instead": [6, 20, 80, 165, 193, 215, 216, 217, 220, 222], "sampl": [6, 20, 32, 80, 124, 126, 127, 130, 132, 133, 134, 135, 143, 144, 145, 152, 153, 157, 158, 159, 163, 165, 169, 170, 176, 178, 179, 180, 181, 182, 183, 193, 194, 198, 211, 214, 215, 216, 217, 218], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 71, 74, 77, 84, 87, 88, 89, 97, 98, 106, 107, 109, 112, 113, 116, 118, 123, 124, 132, 139, 143, 153, 155, 156, 158, 159, 162, 164, 168, 169, 174, 176, 178, 182, 183, 185, 189, 191, 195, 196, 201, 205, 215, 216, 217, 220, 222], "happen": [6, 75, 80, 113, 165, 180, 189, 201, 216, 217], "reason": [6, 17, 87, 183, 201, 209, 216, 217, 219], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 157, 170, 176, 177, 181, 183, 185, 193, 199, 200, 201, 217, 219, 220, 221, 222], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 75, 77, 81, 87, 99, 106, 113, 162, 169, 185, 194, 200, 201, 215, 217, 219, 220, 222], "rate": [6, 32, 80, 124, 127, 130, 157, 158, 169, 193, 194, 211, 214, 217, 218], "uhfqa": [6, 124], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 73, 74, 75, 83, 87, 92, 93, 94, 95, 96, 108, 109, 115, 116, 117, 118, 119, 124, 133, 134, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 176, 177, 178, 181, 182, 183, 193, 201, 217, 219, 220, 221, 222], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 71, 74, 77, 84, 98, 106, 107, 130, 136, 144, 145, 150, 159, 169, 175, 185, 188, 193, 194, 201, 205, 215, 216, 217, 219, 220, 222], "granular": [6, 55, 124, 130, 159, 169, 194, 207, 211, 214, 215, 216, 220], "some": [6, 17, 18, 53, 117, 132, 143, 175, 176, 178, 182, 183, 195, 196, 201, 215, 216, 217, 222], "mix": [6, 74], "station": [6, 37, 82, 124, 129, 185, 215, 216], "ro": 6, "devic": [6, 70, 220], "vendor": 6, "than": [6, 11, 74, 107, 169, 185, 192, 195, 196, 211, 214, 215], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 77, 84, 98, 169, 208, 211, 214, 215, 220], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 100, 114, 119, 132, 136, 155, 156, 169, 185, 186, 216, 217, 219, 220], "inject_calibr": [6, 215], "partial_calibr": 6, "new": [6, 11, 14, 17, 101, 102, 169, 185, 193, 194, 195, 196, 198, 201, 215, 216, 217], "chang": [6, 17, 18, 63, 113, 158, 164, 185, 192, 205, 217, 219, 220], "after": [6, 63, 74, 87, 89, 91, 93, 95, 96, 113, 126, 157, 165, 191, 192, 193, 205, 215, 216, 220, 222], "initialis": [6, 19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107], "invalid": [6, 7, 209], "affect": [6, 11, 35, 69, 113, 157, 169, 170, 185, 201, 215, 220], "loci": [6, 11, 24, 69, 107, 185, 216, 217, 222], "factoriz": [6, 20, 69, 106, 107, 185, 215], "its": [6, 17, 18, 20, 33, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 76, 77, 78, 79, 85, 110, 111, 129, 135, 158, 159, 169, 170, 179, 180, 185, 194, 195, 196, 199, 201, 215, 216, 217, 219, 222], "wa": [6, 37, 77, 81, 183, 215, 219, 220, 222], "must": [6, 7, 9, 11, 12, 18, 20, 37, 49, 63, 106, 112, 116, 118, 124, 130, 140, 150, 169, 170, 183, 185, 201, 215, 217, 219], "doe": [6, 11, 37, 49, 61, 69, 70, 71, 74, 82, 101, 107, 157, 159, 165, 185, 215, 216, 217, 219, 220, 222], "all": [6, 11, 12, 15, 18, 19, 20, 27, 28, 29, 30, 31, 32, 35, 37, 49, 55, 60, 69, 70, 71, 74, 75, 81, 86, 87, 96, 98, 106, 107, 112, 113, 116, 118, 124, 129, 130, 132, 143, 155, 157, 158, 161, 164, 169, 170, 176, 178, 182, 183, 189, 193, 199, 211, 214, 215, 216, 217, 218, 219, 220, 222], "found": [6, 11, 18, 38, 39, 61, 169, 185], "actual": [6, 7, 20, 37, 55, 69, 71, 74, 133, 134, 144, 145, 176, 178, 179, 180, 181, 182, 183, 193, 211, 214, 215, 217, 220, 222], "previou": [6, 215, 220], "validate_calibr": 6, "check": [6, 13, 124, 211, 214, 215], "match": [6, 7, 63, 150, 169, 170, 211, 213, 214, 215, 222], "someth": [6, 19, 69, 70, 124, 155, 157, 158, 161, 187, 188, 205], "wrong": [6, 187, 188, 215], "get_drive_channel": [6, 222], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 84, 85, 102, 109, 110, 111, 124, 130, 132, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 158, 169, 170, 174, 185, 194, 201, 204, 211, 214, 216, 217, 222], "exist": [6, 18, 61, 101, 102, 169, 215, 216, 217, 222], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 71, 74, 88, 89, 90, 91, 92, 93, 94, 95, 119, 132, 139, 143, 175, 182, 201, 215, 216, 217, 219, 220], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 71, 74, 126, 215, 217], "belong": [6, 69, 71, 74, 215], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 71, 74, 104, 105, 106, 162, 215, 218, 222], "signal": [6, 16, 37, 69, 70, 71, 74, 154, 162, 163, 179, 180, 182, 215, 216, 218, 220, 221], "between": [6, 16, 20, 53, 55, 69, 75, 77, 80, 82, 107, 155, 169, 181, 183, 189, 216, 220], "sourc": [6, 77, 192, 215, 219, 220], "destin": [6, 220], "either": [6, 7, 35, 113, 164, 201, 215, 216, 219], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 88, 89, 97, 169, 170, 192, 215, 216, 217, 219], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 215, 220], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 71, 99, 106, 113, 123, 128, 129, 185, 192, 215, 217, 220, 222], "node": [6, 18, 20, 37, 106, 112, 116, 118], "receiv": [6, 162, 219, 220], "bit": [6, 37, 215, 220], "which": [6, 11, 15, 20, 35, 48, 69, 77, 84, 101, 102, 109, 113, 135, 136, 137, 138, 139, 140, 146, 147, 148, 169, 170, 177, 178, 182, 183, 185, 193, 201, 205, 215, 216, 217, 218, 219, 220, 222], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 110, 111, 113, 117, 123, 124, 130, 132, 135, 136, 139, 140, 143, 150, 169, 176, 178, 182, 183, 198, 203, 215, 216, 217, 218, 219, 222], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 71, 72, 73, 74, 105, 106, 113, 124, 185, 194, 215, 216, 217, 218, 222], "result": [6, 11, 17, 20, 37, 69, 70, 71, 74, 81, 106, 113, 140, 154, 160, 162, 169, 215, 216, 219, 222], "support": [6, 33, 37, 63, 69, 71, 74, 107, 181, 183, 203, 211, 214, 215, 216, 217, 219, 220], "fast": [6, 48, 69, 71, 74, 92, 93, 104, 105, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 162, 215, 218, 221, 222], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 101, 217], "impl_nam": [6, 11, 18, 20, 101, 187, 215, 217], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 110, 111, 124, 185], "request": [6, 7, 11, 18, 20, 55, 99, 125, 127, 215, 216, 222], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 18, 70, 135, 164, 215], "neighbor": [6, 193, 194, 201, 222], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 76, 77, 78, 79, 107, 183, 185, 193, 194, 201, 215, 216, 217, 221, 222], "ad": [6, 11, 17, 18, 37, 69, 71, 74, 81, 101, 102, 106, 112, 116, 118, 123, 169, 189, 193, 194, 215, 216, 217, 222], "separ": [6, 18, 32, 37, 106, 112, 116, 118, 215, 216, 219, 222], "resolut": [6, 201, 222], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 72, 73, 75, 77, 81, 83, 84, 87, 98, 99, 100, 109, 110, 113, 115, 156, 157, 164, 176, 177, 178, 182, 185, 205, 215, 216, 217, 222], "Will": [6, 55, 199], "iter": [6, 9, 11, 12, 20, 63, 82, 107, 130, 169, 170, 185, 198, 201, 222], "wait": [6, 35, 37, 55, 75, 80, 106, 107, 124, 151, 153, 168, 169, 191, 193, 215, 216, 220, 222], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 109, 110, 111, 113, 124, 130, 132, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 170, 176, 178, 179, 180, 181, 182, 183, 189, 192, 193, 194, 195, 196, 198, 201, 211, 214, 215, 216, 217, 220, 222], "round": [6, 55, 124, 130, 215, 220, 222], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 71, 73, 74, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 110, 124, 126, 130, 135, 169, 185, 215, 217], "everi": [6, 20, 157, 211, 214, 215, 217, 222], "guarante": [6, 55, 216], "idl": [6, 107, 165, 169, 215], "cannot": [6, 17, 153, 169, 201, 215, 217, 219, 220], "replac": [6, 11, 20, 101, 102, 153, 165, 215, 219], "dynam": [6, 165, 215], "decoupl": [6, 165, 215], "sequenc": [6, 9, 11, 12, 16, 21, 77, 112, 153, 165, 166, 170, 174, 185, 192, 201, 205, 215, 216, 218, 220, 222], "thei": [6, 11, 18, 19, 20, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 113, 117, 123, 124, 169, 170, 185, 201, 211, 214, 215, 216, 217, 220, 222], "treat": [6, 193, 201, 215, 222], "remain": [6, 189, 192, 205, 219], "align": [6, 216, 220, 222], "time": [6, 11, 20, 37, 53, 55, 69, 70, 75, 77, 80, 85, 98, 107, 111, 113, 124, 126, 130, 136, 137, 138, 140, 146, 147, 148, 153, 158, 162, 168, 169, 170, 179, 180, 183, 189, 192, 193, 195, 196, 201, 215, 216, 217, 218, 222], "dure": [6, 55, 74, 77, 124, 135, 143, 153, 168, 179, 180, 183, 201, 216, 222], "particular": [6, 11, 20, 23, 24, 25, 187, 215, 219, 220, 222], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 106, 107, 109, 110, 111, 113, 162, 165, 185, 201, 216, 217, 219, 220], "thu": [6, 32, 75, 84, 113, 135, 139, 216, 220], "less": [6, 11, 74, 189, 215], "space": [6, 13, 14, 15, 183, 220], "side": [6, 34, 35, 74, 124, 195, 196, 216], "todo": [6, 37, 63, 69, 71, 74, 124, 171], "For": [6, 11, 14, 17, 23, 24, 69, 124, 139, 169, 176, 185, 215, 216, 217, 219, 220, 222], "now": [6, 63, 113, 215], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 71, 74, 77, 81, 107, 123, 136, 140, 159, 169, 185, 193, 194, 198, 201, 214, 216, 217, 219, 220, 222], "benefit": 6, "exa": [6, 20, 180, 203, 215, 217, 218, 222], "sweep": 6, "over": [6, 7, 12, 69, 71, 74, 136, 140, 169, 215], "In": [6, 7, 11, 37, 53, 55, 69, 70, 71, 74, 75, 80, 98, 107, 153, 158, 162, 169, 185, 193, 215, 216, 217, 219, 220, 222], "futur": 6, "gener": [6, 11, 20, 69, 70, 71, 74, 98, 113, 140, 174, 201, 215, 217, 219], "should": [6, 18, 20, 37, 49, 69, 70, 71, 74, 84, 104, 105, 123, 124, 135, 136, 140, 183, 185, 189, 193, 194, 215, 217, 219, 220], "experi": [6, 11, 60, 185, 215], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 109, 110, 111, 113, 114, 118, 119, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 150, 156, 157, 161, 162, 164, 169, 171, 176, 177, 178, 179, 180, 181, 182, 183, 185, 192, 194, 195, 196, 204, 205, 207, 215, 217], "how": [6, 185, 201, 216, 217, 219, 220, 222], "long": [6, 75, 84, 124, 179, 180, 215, 216, 217], "start": [6, 58, 60, 136, 140, 146, 147, 169, 189, 192, 193, 194, 199, 200, 215, 216, 217, 220], "simultan": [6, 69, 71, 74, 189, 201, 216, 222], "box": [6, 37, 84, 98, 99, 193, 199, 200, 201, 215, 222], "get_implement": [6, 18, 20, 69, 215, 217, 222], "use_priority_ord": 6, "strict_locu": [6, 18], "priority_calibr": [6, 18, 222], "provid": [6, 11, 18, 19, 20, 31, 32, 52, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 140, 185, 211, 214, 215, 216, 217, 218, 219, 222], "an": [6, 7, 11, 13, 14, 16, 18, 19, 20, 29, 34, 48, 53, 61, 63, 69, 71, 75, 83, 84, 85, 86, 88, 98, 101, 102, 109, 110, 111, 113, 114, 117, 119, 123, 124, 125, 132, 155, 157, 159, 169, 170, 174, 183, 185, 193, 195, 198, 201, 205, 208, 209, 215, 216, 217, 218, 219, 220, 222], "mean": [6, 11, 69, 71, 74, 75, 162, 185, 201, 215, 217, 219, 220, 222], "chosen": [6, 118, 135, 216], "automat": [6, 11, 19, 70, 215, 217], "logic": [6, 19, 20, 31, 35, 48, 49, 77, 106, 107, 109, 135, 169, 215, 217, 222], "describ": [6, 11, 12, 20, 135, 136, 140, 152, 185, 201, 216, 219, 222], "below": [6, 20, 144, 145, 215, 216, 219, 220, 222], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 110, 111, 136, 185, 215, 217], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 77, 144, 145, 148, 169, 183, 185, 201, 216, 217, 218, 220, 222], "avail": [6, 18, 20, 216, 217, 219, 220, 222], "effect": [6, 20, 37, 75, 98, 109, 185, 189, 201, 216, 217, 218, 220, 222], "get_default_implementation_for_locu": [6, 185, 215, 217], "otherwis": [6, 18, 20, 49, 69, 71, 74, 80, 106, 124, 169, 170, 181, 215, 217, 219], "first": [6, 11, 13, 34, 35, 37, 49, 69, 71, 74, 136, 139, 140, 169, 183, 185, 217, 220, 222], "prioriti": [6, 7, 185, 215], "follow": [6, 55, 69, 70, 75, 106, 113, 129, 139, 164, 183, 189, 193, 201, 211, 214, 215, 216, 219, 220, 222], "defin": [6, 7, 11, 18, 19, 20, 22, 28, 29, 30, 32, 38, 39, 48, 49, 69, 70, 75, 83, 88, 89, 97, 107, 108, 124, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 175, 176, 183, 185, 187, 188, 199, 201, 215, 216, 217, 218, 219, 222], "defaults_for_locu": [6, 185, 215], "global": [6, 63, 185, 215], "load": [6, 8, 215], "common": [6, 18, 19, 37, 38, 39, 69, 70, 71, 86, 87, 96, 106, 112, 116, 117, 118, 130, 193, 215, 218, 219], "singl": [6, 20, 31, 33, 60, 67, 68, 69, 70, 72, 83, 86, 87, 89, 98, 108, 113, 115, 117, 169, 170, 185, 198, 201, 212, 215, 216, 217, 220, 221, 222], "note": [6, 7, 16, 49, 69, 136, 140, 150, 157, 169, 188, 192, 201, 217, 220], "prevent": [6, 216, 217], "could": [6, 17, 55, 185, 217, 220], "_find_implementation_and_locu": 6, "find": [6, 183, 222], "instanc": [6, 11, 13, 18, 20, 33, 69, 71, 74, 80, 84, 85, 98, 109, 110, 111, 157, 160, 185, 205, 217, 222], "compat": [6, 69, 71, 74, 211, 214, 215], "both": [6, 49, 77, 84, 195, 215, 217, 220, 222], "caller": 6, "highest": [6, 185], "we": [6, 17, 55, 63, 77, 113, 124, 135, 136, 139, 140, 143, 183, 185, 205, 217, 219, 220, 222], "equival": [6, 74, 113, 189, 201, 205, 216, 222], "one": [6, 9, 11, 18, 20, 38, 39, 42, 45, 49, 56, 69, 70, 74, 84, 169, 185, 193, 194, 198, 201, 215, 216, 217, 219, 220, 222], "had": [6, 215], "_get_implement": 6, "built": [6, 11, 117, 215], "when": [6, 11, 17, 18, 20, 35, 37, 55, 69, 71, 74, 75, 107, 132, 143, 169, 171, 176, 178, 182, 183, 193, 194, 201, 208, 209, 210, 215, 216, 217, 220, 222], "later": [6, 11], "needs_calibr": [6, 18, 20], "interact": [6, 49], "nontrivi": 6, "wai": [6, 11, 152, 201, 215, 216, 217, 222], "composit": [6, 17, 18, 37, 38, 39, 106, 112, 116, 118, 199, 200, 201, 215, 216, 217, 222], "yet": [6, 63, 193, 194, 215], "constant": [6, 67, 68, 69, 72, 73, 84, 85, 105, 111, 179, 180, 181, 215, 220], "cc_prx": [6, 106, 215, 217, 220], "prx_composit": 6, "prx": [6, 11, 19, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 108, 112, 113, 116, 118, 185, 205, 215, 216, 217, 220, 221, 222], "drag_crf": [6, 11, 38, 215], "reset": [6, 106, 107, 157, 185, 215, 216, 217, 220], "condit": [6, 37, 38, 39, 106, 155, 162, 211, 214, 215, 217, 219, 220], "meaning": [6, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 110, 111, 185], "rz": [6, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 87, 89, 91, 93, 95, 109, 110, 111, 112, 113, 118, 156, 205, 215], "overrid": [6, 18, 19, 20, 31, 35, 48, 49, 69, 70, 71, 77, 86, 87, 88, 89, 96, 97, 99, 106, 107, 109, 113, 135, 215, 217, 222], "work": [6, 11, 77, 107, 169, 192, 215, 216, 217, 219, 222], "sinc": [6, 32, 49, 77, 113, 183, 185, 215, 217], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 69, 70, 71, 74, 77, 99, 101, 106, 107, 109, 112, 113, 116, 118, 132, 143, 157, 162, 176, 177, 178, 182, 183, 185, 188, 215, 216, 217, 222], "validate_quantum_circuit": [6, 215], "require_measur": [6, 9], "constitut": [6, 9, 219], "least": [6, 9, 20, 55, 124, 130, 136, 140, 193, 194, 211, 214, 216, 217, 219, 222], "circuit_to_timebox": [6, 215], "scheduling_algorithm": [6, 198, 201], "schedulingalgorithm": [6, 197, 198, 201], "hard_boundari": [6, 198, 199, 201], "locus_map": [6, 215], "convert": [6, 11, 20, 87, 118, 124, 132, 143, 153, 168, 176, 178, 182, 183, 191, 201, 215, 216, 217, 218], "resolv": [6, 20, 180, 199, 201, 216, 218], "option": [6, 11, 12, 13, 18, 20, 32, 69, 169, 185, 215, 217, 220], "placehold": [6, 11, 215], "physic": [6, 11, 21, 124, 193, 215, 216, 217], "while": [6, 87, 199, 216, 217, 219, 222], "unresolv": 6, "fail": [6, 208, 210], "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 199, 201, 215], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 107, 110, 111, 117, 118, 124, 126, 132, 133, 134, 139, 142, 143, 144, 145, 146, 147, 150, 155, 157, 174, 176, 177, 178, 179, 181, 182, 183, 192, 198, 201, 205, 217, 218, 219, 222], "temporari": [6, 215], "helper": [6, 20], "playlist": [6, 75, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 206, 210, 211, 214, 215, 218, 220, 222], "front": [6, 169], "pad": [6, 35, 85, 111, 136, 139, 140, 169, 193, 199, 222], "equal": [6, 11, 37, 75, 113, 116, 179, 180, 192, 195, 196, 215, 216, 222], "delai": [6, 37, 67, 68, 69, 70, 73, 106, 152, 159, 215, 216, 220], "befor": [6, 74, 80, 87, 89, 91, 93, 95, 124, 126, 205, 215, 222], "final": [6, 20, 96, 176, 216, 217, 222], "wish": 6, "lose": [6, 215], "coher": [6, 157], "done": [6, 87, 164, 171, 183, 189, 194, 215, 217], "onc": [6, 215, 216, 217], "handl": [6, 19, 32, 55, 70, 106, 123, 124, 130, 193, 196, 205, 215, 217], "better": [6, 20, 124, 201, 215], "remov": [6, 71, 113, 124, 169, 170, 171, 215, 222], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 80, 84, 86, 87, 92, 93, 96, 109, 123, 124, 126, 130, 132, 133, 134, 135, 136, 140, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 192, 193, 198, 201, 207, 215], "far": 6, "By": [6, 18, 20, 37, 48, 49, 69, 70, 71, 77, 99, 106, 112, 113, 116, 118, 132, 143, 176, 178, 182, 183, 205], "occupi": [6, 169, 193, 194, 201, 216], "unnecessari": [6, 37, 193, 215], "pack": [6, 199], "assum": [6, 35, 49, 81, 98, 106, 113, 118, 130, 146, 147, 150, 169, 179, 180, 183, 216, 217, 219, 222], "refer": [6, 7, 87, 117, 123, 164, 215, 217, 218, 222], "ensur": [6, 144, 145, 216, 220, 222], "intend": [6, 77, 107, 185, 216, 217], "properli": 6, "higher": [6, 141, 143, 144, 145, 215, 216, 220], "help": [6, 11, 216, 217, 220], "defend": [6, 219], "crosstalk": [6, 62, 63, 156, 189, 215, 217], "expens": 6, "longer": [6, 107, 215], "more": [6, 19, 55, 132, 153, 185, 201, 215, 216, 219, 220], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 107, 215], "readi": [6, 218], "execut": [6, 34, 35, 123, 158, 166, 169, 185, 189, 215, 216, 217, 218, 219, 220, 222], "sample_r": [6, 124, 125, 126, 127], "_finish_schedul": 6, "fuse": [6, 87, 215], "distanc": [6, 215], "correct": [6, 13, 62, 63, 77, 81, 115, 156, 215, 217, 222], "_fuse_long_distance_virtual_rz": 6, "virtualrz": [6, 77, 80, 81, 113, 151, 215, 216], "next": [6, 192, 216, 217, 220], "fluxpuls": [6, 151], "resolve_timebox": [6, 201, 215, 222], "compute_neighborhood_hard_boundari": 6, "children": [6, 198, 201, 216, 222], "concaten": [6, 201, 216, 222], "strategi": [6, 193, 194, 200, 201], "solid": 6, "rectangl": [6, 222], "longest": [6, 55, 193, 199], "within": [6, 13, 162, 169, 200, 216, 219], "tetri": [6, 153, 199], "tightli": [6, 199], "possibl": [6, 20, 55, 113, 155, 169, 183, 193, 194, 199, 200, 201, 215, 216, 219, 220, 222], "still": [6, 11, 63, 170], "overlap": [6, 153, 159, 168, 193, 216, 222], "regardless": [6, 220], "boundari": [6, 58, 60, 193, 199, 200], "modifi": [6, 7, 11, 169, 170, 192, 193, 194, 195, 196, 205, 215, 217, 219, 222], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 113, 169, 170, 189, 201, 215, 216, 217, 218, 222], "becom": [6, 11, 37, 176, 222], "atom": [6, 20, 198, 199, 201, 216, 217, 222], "isn": 6, "t": [6, 7, 63, 84, 96, 117, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 175, 176, 178, 181, 183, 215, 219], "alreadi": [6, 11, 61, 169, 201, 215, 217], "precomput": [6, 169, 201, 217], "typic": [6, 49, 69, 124, 136, 139, 185, 189, 216, 217, 220, 222], "want": [6, 11, 19, 48, 49, 69, 71, 74, 88, 89, 97, 136, 140, 165, 217], "top": [6, 18, 20, 217], "layer": 6, "would": [6, 11, 17, 49, 80, 215, 217, 220, 222], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 103, 106, 110, 129, 140, 169, 177, 185, 193, 194, 198, 201, 215, 216, 217, 218, 220, 222], "lower": [6, 218], "where": [6, 48, 49, 55, 63, 69, 70, 71, 74, 75, 83, 96, 108, 109, 117, 124, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 159, 169, 176, 178, 181, 183, 185, 193, 196, 215, 216, 217, 219], "improv": [6, 37, 69, 71, 74, 215, 219], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 71, 74, 77, 106, 107, 109, 132, 143, 169, 170, 176, 178, 182, 183, 185, 215, 216, 217, 218, 222], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 20, 60, 162, 217, 222], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 61, 107, 123, 169, 195, 196, 215, 216, 217, 219, 222], "addit": [6, 11, 18, 20, 31, 32, 35, 48, 49, 69, 75, 77, 106, 107, 109, 115, 157, 169, 182, 185, 201, 217, 219, 222], "ideal": [6, 16, 53, 185, 189], "model": [6, 131, 141, 175, 189, 216], "correctli": [6, 17, 215, 217], "frame": [6, 77, 156, 183, 205, 215, 217], "subspac": [6, 75, 185, 189, 216, 217], "connect": [6, 11, 107, 185, 201, 216, 217, 222], "those": [6, 32, 69, 71, 74, 106, 139, 185, 201, 215, 217, 219, 222], "henc": [6, 205], "evolut": 6, "Of": 6, "cours": [6, 53, 217], "realiti": [6, 53], "possibli": [6, 49, 220], "applic": [6, 217, 219], "essenti": [6, 139, 140, 217], "precis": [6, 216], "interest": 6, "howev": [6, 18, 55, 106, 132, 143, 165, 176, 178, 182, 183, 216, 217, 219], "well": [6, 82, 107, 158, 169, 185, 211, 214, 215, 217, 218, 220, 222], "local": [6, 77, 113, 156, 164, 205], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 71, 74, 107, 132, 143, 152, 176, 178, 182, 183, 215, 216, 217, 222], "end": [6, 11, 40, 74, 77, 80, 81, 113, 117, 136, 140, 146, 147, 153, 168, 169, 170, 181, 215, 216, 219, 220], "carri": [6, 216, 219], "meant": [6, 11], "zero": [6, 11, 35, 49, 55, 63, 64, 77, 87, 98, 103, 135, 136, 139, 140, 153, 159, 165, 182, 183, 185, 192, 195, 196, 215, 216], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 77, 124, 132, 133, 134, 136, 137, 138, 139, 140, 142, 144, 146, 147, 149, 150, 154, 159, 169, 183, 185, 198, 201, 211, 214, 215, 216, 217, 220, 222], "involv": [6, 20, 35, 216, 218, 222], "compress": [6, 216], "duplic": 6, "transfer": [6, 98, 219], "drop": 6, "point": [6, 113, 136, 137, 138, 140, 146, 147, 148, 192, 193, 194, 217], "finalis": 6, "unless": [6, 20, 132, 143, 176, 178, 182, 183, 201, 215, 217, 219, 222], "process": [6, 81, 153, 216, 221], "call": [6, 11, 13, 17, 18, 20, 77, 107, 116, 215, 217, 222], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 20, 31, 37, 49, 84, 174, 215, 216, 217, 218], "shortcut": [6, 11, 215, 222], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 113, 123, 124, 132, 135, 143, 165, 169, 170, 176, 178, 182, 183, 185, 195, 201, 215, 216, 217, 219, 222], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 217], "nativ": [7, 33, 185, 222], "extend": [7, 13, 15, 55, 136, 168, 169, 170, 193, 194, 195, 196, 201], "ones": [7, 34, 35, 199, 201, 217], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 71, 98, 107, 109, 113, 169, 178, 181, 185, 193, 196, 205, 215, 216, 217], "gate_definit": 7, "section": [7, 216, 217, 219, 220, 222], "yaml": [7, 8, 215], "file": [7, 8, 219], "expos": 7, "canon": [7, 52, 102, 215, 217], "being": [7, 49, 98, 136, 185, 215, 217, 220], "redefin": [7, 11, 132, 143, 176, 178, 182, 183], "undefin": [7, 75, 216], "don": [7, 175, 219], "config": [8, 123, 215], "circuitoperationlist": [10, 215], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 18, 40, 83, 98, 106, 107, 113, 115, 117, 159, 183, 201, 215, 216, 217], "mostli": [11, 216], "conveni": [11, 20, 69, 71, 74, 201, 215, 218], "enabl": [11, 55, 77, 84, 179, 180, 215], "easi": [11, 222], "creation": [11, 215, 217], "calcul": [11, 12, 15, 77, 181, 183, 215], "onto": 11, "import": [11, 56, 217, 219, 222], "present": [11, 12, 18, 20, 75, 169, 193], "think": 11, "about": [11, 82, 155, 157, 158, 161, 215, 216, 220, 222], "qiskit": [11, 215], "quantumregist": 11, "most": [11, 217, 218], "simpli": [11, 37, 113, 185, 216], "taken": [11, 215], "you": [11, 18, 69, 70, 77, 165, 185, 215, 218, 219, 222], "good": 11, "practic": [11, 217, 220, 222], "mutabl": [11, 169], "regist": [11, 12, 13, 18, 101, 102, 185, 215, 216, 218, 222], "usabl": [11, 20, 37, 215], "fundament": 11, "popul": [11, 74, 75], "qb1": [11, 69, 185, 217, 222], "qbn": 11, "qb2": [11, 69, 185, 217, 220, 222], "altern": [11, 216, 220], "To": [11, 37, 55, 169, 217, 218, 219, 220, 222], "your": [11, 217, 219], "own": [11, 17, 20, 33, 185, 215, 216, 217, 219], "initi": [11, 32, 33, 135, 143, 176, 183, 215, 216, 217], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 185, 215, 216, 217], "__add__": [11, 69, 71, 74, 215], "__mul__": [11, 215], "__getitem__": [11, 215], "3": [11, 37, 63, 67, 68, 69, 73, 85, 111, 142, 193, 219, 221, 222], "circuit1": [11, 222], "circuit2": [11, 222], "4": [11, 57, 92, 93, 94, 95, 115, 117, 142, 219, 221], "produc": [11, 195, 215, 216, 220, 222], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 83, 84, 87, 98, 99, 100, 106, 108, 113, 114, 116, 117, 119, 156, 185, 204, 205, 215, 217, 222], "abov": [11, 216, 217, 218, 219, 222], "shorten": 11, "exactli": [11, 20, 185, 198], "syntax": [11, 215, 216, 217, 219, 222], "usual": [11, 17, 55, 160, 183, 216, 217, 220, 222], "attach": [11, 219], "init": [11, 215, 217], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 76, 77, 78, 79, 85, 110, 111, 185, 217], "unitari": [11, 12, 13, 15, 40, 58, 60, 75, 100, 103, 114, 119, 185, 215, 216, 217], "propag": [11, 15, 58, 60, 106, 215, 220], "entir": [11, 13, 124, 215], "u": [11, 57, 118, 215], "get_unitari": 11, "dimens": [11, 136, 139], "alwai": [11, 20, 34, 35, 37, 77, 144, 145, 185, 189, 193, 195, 217], "qb3": [11, 69, 185, 220, 222], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 117, 136, 185, 215, 217], "correspond": [11, 13, 18, 37, 53, 57, 58, 59, 60, 63, 106, 112, 116, 118, 132, 135, 136, 139, 155, 185, 193, 201, 216, 220], "three": [11, 84], "big": [11, 12, 13, 185], "endian": [11, 12, 13, 185], "convent": [11, 12, 77, 129], "With": [11, 19, 69, 70, 71, 74, 220], "action": [11, 12, 185, 216], "ident": [11, 15, 53, 59, 98, 215], "physical_circuit": 11, "map_loci": [11, 215], "physical_qubit": 11, "exampl": [11, 14, 17, 77, 124, 135, 185, 215, 216, 217, 219, 222], "alic": 11, "zzz": 11, "qb5": [11, 185], "qb10": 11, "occurr": 11, "mani": [11, 215, 217, 222], "run": [11, 139, 215, 220], "parallel": [11, 185, 215], "larg": [11, 136, 140, 216], "left": [11, 20, 31, 35, 48, 49, 69, 70, 71, 107, 109, 113, 195, 196, 216, 217, 220], "ignor": [11, 37, 135, 215], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 124, 133, 134, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 150, 176, 183], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 73, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 176, 178, 179, 180, 181, 182, 183, 215, 217], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 73, 92, 93, 94, 95, 100, 114, 119, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 178, 179, 180, 181, 182, 183, 185, 215, 217], "locus_indic": 11, "append": [11, 35, 69, 169, 170, 215], "store": [11, 13, 17, 20, 48, 49, 69, 70, 71, 99, 106, 113, 139, 156, 185, 217], "select": [11, 15, 220, 222], "indic": [11, 15, 80, 135, 136, 139, 174, 216, 219], "qb4": [11, 220], "param": [11, 13, 20, 185, 215, 217], "barrier": [11, 12, 185, 217], "compos": [11, 189, 218], "safer": 11, "togeth": [11, 37, 48, 69, 71, 74, 80, 193, 201, 215, 216, 217, 222], "probabl": 11, "wire": 11, "k": [11, 14, 136, 144, 145, 146, 147, 148, 149, 150, 183], "achiev": [11, 217], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 179, 180, 201], "make_circuit": [11, 215], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 73, 149, 150, 163, 169, 183, 193, 199, 211, 213, 214, 215], "total": [11, 81, 170, 189, 222], "across": [11, 140, 144, 145], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 71, 74, 215, 217, 219], "skip": [12, 169], "product": [12, 139, 216, 219], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 71, 107, 109, 113, 216, 217, 222], "fetch": 13, "Then": [13, 201, 217], "hilbert": [13, 15], "whole": [13, 63, 216, 219], "perm": 14, "permut": [14, 215], "state": [14, 40, 53, 74, 75, 77, 83, 87, 103, 106, 107, 113, 115, 117, 185, 205, 216, 217, 219, 220], "vector": [14, 136, 215], "index": [14, 63, 123, 170, 192, 216, 218], "th": [14, 136, 183], "old": 14, "kron": [14, 185], "c": [14, 181, 201, 219], "n_qubit": 15, "larger": [15, 169, 216], "system": [15, 20, 215, 219, 220, 222], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 107, 110, 111, 113], "hash": 15, "purpos": [15, 20, 69, 71, 74, 215, 217, 219], "rang": [15, 135, 136, 140, 146, 147, 176, 201, 215], "abstract": [16, 99, 185, 216, 217, 218], "conceptu": [16, 216], "wherea": [16, 69, 153, 185, 216, 217], "concret": [16, 185, 216, 217, 218, 222], "One": [16, 20, 99, 216], "approxim": [16, 136, 140], "abc": [16, 20, 34, 36, 40, 53, 62, 66, 75, 83, 99, 103, 108, 115, 117], "customiqwaveform": [16, 66, 69, 70, 71, 83, 86, 87, 217], "singlepulseg": [16, 83, 98, 215], "compositecach": 16, "gate_implement": [17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 75, 83, 103, 108, 115, 117], "__call__": [17, 20, 31, 35, 48, 49, 69, 71, 74, 77, 106, 107, 109, 215, 217], "normal": [17, 20, 37, 63, 144, 145, 148, 183, 185, 204, 215, 217, 219], "_timebox_cach": [17, 20], "trust": 17, "itself": [17, 18, 77, 107, 215, 217, 220], "member": [17, 18, 37, 38, 39, 58, 60, 106, 112, 116, 118, 215, 217], "consist": [17, 48, 49, 84, 87, 98, 109, 132, 143, 169, 176, 178, 182, 183, 185, 215, 217, 219], "deduc": 17, "locat": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 217], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 71, 74, 104, 105, 106, 112, 116, 118, 215, 216, 217], "identifi": [17, 20, 37, 124, 152, 169, 217, 219], "cast": 17, "extra": [17, 37, 77, 87, 217], "string": [17, 63, 67, 68, 69, 73, 162, 174], "id": [17, 20], "further": [17, 182, 183, 201], "did": [17, 215], "come": [17, 217, 222], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 215, 217], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 217], "term": [18, 132, 133, 134, 137, 138, 142, 143, 144, 146, 147, 148, 150, 176, 178, 182, 183, 185, 216, 217, 218, 219], "pre": [18, 135, 142, 143, 144, 145, 183], "_call": [18, 20, 31, 35, 37, 48, 49, 55, 69, 70, 71, 74, 77, 84, 87, 98, 99, 106, 107, 109, 113, 116, 118, 215, 217], "code": [18, 215, 217, 219, 220], "subclass": [18, 20, 31, 33, 35, 48, 49, 69, 70, 71, 107, 109, 113, 132, 143, 176, 178, 182, 183, 185, 215, 217], "declar": 18, "abl": [18, 130, 215], "verifi": [18, 215], "registered_g": [18, 37, 106, 112, 116, 118, 215, 217], "possib": 18, "customizable_g": [18, 37, 106, 112, 116, 118], "custom": [18, 19, 20, 69, 70, 71, 215, 216, 218], "tell": 18, "oilcalibrationdata": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 109, 110, 111, 112, 113, 116, 118, 187, 217], "There": [18, 37, 87, 106, 112, 116, 118, 217, 220, 222], "These": [18, 20, 37, 106, 112, 116, 118, 193, 194, 201, 215, 216, 217, 222], "ocalibrationdata": [18, 37, 106, 112, 116, 118], "under": [18, 20, 37, 101, 106, 112, 116, 118, 189, 201, 219], "subset": [18, 20, 37, 58, 106, 112, 116, 118], "customiz": [18, 37, 106, 112, 116, 118], "default_implement": [18, 38, 39, 185], "design": [18, 38, 39, 215, 219], "fill": [18, 38, 39, 216], "classmethod": [18, 20, 31, 48, 49, 63, 69, 70, 71, 84, 86, 87, 88, 89, 96, 97, 99, 106, 107, 109, 113, 215], "optional_calibration_kei": [18, 20], "item": [18, 20, 169], "level": [18, 20, 81, 82, 185, 216, 217, 218, 220, 222], "construct": [18, 20, 33, 69, 84, 85, 98, 109, 110, 111, 132, 143, 176, 178, 182, 183, 215, 216, 218, 222], "sought": 18, "deprec": [18, 215], "waveform": [19, 20, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 109, 123, 131, 132, 133, 134, 135, 141, 143, 144, 145, 156, 157, 158, 161, 176, 177, 178, 179, 180, 181, 182, 183, 211, 213, 214, 215, 216, 218], "iqpuls": [19, 31, 48, 69, 70, 71, 84, 86, 87, 88, 89, 96, 97, 98, 109, 113, 151, 154, 159, 162, 164, 205, 213, 215, 216, 217], "info": [19, 20, 215, 217], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 109, 132, 134, 138, 145, 147, 157, 215, 217, 221, 222], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 97, 157, 217], "wave_q": [19, 67, 68, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 97, 157, 217], "dependent_wav": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "consid": [19, 55, 64, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 139, 192, 195, 196, 215, 217, 222], "share": [19, 32, 49, 67, 68, 69, 70, 71, 72, 73, 74, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 219, 222], "drag": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 215, 217], "root_paramet": [19, 49, 69, 70, 71, 77, 86, 87, 96], "independ": [19, 69, 70, 71, 86, 87, 96, 169, 170, 185, 216, 220], "excluded_paramet": [19, 48, 49, 88, 89, 97], "exclud": [19, 48, 49, 88, 89, 97, 219], "__init__": [20, 215, 217], "via": [20, 63, 87, 106, 107, 118, 148, 181, 183, 215, 217], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 76, 77, 78, 79, 83, 84, 87, 98, 99, 100, 108, 113, 114, 115, 117, 119, 205, 215, 217, 222], "input": [20, 37, 69, 71, 74, 96, 216, 217], "reimplement": [20, 31, 35, 48, 49, 69, 70, 71, 107, 109, 113, 217], "without": [20, 37, 71, 136, 139, 140, 163, 168, 201, 215, 216, 217, 219, 222], "even": [20, 70, 146, 193, 194, 215, 217, 219], "though": [20, 70, 215, 216, 217], "avoid": [20, 135, 136, 215], "unpredict": 20, "raw": [20, 154, 162, 163, 174, 220], "access": [20, 217, 222], "special_implement": [20, 215], "special": [20, 49, 80, 98, 175, 185, 215, 217, 219, 222], "never": [20, 215, 217], "explicitli": [20, 69, 71, 74, 215, 217, 219, 222], "uniqu": [20, 123, 185, 216, 217], "sub_implement": 20, "sub": [20, 222], "len": [20, 69, 71, 74, 136, 139, 150], "At": [20, 77, 136, 140, 217], "qualified_nam": 20, "qualifi": 20, "f": [20, 37, 63, 69, 70, 71, 74, 136, 176, 178, 181, 183, 185, 217], "may_have_calibr": 20, "kwarg": [20, 31, 35, 48, 49, 69, 77, 84, 88, 89, 97, 106, 107, 109], "signatur": [20, 31, 35, 48, 49, 77, 106, 107, 109, 185, 215, 217], "suffici": [20, 31, 35, 48, 49, 77, 106, 107, 109, 124, 183], "insid": [20, 31, 35, 37, 48, 49, 77, 87, 106, 107, 109, 176, 192, 201, 215, 216], "construct_factoriz": 20, "to_timebox": 20, "wrap": [20, 222], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 71, 107, 109, 113, 169], "unimpl": [20, 31, 35, 48, 49, 69, 70, 71, 107, 109, 113], "make": [20, 31, 35, 48, 49, 69, 70, 71, 77, 107, 109, 113, 158, 165, 169, 170, 185, 189, 192, 215, 217, 219, 222], "sens": [20, 31, 35, 48, 49, 69, 70, 71, 107, 109, 113], "convert_calibration_data": 20, "channel_prop": 20, "_top_level": 20, "frequenc": [20, 48, 67, 68, 69, 70, 71, 72, 73, 77, 96, 97, 109, 125, 126, 132, 135, 136, 139, 140, 142, 143, 144, 146, 147, 149, 150, 157, 176, 178, 182, 183, 215, 217], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 92, 93, 94, 95, 96, 97, 110, 124, 125, 127, 132, 135, 136, 139, 140, 143, 150, 176, 178, 182, 183, 217], "parameter": 20, "treatment": 20, "n_sampl": [20, 32, 84, 86, 87, 96, 109, 132, 133, 134, 135, 143, 144, 145, 176, 177, 178, 179, 180, 181, 182, 183], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 107, 110, 111], "cl": 20, "specifi": [20, 31, 37, 132, 158, 199, 217, 220, 222], "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 169, 219], "dot": 20, "root": [20, 58], "settingnod": [20, 128, 129], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 71, 99, 106, 113, 217], "operation_nam": [20, 48, 49, 69, 70, 71, 99, 106, 113], "implementation_nam": [20, 48, 49, 69, 70, 71, 99, 106, 113], "behaviour": [20, 48, 49, 69, 70, 71, 99, 106, 113, 215, 217], "get_custom_locus_map": [20, 63, 107, 215, 217], "component_to_channel": [20, 63, 107, 129], "wrt": 20, "know": [20, 217], "often": [20, 215, 217], "set_locus_map": 20, "frozenset": [20, 63, 107, 217], "matter": [21, 77, 217], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 73, 76, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 110, 111, 186, 215], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 71, 74, 77, 84, 109, 157, 159, 160, 161, 198, 215, 216, 217, 222], "_get_puls": [31, 86, 87, 88, 89, 96, 97, 215], "_get_pulse_channel": 31, "basic": [31, 170, 215, 217], "insert": [31, 80, 215], "overridden": [31, 185, 217], "wave": [32, 156, 157, 161, 178], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 107, 110, 111, 152, 154, 162, 163, 198, 201, 215, 216, 217], "format": [32, 215, 219], "been": [33, 37, 107, 201, 215, 216, 219, 220], "sever": [33, 153, 185, 215, 217, 220, 222], "scheme": [33, 216], "likewis": 33, "sometim": [33, 216], "metaoper": [34, 35, 185, 217], "forc": [34, 53, 124, 130], "tempor": [34, 35], "qudit": [35, 185], "metainstruct": 35, "caus": [35, 37, 55, 63, 215, 219, 220], "turn": [35, 215], "impos": 35, "relat": [35, 81, 215, 220, 222], "classic": [36, 37, 215, 220], "ccprx_composit": [36, 38, 39, 215, 220], "ccprx_composite_dragcosinerisefal": [36, 215], "ccprx_composite_draggaussian": [36, 215], "discrimin": [37, 74], "obtain": [37, 98, 132, 136, 216, 219, 221], "segment": [37, 84, 107, 162, 164, 167, 169, 174, 192, 193, 194, 215, 216, 220], "activ": [37, 160, 216], "underneath": 37, "control_delai": [37, 220], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111, 132, 137, 138, 143, 146, 147, 148, 150, 157, 169, 176, 178, 182, 183, 216, 217, 220], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111, 203, 215], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111, 203], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111], "instrument": [37, 113, 124, 127, 135, 151, 167, 220], "drive_control": [37, 128], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 71, 74, 215], "conditionalinstruct": [37, 69, 71, 74, 151, 162, 220], "until": [37, 113, 216], "enough": [37, 220], "arriv": [37, 220], "place": [37, 169, 180, 182, 193, 194, 219], "sequenti": 37, "care": [37, 222], "yourself": [37, 218], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 87, 89, 91, 93, 95, 100, 110, 114, 205], "multipl": [37, 69, 71, 74, 107, 124, 130, 132, 143, 148, 155, 159, 162, 176, 178, 182, 183, 215, 216], "__": [37, 63, 69, 70, 71, 74, 215], "current": [37, 69, 71, 74, 77, 192], "hw": [37, 69, 71, 74, 215], "per": [37, 69, 71, 74, 185, 215], "listen": [37, 215], "user": [37, 63, 69, 71, 74, 135, 183, 201, 215, 216, 217, 220, 222], "drag_gaussian": [39, 215, 222], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 76, 77, 78, 79, 87, 108, 113, 115, 117, 119, 205, 215, 217], "flip": [40, 215], "rel": [40, 77, 132, 143, 150, 157, 176, 178, 182, 183, 215, 216, 217, 222], "11": [40, 221], "text": [40, 75, 87, 181, 183, 219], "begin": [40, 77, 80, 117, 152, 159, 170, 181, 192, 195, 196, 215, 220, 222], "pmatrix": [40, 117], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 75, 77, 217], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 215], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 215], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cz": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 75, 77, 113, 185, 215, 216, 217, 221, 222], "cosinerisefal": [41, 42, 46, 50, 51, 76, 78, 79, 88, 89, 97, 182], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 76, 77, 78, 79, 217], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 132, 135, 143, 176, 178, 180, 182, 183, 215, 217], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 110, 132, 133, 134, 143, 144, 145, 181, 182, 183, 217], "crf": [41, 42, 45, 46, 50, 51, 76, 78, 79, 88, 89, 97], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 73, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 110], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 110, 132, 133, 134, 135, 143, 144, 145, 181, 182, 183], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 76, 78, 79, 85, 88, 89, 97, 110, 111, 180, 181, 182], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 76, 77, 78, 79, 217], "cosin": [42, 45, 85, 97, 110, 111, 132, 133, 134, 137, 138, 139, 140, 142, 146, 147, 148, 149, 175, 176, 179, 180, 182, 183, 215], "rise": [42, 45, 84, 85, 97, 110, 111, 179, 180, 181, 182, 215], "fall": [42, 45, 84, 85, 97, 110, 111, 179, 181, 182, 185, 215], "ac": [42, 45, 48, 84, 85, 109, 110, 111, 215], "stark": [42, 45, 48, 84, 85, 109, 110, 111, 215], "first_qubit": [42, 45], "mcrf": [42, 45, 110], "modulation_frequ": [42, 45, 110, 157, 182], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 110, 175], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 78, 175, 215], "coupling_strength_norm": [44, 45, 46, 78, 183], "frequency_initial_norm": [44, 45, 46, 78, 183], "frequency_to_minimize_norm": [44, 45, 46, 78, 183], "lambda_1": [44, 45, 46, 78, 183], "lambda_2": [44, 45, 46, 78, 183], "squid_asymmetri": [44, 45, 46, 78, 183], "truncatedgaussiansmoothedsquar": [47, 51, 79, 182], "tgss": [47, 51, 79], "analog": 48, "tune": [48, 131, 132, 133, 134], "_ac_stark_puls": [48, 109], "phase_incr": [48, 109, 110, 113, 157, 164], "quadratur": [48, 109, 157], "pi": [48, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 109, 115, 116, 117, 133, 134, 136, 137, 138, 139, 144, 145, 148, 149, 176, 177, 178, 181, 204, 215, 217, 220, 222], "discret": 49, "mediat": [49, 75], "coupl": [49, 183], "tunabl": [49, 221], "arbitrari": [49, 70, 96, 97, 113, 117, 159, 205, 215, 220, 222], "assign": [49, 69, 70, 71, 74, 123, 215], "slot": 49, "move": [49, 76, 77, 78, 79, 80, 192, 215, 222], "flux_puls": 49, "radian": [49, 83, 84, 98, 99, 108, 113, 117, 157, 164, 178, 204], "maximum": [54, 64, 107, 144, 145, 169, 183, 193], "up": [55, 69, 71, 74, 77, 81, 124, 130, 144, 145, 169, 183, 193, 215, 217], "hardwar": [55, 164, 185, 211, 214, 216, 217, 218, 220], "again": 55, "much": [55, 70, 216], "why": [55, 217], "10": [55, 64, 75, 218, 221], "except": [55, 69, 71, 87, 206, 208, 209, 210, 215, 216, 217, 219], "enumer": [56, 58, 60], "xygat": [56, 59, 99], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 221], "j": [57, 59, 63, 136, 221], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 217], "enum": [58, 60, 197, 199, 200], "qualnam": [58, 60, 199, 200], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 117, 118, 119], "clifford": [60, 99], "axi": [60, 83, 115, 117, 205, 215, 217], "xy": [60, 83, 99], "plane": [60, 83, 115], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 101, 102], "error": [61, 136, 140, 183, 187, 201, 208, 209, 210, 215, 216, 222], "fluxmultiplexer_samplelinear": [62, 215], "flux_multiplex": 63, "linear": [63, 98, 176, 177], "multiplex": [63, 69, 71, 74, 106, 198, 215], "cross": [63, 219, 222], "talk": [63, 222], "element": [63, 132, 136, 140, 201, 215, 216, 222], "c_ij": 63, "aris": [63, 219], "a_i": [63, 96], "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 136], "spars": 63, "form": [63, 183, 215, 216, 217, 219], "xarrai": 63, "matrix_index": 63, "relev": 63, "flat": [63, 129], "np": [63, 185, 217, 220, 222], "matrix_el": 63, "experiment": 63, "r": [63, 115, 181, 221], "d": [63, 136, 176, 201, 219, 221], "everyth": [63, 222], "here": [63, 87, 150, 175, 183, 217, 220, 222], "subject": [63, 216, 219], "1e": [64, 171, 195, 196], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 72, 106, 113], "basi": [66, 67, 68, 72, 106, 113, 117, 132, 135, 136, 139, 140, 142, 144, 145, 146, 147, 148, 149, 185, 219], "measure_customwaveform": [66, 67, 68, 70, 74, 217], "measure_const": [66, 215], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 71, 215], "probepulse_customwaveforms_nointegr": [66, 72, 215], "probe_const": 66, "shelved_measure_customwaveform": [66, 73, 215], "shelved_measure_const": [66, 215], "dispers": [67, 68, 69, 72, 74], "acquisition_delai": [67, 68, 69, 70, 73], "acquisit": [67, 68, 69, 70, 71, 73, 74, 152, 160, 215, 220], "acquisition_typ": [67, 68, 69, 73], "threshold": [67, 68, 69, 71, 73, 74, 162], "amplitude_i": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 111, 217], "amplitude_q": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 111, 217], "integration_length": [67, 68, 69, 70, 73, 215], "integr": [67, 68, 69, 70, 71, 73, 126, 154, 162, 163, 183, 215, 220], "integration_threshold": [67, 68, 69, 73], "integration_weights_i": [67, 68, 69, 73], "weight": [67, 68, 69, 70, 73, 92, 93, 132, 133, 134, 136, 140, 154, 162, 215], "dtype": [67, 68, 69, 73, 133, 134, 144, 145, 176, 178, 179, 180, 181, 182, 183, 217], "float64": [67, 68, 69, 73], "integration_weights_q": [67, 68, 69, 73], "demolit": 68, "intermedi": [69, 217], "IF": 69, "center": [69, 126, 135, 136, 150, 181, 182, 183], "offset": [69, 159, 181, 183], "readouttrigg": [69, 70, 71, 74, 151, 162, 198, 216, 218], "_multiplexed_timebox": [69, 71], "multiplexedprobetimebox": [69, 71, 74, 197, 215], "probe_timebox": [69, 71, 74], "_time_trac": 69, "time_trac": [69, 70, 152], "_build_instruct": [69, 70, 71], "waveform_param": [69, 70, 71], "root_param": [69, 70, 71], "if_freq": [69, 71], "acquisitionmethod": [69, 70, 151, 154, 160, 163], "do_acquisit": [69, 71, 74], "nake": [69, 71, 74], "trigger": [69, 70, 71, 74, 160, 169, 198, 215, 220], "goe": [69, 71, 74], "maintain": [69, 71, 74], "backward": [69, 71, 74], "rout": [69, 71, 74, 162], "probelin": [69, 71, 74, 216, 220], "behav": [69, 71, 74, 153, 165], "featur": [69, 71, 74, 217, 218], "mode": [69, 71, 74], "pick": [69, 71, 74], "anywher": [69, 71, 74, 162, 215], "pass": [69, 71, 74, 80, 81, 82, 215, 220], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "due": [70, 75, 77, 109, 156, 180, 216], "limit": [70, 84, 116, 211, 214, 215, 219, 222], "contrari": 70, "probl": 70, "similar": [71, 123, 215, 217], "shelv": [73, 74, 215], "surround": 73, "prx_12": [73, 74, 215], "standard": [74, 129, 222], "swap": [74, 75], "back": [74, 77, 185, 192], "roughtli": 74, "collaps": 74, "advantag": 74, "suscept": 74, "t_1": 74, "decai": 74, "_skip_overrid": 74, "exchang": 75, "invari": 75, "span": 75, "00": [75, 142], "rangl": [75, 103], "01": [75, 142], "anyth": [75, 217], "orthogon": [75, 217], "involut": 75, "_": [75, 140, 144, 149, 150], "i_": 75, "langl": 75, "complex": [75, 92, 93, 94, 95, 154, 217, 220, 222], "degre": [75, 115], "freedom": [75, 220], "continuum": 75, "cancel": [75, 215], "movemark": [75, 77, 215], "move_customwaveform": [75, 76, 78, 79, 81, 215], "move_crf_crf": [75, 215], "move_slepian_crf": [75, 215], "move_tgss_crf": 75, "detun": [76, 77, 78, 79, 80, 81, 215], "bookkeep": 77, "unknown": [77, 185, 209], "pair": [77, 159, 179, 180, 185, 217], "came": 77, "sandwich": [77, 81, 82, 215], "annot": [77, 80, 219], "mark": [77, 219], "counteract": 77, "accumul": 77, "proport": 77, "sum": [77, 81, 132, 143, 159, 170, 176, 178, 182, 183, 201, 222], "complet": [77, 216], "apply_move_gate_phase_correct": [77, 215], "track": [77, 170, 193, 215, 219, 222], "right": [80, 215, 216, 219, 220, 222], "link": [80, 175, 215, 219], "noth": [80, 167, 169, 189, 191, 195, 196, 217, 219], "explicit": [80, 215, 216], "aforement": [80, 170, 193, 217], "marker": 80, "post": [80, 135, 143], "compil": [80, 82, 124, 153, 218, 219, 222], "apply_detuning_correct": 81, "validate_prx": 82, "prepar": [82, 219], "conform": 82, "constraint": [82, 159, 216, 220], "unmodifi": 82, "x": [83, 84, 87, 89, 98, 99, 115, 117, 215, 217, 221], "r_": [83, 87, 113], "phi": [83, 87, 108, 113, 117, 118, 119, 178, 205, 215], "theta": [83, 87, 113, 117, 118, 119, 183, 205, 215], "co": [83, 96, 117, 133, 136, 137, 139, 144, 145, 148, 149, 176, 178], "y": [83, 99, 115, 117, 119, 215], "sin": [83, 96, 117, 134, 138, 181], "r_z": [83, 87, 108, 113, 117, 118], "r_x": 83, "dagger": 83, "around": [83, 115, 117, 136, 182, 205], "li": 83, "bloch": [83, 117, 217], "sphere": [83, 117, 217], "prxgateimplement": [83, 84, 98, 108], "prx_singlepulse_gateimplement": [83, 86, 87, 215], "prx_customwaveform": [83, 88, 90, 92, 94, 96, 215, 217], "prx_draggaussian": 83, "prx_dragcosinerisefal": 83, "prx_customwaveformssx": [83, 89, 91, 93, 95, 215], "prx_draggaussiansx": [83, 215], "prx_dragcosinerisefallsx": [83, 215], "prx_fastdragsx": [83, 215], "prx_fastdrag": [83, 215], "prx_hddragsx": [83, 215], "prx_hddrag": [83, 215], "abc_constant_smooth": [83, 85, 108], "constant_prx_with_smooth_rise_fal": [83, 108, 111, 215], "prx_modulatedcustomwaveform": [83, 97, 215], "prx_modulateddragcosinerisefal": [83, 215], "arbitrarili": [84, 179, 180, 215], "smooth": [84, 179, 180], "rise_waveform": [84, 85, 111], "main_waveform": [84, 85, 111], "fall_waveform": [84, 85, 111], "middl": [84, 182], "memori": [84, 215, 216], "doesn": [84, 215], "_main_puls": 84, "main": [84, 216, 217], "_rise_puls": 84, "_fall_puls": 84, "cosinefal": [85, 111, 175], "cosineris": [85, 111, 175], "iq": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 124, 125, 132, 143, 154, 159, 162, 163, 205, 211, 214, 215], "hot": [86, 87, 96], "swappabl": [86, 87, 96], "rest_of_calibration_data": [86, 87, 96], "x_pi": [86, 88, 215], "sx": [87, 93, 95, 116, 215], "manipul": [87, 217], "formula": 87, "rz_after": [87, 89, 91, 93, 95], "rz_befor": [87, 89, 91, 93, 95, 215], "sqrt": [87, 89, 115, 215], "cosinerisefallderiv": [88, 89, 97, 175], "vz": [89, 91, 93, 95], "prx_customwaveformsvz": [89, 91], "truncatedgaussian": [90, 91, 217], "tg": [90, 91], "truncatedgaussianderiv": [90, 91, 217], "gaussian": [91, 217], "scale": [92, 94, 98, 135, 136, 156, 157, 161, 216, 217], "fdi": [92, 93], "coeffici": [92, 93, 94, 95, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 183], "compute_coefs_from_frequ": [92, 93, 94, 95, 132, 133, 134, 135, 143, 144, 145], "boolean": [92, 93, 94, 95, 135, 162], "number_of_cos_term": [92, 93, 132, 133, 134], "5": [92, 93, 136, 142, 176, 217, 219, 221, 222], "suppressed_frequ": [92, 93, 94, 95, 132, 133, 134, 135, 143, 144, 145], "suppressed_interval_width": [92, 93, 132, 133, 134], "fastdragi": [92, 93, 131, 215], "fastdragq": [92, 93, 131, 215], "hd": [94, 95, 135, 141, 143, 144, 145, 146, 147, 148, 150, 215], "hdi": [94, 95], "hddragi": [94, 95, 141, 215], "hddragq": [94, 95, 141, 215], "baseband": 96, "shape": [96, 132, 133, 134, 139, 144, 145, 161, 176, 178, 179, 180, 181, 182, 183, 218], "delta": 96, "omega_i": 96, "omega_d": 96, "a_q": 96, "omega_q": 96, "omega": [96, 176], "band": [96, 97], "static": [98, 132, 135, 143, 176, 178, 182, 183, 198, 201, 215], "_single_iq_puls": [98, 215], "resonantli": 98, "x_": 98, "linearli": [98, 217], "adjust": [98, 205, 215, 216, 220], "rx": [99, 215, 220, 222], "ry": [99, 215, 222], "xy_gat": 99, "2x2": [100, 114, 119], "impl_class": [101, 217], "set_as_default": 101, "reset_condit": [103, 220], "reset_wait": [103, 215], "__default_feedback": 104, "doubl": [104, 105], "underscor": [104, 105], "emphas": [104, 105], "fact": [104, 105], "manual": [104, 105, 178, 217], "__reset": 105, "necessari": [106, 189, 216, 217, 222], "accommod": 106, "upon": 106, "relax": [107, 215], "compar": [107, 162, 169, 215], "shot": [107, 216], "destroi": 107, "wait_box": 107, "besid": 107, "rz_virtual": 108, "rz_acstarkshift": [108, 110], "rz_acstarkshift_cosinerisefal": 108, "rz_acstarkshift_smoothconst": [108, 215], "rz_prx_composit": [108, 215], "strong": 109, "off": [109, 215], "lead": [109, 215], "shift": [109, 156], "ac_stark_puls": 109, "ac_stark_waveform": 110, "increment": [110, 113, 157, 164, 205, 215], "techniqu": [113, 118], "oscil": [113, 157, 164, 205], "shortest": 113, "algebra": [113, 164], "commut": [113, 205], "toward": 113, "hit": 113, "elimin": 113, "multi": 113, "hold": [113, 219], "diagon": 113, "immedi": [113, 189, 215], "conjug": 113, "alpha": [113, 176, 177], "accomplish": 113, "assumpt": [113, 183], "negat": 113, "sigma": [115, 217, 221], "_x": 115, "xz": 115, "90": [115, 221], "sxgate": [115, 215], "parametr": [117, 183, 217, 221], "euler": [117, 118], "lambda": [117, 118, 215, 217], "subsequ": [117, 219], "r_y": [117, 118], "express": [117, 132, 183, 219], "h": [117, 136], "8": [117, 142, 219], "http": [117, 219], "openqasm": 117, "com": 117, "languag": [117, 216, 219], "html": [117, 174, 215], "ugat": [117, 215], "lam": [118, 119], "decomposit": 118, "cdot": 118, "probechannelproperti": 121, "channelconfigur": [121, 127], "realchannelconfig": [121, 123, 125], "iqchannelconfig": 121, "channeldescript": [121, 211, 212], "instruction_t": 123, "waveform_t": 123, "add_instruct": 123, "integ": [123, 124, 155, 201, 222], "manner": 123, "instruction_duration_granular": [124, 126], "instruction_duration_min": [124, 126, 130], "compatible_instruct": [124, 126, 207], "is_iq": [124, 126], "is_virtu": [124, 126], "blocks_compon": [124, 126], "zi": 124, "hdawg": 124, "shfsg": 124, "shfqa": 124, "32": [124, 216], "16": [124, 169, 216, 221], "hack": 124, "frontend": 124, "sent": [124, 215, 216, 219], "might": [124, 216, 217, 220, 222], "duration_to_sampl": 124, "duration_to_second": 124, "duration_to_int_sampl": 124, "messag": [124, 187, 201], "check_min_sampl": 124, "close": [124, 215, 222], "test": [124, 215], "output": [124, 153, 165, 174, 185, 215, 216, 220, 222], "unaccept": 124, "round_duration_to_granular": 124, "round_up": [124, 130], "force_min_dur": [124, 130], "closest": [124, 130], "upconvers": [125, 157, 164], "center_frequ": 126, "integration_start_dead_tim": 126, "integration_stop_dead_tim": 126, "dead": 126, "real": [127, 157, 161, 162, 183, 216], "flux_control": 128, "readout_control": 128, "intern": [128, 215, 216, 222], "channel_properti": [129, 169, 194], "largest": 130, "fourier": [131, 132, 133, 134, 136, 139, 140, 183], "ansatz": [131, 132, 133, 134], "spectrum": [131, 132, 133, 134, 135, 140], "suppressedpuls": [131, 132, 141, 143], "fastdrag": [131, 133, 134], "fast_drag": [132, 133, 134, 135, 141], "envelop": [132, 133, 134, 135, 137, 138, 142, 144, 145, 146, 147, 148, 149, 157, 215, 221], "domain": [132, 140], "suppress": [132, 135, 136, 140, 142, 143, 144, 146, 147, 149, 150], "interv": [132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 149, 159, 216, 217], "accord": [132, 140, 144, 145, 201, 222], "furthermor": 132, "similarli": [132, 215, 217], "ordinari": 132, "detail": [132, 182, 183, 185, 216, 218, 220], "seri": [132, 133, 134, 135, 136, 137, 138, 148], "width": [132, 135, 169, 181, 182], "last": [132, 220, 222], "potenti": [132, 215], "cutoff": 132, "non_timelike_attribut": [132, 143, 176, 178, 182, 183, 217], "timelik": [132, 143, 176, 178, 182, 183], "dimensionless": [132, 143, 176, 178, 182, 183], "window": [132, 143, 152, 163, 176, 178, 181, 182, 183], "invers": [132, 136, 143, 176, 178, 182, 183], "sum_": [133, 134, 136, 137, 138, 144, 145, 146, 147, 148, 149], "c_n": [133, 134, 137, 138, 140], "t_p": [133, 134, 136, 137, 138, 139, 144, 145, 148, 149], "_sampl": [133, 134, 144, 145, 176, 178, 179, 180, 181, 182, 183, 217], "sample_coord": [133, 134, 144, 145, 176, 178, 179, 180, 181, 182, 183, 217], "coordin": [133, 134, 144, 145, 176, 178, 179, 180, 181, 182, 183], "expans": [135, 136], "choos": [135, 217, 219], "neglect": [135, 143], "_normal": 135, "clip": 135, "re": 135, "n_arr": [136, 139], "suppressed_freq_ranges_2darr": 136, "pulse_dur": [136, 137, 138, 139, 140, 146, 147, 148, 150], "time_scaling_factor": 136, "n_points_for_integr": [136, 140], "60": [136, 140], "evalu": [136, 137, 138, 139, 140, 146, 147, 148, 155], "eq": [136, 139, 140, 143, 144, 145, 150], "a_": 136, "nm": 136, "int_": 136, "f_": [136, 176], "l": [136, 221], "hat": 136, "_n": 136, "_m": 136, "mathrm": [136, 176], "m": [136, 221], "row": 136, "column": 136, "denot": [136, 144, 145, 217], "transform": [136, 139, 140, 215, 216, 218, 219], "g_n": [136, 139], "importantli": [136, 216], "fulli": 136, "1d": [136, 139, 140], "2d": [136, 140], "give": [136, 216, 217, 219, 222], "factor": [136, 157, 161, 183, 217], "excess": 136, "small": [136, 215, 216], "integrand": [136, 140], "50": [136, 140, 219], "recommend": [136, 140, 219], "numer": [136, 140, 183], "low": [136, 140, 217], "t_arr": [137, 138, 146, 147, 148], "nth": [139, 148], "analyt": [139, 183, 221], "a7": [139, 140], "frequency_arr": 139, "tensor": 139, "dim": 139, "cartesian": 139, "dimension": 139, "number_of_cosin": 140, "weights_tupl": 140, "suppressed_freq_ranges_2d_tupl": 140, "solv": [140, 149, 150], "optim": [140, 183, 195, 215], "a5": 140, "a12": 140, "a13": 140, "effici": [140, 220], "rb": 140, "outer": 140, "appendix": [141, 219], "hddrag": [141, 144, 145], "33333333": 142, "6": [142, 219, 221], "22857143": 142, "02857143": 142, "66666667": 142, "95238095": 142, "35714286": 142, "07936508": 142, "00793651": 142, "71428571": 142, "07142857": 142, "47619048": 142, "14285714": 142, "02597403": 142, "0021645": 142, "75000000e": 142, "16666667e": 142, "83333333e": 142, "12121212e": 142, "30303030e": 142, "02": 142, "15850816e": 142, "03": 142, "82750583e": 142, "04": 142, "7": [142, 219], "77777778e": 142, "24444444e": 142, "78787879e": 142, "82828283e": 142, "70240870e": 142, "86480186e": 142, "48640249e": 142, "55400155e": 142, "0th": 142, "solve_cosine_coefs_for_hd_drag": 142, "hd_drag": [143, 144, 145], "b1": [143, 144, 145], "b2": 143, "beta_": [144, 145, 146, 147, 150], "2n": [144, 145, 146, 147, 150], "d_k": [144, 145, 148, 149], "continu": [144, 145], "2k": [144, 145], "slightli": [144, 145], "derivative_coefs_arr": [146, 147], "cosine_coefs_arr": [146, 147, 148], "number_of_suppressed_freq": 149, "suppressed_freq_arr": 150, "b5": 150, "beta_0": 150, "ghz": 150, "realpuls": [151, 156, 211, 213, 214, 217], "multiplexediqpuls": [151, 160], "timetrac": 151, "complexintegr": [151, 162], "thresholdstatediscrimin": 151, "delay_sampl": [152, 154, 162, 163], "acquir": [152, 160, 216], "qb1__readout": 152, "strictli": [153, 216, 217], "strict": [153, 215, 216], "version": [153, 218, 219], "dd": 153, "outcom": 155, "choic": 155, "ok": [155, 157, 158, 161], "get_child_instruct": [155, 158], "child": [155, 158, 193, 194, 211, 214], "collect": [156, 216], "scale_i": [157, 217], "scale_q": [157, 217], "upconvert": 157, "carrier": 157, "success": 157, "get_waveform": [157, 158, 161], "command": [158, 216, 220], "entri": [159, 217], "outsid": [159, 216, 217], "truncat": [159, 192, 215], "neg": 159, "probe_puls": 160, "feedback_signal_label": [162, 215], "transmit": 162, "field": [162, 215, 217, 219], "duration_sampl": 163, "captur": [163, 218], "updat": [164, 215, 220], "step": [165, 183, 215], "sure": 165, "synchron": 169, "program": 169, "critic": 169, "constructor": 169, "account": [169, 183, 215], "pprint": 169, "time_unit": 169, "fix": [169, 216], "graphic": 169, "represent": [169, 201, 216], "symbol": 169, "keysview": 169, "mutat": [169, 170], "vice": [169, 170], "versa": [169, 170], "immut": [169, 170], "add_channel": 169, "channel_nam": [169, 222], "front_pad": 169, "to_dur": 169, "variabl": [169, 193, 215], "front_pad_in_second": 169, "pad_to_hard_box": 169, "pad_to_hard_box_in_second": 169, "smallest": 169, "revers": 169, "preserv": [169, 189, 216, 222], "rear": 169, "reverse_hard_box": 169, "No": [169, 215], "synchronis": 169, "break": 169, "cleanup": [169, 215], "clean": [169, 215], "thing": [169, 179, 180], "has_content_in": 169, "keep": [170, 193], "_instruct": 170, "_durat": 170, "prepend": 170, "pop": 170, "idx": [170, 192], "12": [171, 195, 196], "comp": [171, 215], "1281": 171, "visualis": [173, 215], "view": [174, 215], "browser": 174, "jupyt": 174, "notebook": 174, "ipython": 174, "core": [174, 215], "displai": [174, 215, 219], "inspect": 174, "serial": 175, "reimport": 175, "document": [175, 215, 219], "appear": [175, 216, 219], "chirp": [175, 177, 215], "chirpimag": [175, 215], "freq_start": [176, 177], "freq_stop": [176, 177], "05": [176, 177], "taper": 176, "rectangular": [176, 193], "hann": 176, "nyquist": 176, "zone": 176, "constrain": 176, "5707963267948966": 177, "imaginari": 177, "period": 178, "sinusoid": [178, 181, 182], "made": [179, 180, 201, 217, 218, 219, 222], "dummi": 180, "bug": 180, "fixm": 180, "p": [181, 221], "plateau": 181, "Its": [181, 216], "midpoint": [181, 183], "descript": [182, 201, 219], "minim": [183, 189, 215], "adiabat": [183, 221], "prior": 183, "lambda_n": 183, "tau_": 183, "acceler": 183, "reconstruct": 183, "tau": 183, "lab": 183, "interpol": 183, "v": [183, 211, 214, 215], "voltag": 183, "go": [183, 216, 217], "advis": [183, 219], "look": [183, 217], "mathemat": [183, 218], "heavi": 183, "leakag": [183, 221], "strength": 183, "squid": [183, 215], "asymmetri": [183, 215], "_sample_normalized_slepian": 183, "coord": 183, "_t_tau": 183, "num_sampl": 183, "129": 183, "convers": [183, 217, 219], "solut": 183, "therefor": [183, 216], "scipi": [183, 215], "romb": 183, "_theta_tau": 183, "shown": [183, 215, 220], "tau_puls": 183, "quantum_op": 185, "short": [185, 195], "simpl": [185, 201, 216, 217, 221], "unambigu": [185, 216, 217], "subsystem": 185, "qumod": 185, "pictur": [185, 220], "famili": [185, 216], "plural": 185, "intent": 185, "target": [185, 215, 222], "callabl": [185, 217], "lowest": [185, 216], "docstr": [185, 215], "exact": [185, 217], "first_qubit_basis_ket": 185, "second_qubit_basis_ket": 185, "set_default_implement": [185, 217], "set_default_implementation_for_locu": [185, 217], "cal_data": 187, "impl": [187, 217], "noiseless": 189, "sync": 189, "spacer": 189, "try": [189, 215], "segmentpoint": 189, "nonsolid": 190, "nevertheless": 190, "tol": [192, 195, 196], "frac": 192, "serv": 192, "pointer": 192, "smaller": [192, 195, 196], "toler": 192, "remaind": 192, "cut_tail": 192, "cut": 192, "tail": 192, "onward": 192, "rewind": 192, "fastforward": 192, "forward": 192, "child_schedul": [193, 194], "child_compon": [193, 194], "neighborhood_compon": [193, 194, 198, 201], "component_dur": [193, 194], "is_alap": [193, 194], "respect": [193, 199, 211, 214, 216, 217], "hard": [193, 215], "rag": [193, 195, 196], "edg": [193, 215], "earliest": [193, 194], "max": 193, "combin": [193, 219], "extend_hard_boundary_in_second": 193, "computational_reson": [193, 194], "addition": [193, 194, 220], "ever": [193, 194], "alap": [193, 194, 200, 201, 216, 222], "As": [193, 194, 201, 217, 220], "late": [193, 194, 200, 201], "extend_hard_boundari": 194, "incom": 194, "extens": [195, 196, 215], "reserv": 197, "resourc": 197, "schedulingstrategi": [197, 198, 199, 201, 222], "locus_compon": [198, 201, 217], "asap": [198, 200, 201, 216, 220, 222], "from_readout_trigg": 198, "readout_trigg": 198, "probe_channel": 198, "block_channel": 198, "block_dur": 198, "soon": [200, 201, 215, 220], "fragment": 201, "human": [201, 216, 217], "readabl": [201, 215, 216, 219], "union": [201, 219, 222], "rule": [201, 205, 215, 216, 217, 222], "operand": [201, 222], "pipe": [201, 222], "group": [201, 217, 222], "let": [201, 217], "a_then_b": 201, "c_then_d": 201, "set_alap": [201, 222], "abcd": 201, "abb": 201, "ccd": 201, "all_togeth": 201, "dictat": 201, "flatten": 201, "ancestor": 201, "set_asap": 201, "print": [201, 215, 219, 222], "_idx": 201, "type_hint": 203, "python": [203, 215, 217], "typehint": 203, "psi_1": 205, "psi_2": 205, "decrement": 205, "beforehand": 205, "opposit": 205, "direct": [205, 219], "playlistvalidationerror": 206, "awgschedulevalidationdata": [206, 211], "awgschedulevalidationerror": 206, "invalidinstructionerror": 206, "sampling_r": 207, "min_number_of_sampl": 207, "issue_str": 209, "encount": 209, "channel_descript": [211, 212], "device_constraint": [211, 212, 214], "minimum": [211, 214, 216], "iq_puls": 215, "register_implement": [215, 216, 217], "register_oper": [215, 216, 217], "introduc": [215, 217], "mypi": 215, "ci": 215, "issu": [215, 219], "sw": 215, "1615": 215, "were": 215, "visual": [215, 216, 220], "faster": 215, "numpi": [215, 222], "inspector": 215, "render": 215, "mr": 215, "1086": 215, "bump": 215, "coco": 215, "ruff": 215, "isort": 215, "patch": 215, "1429": 215, "usag": [215, 217], "broken": 215, "inspect_playlist": [215, 216], "miss": 215, "ifram": 215, "tag": 215, "licens": [215, 218], "vulner": 215, "safe_load": 215, "harm": 215, "remot": 215, "1378": 215, "modulated_drag_crf": 215, "baseclass": 215, "packag": 215, "publish": 215, "doc": [215, 217], "footer": 215, "1392": 215, "pep": 215, "604": 215, "lint": 215, "1230": 215, "rework": 215, "delet": 215, "major": 215, "stai": 215, "split": [215, 216], "seen": 215, "register_g": 215, "validate_oper": 215, "compare_oper": 215, "add_implement": 215, "validate_implement": 215, "set_default": 215, "build_quantum_op": [215, 216], "py": 215, "yield": 215, "didn": 215, "renam": 215, "crystal": 215, "star": 215, "architectur": 215, "crystal_5": 215, "star_6": 215, "mini": 215, "mini_crystal_20": 215, "crystal_20": 215, "1059": 215, "electron": [215, 217, 219], "refactor": 215, "register_gate_implement": 215, "imposs": 215, "retain": [215, 219], "rapidjson": 215, "685": 215, "previous": 215, "x90": 215, "codebas": 215, "467": 215, "speed": 215, "reshap": 215, "neither": [215, 217], "assing": 215, "signific": 215, "speedup": 215, "anywai": 215, "diffrenet": 215, "broader": 215, "compatibili": 215, "migrat": 215, "guid": 215, "builtin": 215, "easili": [215, 218, 222], "quantumcircuit": 215, "extract": 215, "crf_acstarkcrf": 215, "slepian_acstarkcrf": 215, "repo": 215, "organ": [215, 222], "1042": 215, "disabl": 215, "horizont": 215, "scroll": 215, "toggl": 215, "cover": 215, "concept": [215, 217, 218], "531": 215, "gitlab": 215, "public": 215, "page": [215, 218, 219], "776": 215, "514": 215, "client": [215, 216, 217, 218], "apach": [215, 219], "extlink": 215, "sphinx": 215, "916": 215, "intersphinx": 215, "665": 215, "becaus": [215, 217], "proper": 215, "realiz": [215, 221], "former": 215, "semant": [215, 216], "disturb": 215, "774": 215, "leak": 215, "web": 215, "artifact": 215, "resetwait": 215, "comfort": [215, 217], "timelin": [215, 216], "redisplai": 215, "upcom": 215, "releas": 215, "prefer": [215, 217, 219], "font": 215, "viewer": 215, "358": 215, "typo": 215, "api": [215, 217, 218, 222], "workflow": [215, 222], "meth": 215, "pulla": [215, 218, 222], "crash": 215, "discoveri": 215, "throw": 215, "sc": 215, "nonsens": 215, "mcm": 215, "merge_dict": 215, "crf_crf": 215, "interfac": [215, 217, 219], "feedback_label": 215, "conditional_prx": 215, "hopefulli": 215, "yml": 215, "conditionalreset": 215, "mid": 215, "constant_qnd": 215, "qndness": 215, "phase_increment_befor": 215, "sign": 215, "phase_transform": 215, "fulfil": 215, "satisfi": [215, 220], "conditionalprx": 215, "accept": [215, 219], "signifi": 215, "weigth": 215, "whitelist": 215, "2112": 215, "write": [215, 217, 219], "1831": 215, "drag_crf_sx": 215, "drag_gaussian_sx": 215, "prx_u": 215, "prx_sx": 215, "_x_pi_puls": 215, "547": 215, "prioritis": 215, "1929": 215, "1468": 215, "programm": 215, "1925": 215, "crude": 215, "measure_nop": 215, "validate_move_instruct": 215, "2056": 215, "pipelin": [215, 220], "overview": 216, "terminologi": 216, "deliv": 216, "send": [216, 220], "assembli": 216, "batch": 216, "summar": 216, "imag": [216, 220], "illustr": [216, 220], "visibl": 216, "microwav": [216, 218], "ambigu": 216, "machin": 216, "violat": 216, "concern": 216, "philosophi": 216, "inaccess": 216, "attempt": 216, "smart": 216, "magic": 216, "inconsist": 216, "transpar": 216, "technic": 216, "apart": 216, "few": 216, "instant": 216, "thought": [216, 220], "desir": [216, 222], "read": [216, 220, 222], "disjoint": [216, 222], "partli": 216, "figur": [216, 220], "demonstr": 216, "explain": 216, "nonunitari": 216, "variou": [216, 217], "runtim": [216, 222], "bridg": 216, "gap": 216, "despit": 216, "appropri": [216, 219], "repeat": [216, 222], "repetit": 216, "encod": 216, "aim": 216, "fit": [216, 219], "chunk": 216, "neat": 216, "metadata": 217, "question": [217, 222], "cnot": 217, "NOT": 217, "On": [217, 220], "hand": 217, "frozen": 217, "programmat": 217, "procedur": 217, "invok": 217, "random": 217, "benchmark": 217, "qc": 217, "emphasi": 217, "def": 217, "superclass": 217, "triplet": 217, "_default": 217, "implementation_": 217, "default_prx_qb1": 217, "necessarili": [217, 219], "special_prx_qb1": 217, "my_special_prx": 217, "default_box": 217, "chain": [217, 220], "default_cz_box": 217, "pure": 217, "develop": 217, "thumb": 217, "rest": 217, "simplifi": [217, 220], "educ": 217, "__class__": 217, "__name__": 217, "subsect": 217, "relai": 217, "live": 217, "asymmetr": 217, "tri": 217, "replic": 217, "mandatori": 217, "alter": 217, "physcial": 217, "averag": 217, "mu": 217, "spread": 217, "recip": 217, "offset_coord": 217, "exp": 217, "resampl": 217, "understand": [217, 220, 221], "unitless": 217, "scalar_coeffieci": 217, "quick": [217, 218, 222], "simplest": 217, "compositehadamard": 217, "hadamard": 217, "member_prx": 217, "onelin": 217, "prx_mycoolwaveform": 217, "coolwaveformi": 217, "coolwaveformq": 217, "my": 217, "cool": 217, "cz_mycoolwaveform": 217, "coolcouplerwaveform": 217, "coolqubitwaveform": 217, "measure_mycoolwaveform": 217, "preload": 217, "snippet": 217, "cnot_matrix": 217, "cnot_op": 217, "my_build": 217, "my_cnot_impl": 217, "mycnotclass": 217, "default_g": 217, "_default_implement": 217, "date": [218, 219], "2025": 218, "09": 218, "14": 218, "high": [218, 221], "unifi": 218, "hide": 218, "But": 218, "framework": [218, 222], "machineri": 218, "standalon": 218, "librari": [218, 220], "encourag": [218, 222], "familiar": 218, "especi": [218, 222], "miscellan": 218, "pitfal": 218, "changelog": 218, "search": 218, "januari": 219, "2004": [219, 221], "www": 219, "org": 219, "AND": 219, "FOR": 219, "reproduct": 219, "distribut": 219, "shall": 219, "9": [219, 220, 222], "licensor": 219, "copyright": 219, "owner": 219, "entiti": 219, "author": 219, "grant": 219, "legal": 219, "power": 219, "indirect": 219, "manag": 219, "contract": 219, "ii": 219, "ownership": 219, "fifti": 219, "percent": 219, "outstand": 219, "iii": 219, "benefici": 219, "exercis": 219, "permiss": 219, "modif": 219, "softwar": [219, 221], "mechan": 219, "translat": 219, "media": 219, "authorship": 219, "notic": [219, 222], "editori": 219, "revis": 219, "elabor": 219, "mere": 219, "bind": 219, "thereof": 219, "contribut": 219, "intention": 219, "submit": 219, "inclus": 219, "behalf": 219, "verbal": 219, "written": 219, "commun": 219, "mail": 219, "discuss": 219, "conspicu": 219, "Not": [219, 222], "contributor": 219, "whom": 219, "incorpor": 219, "herebi": 219, "perpetu": 219, "worldwid": 219, "exclus": 219, "charg": 219, "royalti": 219, "free": [219, 221], "irrevoc": 219, "reproduc": 219, "publicli": 219, "sublicens": 219, "patent": 219, "offer": 219, "sell": 219, "claim": 219, "infring": 219, "alon": 219, "institut": 219, "litig": 219, "counterclaim": 219, "lawsuit": 219, "alleg": 219, "contributori": 219, "termin": 219, "redistribut": 219, "medium": 219, "meet": 219, "recipi": 219, "promin": 219, "trademark": 219, "pertain": 219, "along": 219, "wherev": 219, "third": 219, "parti": 219, "alongsid": 219, "addendum": 219, "constru": 219, "statement": [219, 220], "compli": 219, "submiss": 219, "notwithstand": 219, "herein": 219, "supersed": 219, "agreement": 219, "regard": 219, "trade": 219, "servic": 219, "customari": 219, "disclaim": 219, "warranti": 219, "law": 219, "agre": 219, "AS": 219, "OR": 219, "OF": 219, "kind": 219, "impli": 219, "titl": 219, "merchant": 219, "sole": 219, "risk": 219, "liabil": 219, "event": 219, "theori": 219, "tort": 219, "neglig": 219, "deliber": 219, "grossli": 219, "liabl": 219, "damag": 219, "incident": 219, "consequenti": 219, "inabl": 219, "loss": 219, "goodwil": 219, "stoppag": 219, "failur": 219, "malfunct": 219, "commerci": 219, "fee": 219, "indemn": 219, "oblig": 219, "indemnifi": 219, "harmless": 219, "incur": 219, "assert": 219, "boilerpl": 219, "enclos": 219, "bracket": 219, "comment": 219, "easier": 219, "identif": 219, "archiv": 219, "2024": [219, 221], "complianc": 219, "govern": 219, "show": 220, "flexibl": 220, "goal": 220, "finit": 220, "condition": 220, "qccsw": 220, "excut": 220, "too": 220, "earli": 220, "facilit": 220, "travel": 220, "conditionalinstrucion": 220, "equaival": 220, "feedaback_kei": 220, "reset_qb2": 220, "set_qb3_to_1": 220, "cc_prx_qb4": 220, "2nd": [220, 221], "prx_qb3": 220, "prx_qb4": 220, "80e": [220, 222], "clariti": 220, "bottom": 220, "master": 220, "slave": 220, "compens": 220, "trigger_delai": 220, "explan": 220, "end_delai": 220, "spcecifi": 220, "trigger_mast": 220, "emit": 220, "daisi": 220, "central": 220, "cabl": 220, "eric": 221, "hyypp": 221, "\u00e4": 221, "antti": 221, "vep": 221, "inen": 221, "miha": 221, "papi": 221, "\u010d": 221, "chun": 221, "fai": 221, "chan": 221, "sinan": 221, "inel": 221, "alessandro": 221, "landra": 221, "wei": 221, "liu": 221, "\u00fc": 221, "rgen": 221, "luu": 221, "fabian": 221, "marxer": 221, "caspar": 221, "ockeloen": 221, "korppi": 221, "reduc": 221, "superconduct": 221, "processor": 221, "030353": 221, "doi": 221, "1103": 221, "prxquantum": 221, "john": 221, "martini": 221, "michael": 221, "geller": 221, "_z": 221, "phy": 221, "rev": 221, "022307": 221, "aug": 221, "2014": 221, "arxiv": 221, "1402": 221, "5467": 221, "physreva": 221, "lyon": 221, "digit": 221, "prentic": 221, "hall": 221, "edit": 221, "isbn": 221, "978": 221, "0131089891": 221, "cecilia": 221, "gisel": 221, "jarn": 221, "heurist": 221, "approach": 221, "anal": 221, "afa": 221, "29": 221, "51": 221, "57": 221, "2018": 221, "1703": 221, "06812": 221, "31527": 221, "analesafa": 221, "eyob": 221, "sete": 221, "nicola": 221, "didier": 221, "angela": 221, "chen": 221, "shobhan": 221, "kulshreshtha": 221, "riccardo": 221, "manenti": 221, "stefano": 221, "poletto": 221, "entangl": 221, "appl": 221, "024050": 221, "2021": 221, "2104": 221, "03511": 221, "physrevappli": 221, "youngkyu": 221, "sung": 221, "leon": 221, "ding": 221, "jochen": 221, "braum\u00fcller": 221, "veps\u00e4l\u00e4inen": 221, "bharath": 221, "kannan": 221, "morten": 221, "kjaergaard": 221, "ami": 221, "green": 221, "gabriel": 221, "o": 221, "samach": 221, "chri": 221, "mcnalli": 221, "david": 221, "kim": 221, "alexand": 221, "melvil": 221, "bethani": 221, "niedzielski": 221, "molli": 221, "schwartz": 221, "jonilyn": 221, "yoder": 221, "terri": 221, "orlando": 221, "simon": 221, "gustavsson": 221, "william": 221, "oliv": 221, "fidel": 221, "zz": 221, "021058": 221, "jun": 221, "2011": 221, "01261": 221, "physrevx": 221, "capabl": 222, "ask": 222, "recogn": 222, "cz_gate_impl": 222, "prx_gate_impl": 222, "measure_gate_impl": 222, "keyword": 222, "instanti": 222, "x180": 222, "y90": 222, "100e": 222, "p1": 222, "p2": 222, "handi": 222, "circuit3": 222, "word": 222, "slide": 222, "past": 222, "neighbour": 222, "neighbourhood": 222, "worri": 222, "advers": 222, "ruin": 222, "best": 222, "arrang": 222, "aid": 222, "discov": 222, "all_qubit": 222, "get_neighbor_locus_compon": 222, "160e": 222, "cz_schedul": 222, "forget": 222}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [120, 0, 0, "-", "playlist"], [184, 0, 0, "-", "quantum_ops"], [189, 0, 0, "-", "scheduler"], [197, 0, 0, "-", "timebox"], [202, 0, 0, "-", "utils"], [206, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "customizable_gates"], [18, 3, 1, "", "default_implementations"], [18, 4, 1, "", "optional_calibration_keys"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 3, 1, "", "_timebox_cache"], [20, 4, 1, "", "construct_factorizable"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 3, 1, "", "id"], [20, 4, 1, "", "may_have_calibration"], [20, 4, 1, "", "needs_calibration"], [20, 4, 1, "", "optional_calibration_keys"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "sub_implementations"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [75, 0, 0, "-", "move"], [83, 0, 0, "-", "prx"], [101, 1, 1, "", "register_implementation"], [102, 1, 1, "", "register_operation"], [103, 0, 0, "-", "reset"], [108, 0, 0, "-", "rz"], [115, 0, 0, "-", "sx"], [117, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "customizable_gates"], [37, 3, 1, "", "parameters"], [37, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"], [71, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [72, 2, 1, "", "Probe_Constant"], [73, 2, 1, "", "Shelved_Measure_Constant"], [74, 2, 1, "", "Shelved_Measure_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[71, 4, 1, "", "_build_instructions"], [71, 4, 1, "", "_call"], [71, 3, 1, "", "_multiplexed_timeboxes"], [71, 3, 1, "", "dependent_waves"], [71, 4, 1, "", "duration_in_seconds"], [71, 4, 1, "", "get_locus_mapping_name"], [71, 4, 1, "", "probe_timebox"], [71, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[72, 3, 1, "", "dependent_waves"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "wave_i"], [72, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_Constant": [[73, 3, 1, "", "dependent_waves"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "wave_i"], [73, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms": [[74, 4, 1, "", "_call"], [74, 3, 1, "", "dependent_waves"], [74, 4, 1, "", "probe_timebox"]], "iqm.pulse.gates.move": [[76, 2, 1, "", "MOVE_CRF_CRF"], [77, 2, 1, "", "MOVE_CustomWaveforms"], [78, 2, 1, "", "MOVE_SLEPIAN_CRF"], [79, 2, 1, "", "MOVE_TGSS_CRF"], [80, 2, 1, "", "MoveMarker"], [81, 1, 1, "", "apply_move_gate_phase_corrections"], [82, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[76, 3, 1, "", "coupler_wave"], [76, 3, 1, "", "parameters"], [76, 3, 1, "", "qubit_wave"], [76, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[77, 4, 1, "", "_call"], [77, 3, 1, "", "coupler_wave"], [77, 3, 1, "", "parameters"], [77, 3, 1, "", "qubit_wave"], [77, 3, 1, "", "root_parameters"], [77, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF": [[78, 3, 1, "", "coupler_wave"], [78, 3, 1, "", "parameters"], [78, 3, 1, "", "qubit_wave"], [78, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[79, 3, 1, "", "coupler_wave"], [79, 3, 1, "", "parameters"], [79, 3, 1, "", "qubit_wave"], [79, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[80, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[84, 2, 1, "", "ABC_Constant_smooth"], [85, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [86, 2, 1, "", "PRX_CustomWaveforms"], [87, 2, 1, "", "PRX_CustomWaveformsSX"], [88, 2, 1, "", "PRX_DRAGCosineRiseFall"], [89, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [90, 2, 1, "", "PRX_DRAGGaussian"], [91, 2, 1, "", "PRX_DRAGGaussianSX"], [92, 2, 1, "", "PRX_FastDrag"], [93, 2, 1, "", "PRX_FastDragSX"], [94, 2, 1, "", "PRX_HdDrag"], [95, 2, 1, "", "PRX_HdDragSX"], [96, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [97, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [98, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [99, 2, 1, "", "PrxGateImplementation"], [100, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[84, 4, 1, "", "_call"], [84, 4, 1, "", "_fall_pulse"], [84, 4, 1, "", "_main_pulse"], [84, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[85, 3, 1, "", "fall_waveform"], [85, 3, 1, "", "main_waveform"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "rise_waveform"], [85, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[86, 4, 1, "", "_get_pulse"], [86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[87, 4, 1, "", "_call"], [87, 4, 1, "", "_get_pulse"], [87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[88, 4, 1, "", "_get_pulse"], [88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "excluded_parameters"], [88, 3, 1, "", "parameters"], [88, 3, 1, "", "wave_i"], [88, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[89, 4, 1, "", "_get_pulse"], [89, 3, 1, "", "dependent_waves"], [89, 3, 1, "", "excluded_parameters"], [89, 3, 1, "", "parameters"], [89, 3, 1, "", "wave_i"], [89, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[91, 3, 1, "", "dependent_waves"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "wave_i"], [91, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "wave_i"], [92, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "parameters"], [94, 3, 1, "", "wave_i"], [94, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "parameters"], [95, 3, 1, "", "wave_i"], [95, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[96, 4, 1, "", "_get_pulse"], [96, 3, 1, "", "dependent_waves"], [96, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[97, 4, 1, "", "_get_pulse"], [97, 3, 1, "", "dependent_waves"], [97, 3, 1, "", "excluded_parameters"], [97, 3, 1, "", "parameters"], [97, 3, 1, "", "wave_i"], [97, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[98, 4, 1, "", "_call"]], "iqm.pulse.gates.prx.PrxGateImplementation": [[99, 4, 1, "", "_call"], [99, 4, 1, "", "clifford"], [99, 4, 1, "", "get_locus_mapping_name"], [99, 4, 1, "", "rx"], [99, 4, 1, "", "ry"]], "iqm.pulse.gates.reset": [[104, 6, 1, "", "RESET_FEEDBACK_KEY"], [105, 6, 1, "", "RESET_MEASUREMENT_KEY"], [106, 2, 1, "", "Reset_Conditional"], [107, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[106, 4, 1, "", "_call"], [106, 3, 1, "", "customizable_gates"], [106, 4, 1, "", "get_locus_mapping_name"], [106, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[107, 4, 1, "", "_call"], [107, 4, 1, "", "duration_in_seconds"], [107, 4, 1, "", "get_custom_locus_mapping"], [107, 3, 1, "", "parameters"], [107, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[109, 2, 1, "", "RZ_ACStarkShift"], [110, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [111, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [112, 2, 1, "", "RZ_PRX_Composite"], [113, 2, 1, "", "RZ_Virtual"], [114, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[109, 4, 1, "", "_ac_stark_pulse"], [109, 4, 1, "", "_call"], [109, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[110, 3, 1, "", "ac_stark_waveform"], [110, 3, 1, "", "parameters"], [110, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[111, 3, 1, "", "fall_waveform"], [111, 3, 1, "", "main_waveform"], [111, 3, 1, "", "parameters"], [111, 3, 1, "", "rise_waveform"], [111, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[112, 3, 1, "", "customizable_gates"], [112, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[113, 4, 1, "", "_call"], [113, 4, 1, "", "duration_in_seconds"], [113, 4, 1, "", "get_locus_mapping_name"], [113, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[116, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[116, 4, 1, "", "_call"], [116, 3, 1, "", "customizable_gates"], [116, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[118, 2, 1, "", "UGate"], [119, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[118, 4, 1, "", "_call"], [118, 3, 1, "", "customizable_gates"], [118, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[121, 0, 0, "-", "channel"], [131, 0, 0, "-", "fast_drag"], [141, 0, 0, "-", "hd_drag"], [151, 0, 0, "-", "instructions"], [166, 0, 0, "-", "playlist"], [167, 0, 0, "-", "schedule"], [172, 0, 0, "-", "visualisation"], [175, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[122, 2, 1, "", "ChannelConfiguration"], [123, 2, 1, "", "ChannelDescription"], [124, 2, 1, "", "ChannelProperties"], [125, 2, 1, "", "IQChannelConfig"], [126, 2, 1, "", "ProbeChannelProperties"], [127, 2, 1, "", "RealChannelConfig"], [128, 1, 1, "", "get_channel_properties"], [129, 1, 1, "", "get_channel_properties_from_station_settings"], [130, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[123, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[124, 3, 1, "", "blocks_component"], [124, 3, 1, "", "compatible_instructions"], [124, 4, 1, "", "duration_to_int_samples"], [124, 4, 1, "", "duration_to_samples"], [124, 4, 1, "", "duration_to_seconds"], [124, 3, 1, "", "instruction_duration_granularity"], [124, 3, 1, "", "instruction_duration_min"], [124, 3, 1, "", "is_iq"], [124, 3, 1, "", "is_virtual"], [124, 4, 1, "", "round_duration_to_granularity"], [124, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[125, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[126, 3, 1, "", "center_frequency"], [126, 3, 1, "", "integration_start_dead_time"], [126, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[127, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[132, 2, 1, "", "FastDrag"], [133, 2, 1, "", "FastDragI"], [134, 2, 1, "", "FastDragQ"], [135, 2, 1, "", "SuppressedPulse"], [136, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [137, 1, 1, "", "evaluate_fast_drag_i_envelope"], [138, 1, 1, "", "evaluate_fast_drag_q_envelope"], [139, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [140, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[132, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[133, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[134, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[135, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[142, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [143, 2, 1, "", "HdDrag"], [144, 2, 1, "", "HdDragI"], [145, 2, 1, "", "HdDragQ"], [146, 1, 1, "", "evaluate_hd_drag_i_envelope"], [147, 1, 1, "", "evaluate_hd_drag_q_envelope"], [148, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [149, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [150, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[143, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[144, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[145, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[152, 2, 1, "", "AcquisitionMethod"], [153, 2, 1, "", "Block"], [154, 2, 1, "", "ComplexIntegration"], [155, 2, 1, "", "ConditionalInstruction"], [156, 2, 1, "", "FluxPulse"], [157, 2, 1, "", "IQPulse"], [158, 2, 1, "", "Instruction"], [159, 2, 1, "", "MultiplexedIQPulse"], [160, 2, 1, "", "ReadoutTrigger"], [161, 2, 1, "", "RealPulse"], [162, 2, 1, "", "ThresholdStateDiscrimination"], [163, 2, 1, "", "TimeTrace"], [164, 2, 1, "", "VirtualRZ"], [165, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[152, 3, 1, "", "delay_samples"], [152, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[154, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[155, 3, 1, "", "condition"], [155, 4, 1, "", "get_child_instructions"], [155, 3, 1, "", "outcomes"], [155, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[156, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[157, 4, 1, "", "get_waveforms"], [157, 3, 1, "", "modulation_frequency"], [157, 3, 1, "", "phase"], [157, 3, 1, "", "phase_increment"], [157, 3, 1, "", "scale_i"], [157, 3, 1, "", "scale_q"], [157, 4, 1, "", "validate"], [157, 3, 1, "", "wave_i"], [157, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[158, 4, 1, "", "copy"], [158, 3, 1, "", "duration"], [158, 4, 1, "", "get_child_instructions"], [158, 4, 1, "", "get_waveforms"], [158, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[159, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[160, 3, 1, "", "acquisitions"], [160, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[161, 4, 1, "", "get_waveforms"], [161, 3, 1, "", "scale"], [161, 4, 1, "", "validate"], [161, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[162, 3, 1, "", "feedback_signal_label"], [162, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[163, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[164, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[168, 2, 1, "", "Nothing"], [169, 2, 1, "", "Schedule"], [170, 2, 1, "", "Segment"], [171, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[169, 4, 1, "", "add_channels"], [169, 4, 1, "", "append"], [169, 4, 1, "", "channels"], [169, 4, 1, "", "cleanup"], [169, 4, 1, "", "copy"], [169, 5, 1, "", "duration"], [169, 4, 1, "", "duration_in_seconds"], [169, 4, 1, "", "extend"], [169, 4, 1, "", "front_pad"], [169, 4, 1, "", "front_pad_in_seconds"], [169, 4, 1, "", "has_content_in"], [169, 4, 1, "", "items"], [169, 4, 1, "", "pad_to_hard_box"], [169, 4, 1, "", "pad_to_hard_box_in_seconds"], [169, 4, 1, "", "pprint"], [169, 4, 1, "", "reverse"], [169, 4, 1, "", "reverse_hard_box"], [169, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[170, 3, 1, "", "_duration"], [170, 3, 1, "", "_instructions"], [170, 4, 1, "", "append"], [170, 4, 1, "", "copy"], [170, 5, 1, "", "duration"], [170, 4, 1, "", "extend"], [170, 4, 1, "", "pop"], [170, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[173, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[174, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[176, 2, 1, "", "Chirp"], [177, 2, 1, "", "ChirpImag"], [178, 2, 1, "", "Cosine"], [179, 2, 1, "", "CosineFall"], [180, 2, 1, "", "CosineRise"], [181, 2, 1, "", "CosineRiseFallDerivative"], [182, 2, 1, "", "ModulatedCosineRiseFall"], [183, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[176, 4, 1, "", "_sample"], [176, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[177, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[178, 4, 1, "", "_sample"], [178, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[179, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[180, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[181, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[182, 4, 1, "", "_sample"], [182, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[183, 4, 1, "", "_sample"], [183, 4, 1, "", "_sample_normalized_slepian"], [183, 4, 1, "", "_t_tau"], [183, 4, 1, "", "_theta_tau"], [183, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[185, 2, 1, "", "QuantumOp"], [186, 6, 1, "", "QuantumOpTable"], [187, 1, 1, "", "validate_locus_calibration"], [188, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[185, 3, 1, "", "arity"], [185, 4, 1, "", "copy"], [185, 5, 1, "", "default_implementation"], [185, 3, 1, "", "defaults_for_locus"], [185, 3, 1, "", "factorizable"], [185, 4, 1, "", "get_default_implementation_for_locus"], [185, 3, 1, "", "implementations"], [185, 3, 1, "", "name"], [185, 3, 1, "", "params"], [185, 4, 1, "", "set_default_implementation"], [185, 4, 1, "", "set_default_implementation_for_locus"], [185, 3, 1, "", "symmetric"], [185, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[190, 6, 1, "", "BLOCKING"], [191, 6, 1, "", "NONSOLID"], [192, 2, 1, "", "SegmentPointer"], [193, 1, 1, "", "extend_hard_boundary"], [194, 1, 1, "", "extend_hard_boundary_in_seconds"], [195, 1, 1, "", "extend_schedule"], [196, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[192, 3, 1, "", "TOL"], [192, 4, 1, "", "cut_tail"], [192, 4, 1, "", "fastforward"], [192, 3, 1, "", "frac"], [192, 4, 1, "", "get"], [192, 3, 1, "", "idx"], [192, 4, 1, "", "next"], [192, 5, 1, "", "remainder"], [192, 4, 1, "", "rewind"], [192, 3, 1, "", "source"], [192, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[198, 2, 1, "", "MultiplexedProbeTimeBox"], [199, 2, 1, "", "SchedulingAlgorithm"], [200, 2, 1, "", "SchedulingStrategy"], [201, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[198, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[199, 3, 1, "", "HARD_BOUNDARY"], [199, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[200, 3, 1, "", "ALAP"], [200, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[201, 3, 1, "", "atom"], [201, 4, 1, "", "atomic"], [201, 3, 1, "", "children"], [201, 4, 1, "", "composite"], [201, 3, 1, "", "label"], [201, 3, 1, "", "locus_components"], [201, 3, 1, "", "neighborhood_components"], [201, 4, 1, "", "print"], [201, 3, 1, "", "scheduling"], [201, 3, 1, "", "scheduling_algorithm"], [201, 4, 1, "", "set_alap"], [201, 4, 1, "", "set_asap"], [201, 4, 1, "", "validate"]], "iqm.pulse.utils": [[203, 1, 1, "", "map_waveform_param_types"], [204, 1, 1, "", "normalize_angle"], [205, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[207, 2, 1, "", "AWGScheduleValidationData"], [208, 7, 1, "", "AWGScheduleValidationError"], [209, 7, 1, "", "InvalidInstructionError"], [210, 7, 1, "", "PlaylistValidationError"], [211, 1, 1, "", "validate_awg_and_schedule_compatibility"], [212, 1, 1, "", "validate_channel"], [213, 1, 1, "", "validate_instruction_and_wf_length"], [214, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 216, 221], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 102, 104, 105, 114, 119, 128, 129, 130, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 171, 174, 186, 187, 188, 190, 191, 193, 194, 195, 196, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 218, 220], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 102, 104, 105, 114, 119, 128, 129, 130, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 171, 174, 186, 187, 188, 190, 191, 193, 194, 195, 196, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 218], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 222], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 216, 217], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 102, 104, 105, 114, 119, 217], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 171], "get_implementation_class": 65, "measur": [66, 220], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "probepulse_customwaveforms_nointegr": 71, "probe_const": 72, "shelved_measure_const": 73, "shelved_measure_customwaveform": 74, "move": [75, 81, 82], "move_crf_crf": 76, "move_customwaveform": 77, "move_slepian_crf": 78, "move_tgss_crf": 79, "movemark": 80, "apply_move_gate_phase_correct": 81, "validate_move_instruct": 82, "prx": [83, 100], "abc_constant_smooth": 84, "constant_prx_with_smooth_rise_fal": 85, "prx_customwaveform": 86, "prx_customwaveformssx": 87, "prx_dragcosinerisefal": 88, "prx_dragcosinerisefallsx": 89, "prx_draggaussian": 90, "prx_draggaussiansx": 91, "prx_fastdrag": 92, "prx_fastdragsx": 93, "prx_hddrag": 94, "prx_hddragsx": 95, "prx_modulatedcustomwaveform": 96, "prx_modulateddragcosinerisefal": 97, "prx_singlepulse_gateimplement": 98, "prxgateimplement": 99, "get_unitary_prx": 100, "register_implement": 101, "register_oper": 102, "reset": [103, 104, 105], "reset_feedback_kei": 104, "reset_measurement_kei": 105, "reset_condit": 106, "reset_wait": 107, "rz": [108, 114], "rz_acstarkshift": 109, "rz_acstarkshift_cosinerisefal": 110, "rz_acstarkshift_smoothconst": 111, "rz_prx_composit": 112, "rz_virtual": 113, "get_unitary_rz": 114, "sx": 115, "sxgate": 116, "u": [117, 119], "ugat": 118, "get_unitary_u": 119, "playlist": [120, 128, 129, 130, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 166, 171, 174, 216], "channel": [121, 128, 129, 130], "channelconfigur": 122, "channeldescript": 123, "channelproperti": 124, "iqchannelconfig": 125, "probechannelproperti": 126, "realchannelconfig": 127, "get_channel_properti": 128, "get_channel_properties_from_station_set": 129, "round_duration_to_granularity_sampl": 130, "fast_drag": [131, 136, 137, 138, 139, 140], "fastdrag": 132, "fastdragi": 133, "fastdragq": 134, "suppressedpuls": 135, "compute_matrix_of_summed_fourier_transform_inner_product": 136, "evaluate_fast_drag_i_envelop": 137, "evaluate_fast_drag_q_envelop": 138, "fourier_transform_of_cos_basis_functions_as_tensor": 139, "solve_fast_coefficients_for_given_weights_and_rang": 140, "hd_drag": [141, 142, 146, 147, 148, 149, 150], "cosine_coefficients_dict": 142, "hddrag": 143, "hddragi": 144, "hddragq": 145, "evaluate_hd_drag_i_envelop": 146, "evaluate_hd_drag_q_envelop": 147, "evaluate_nth_derivative_of_basis_envelop": 148, "solve_cosine_coefs_for_hd_drag": 149, "solve_hd_drag_coefficients_from_suppressed_frequ": 150, "instruct": [151, 158, 216, 217], "acquisitionmethod": 152, "block": [153, 190], "complexintegr": 154, "conditionalinstruct": 155, "fluxpuls": 156, "iqpuls": 157, "multiplexediqpuls": 159, "readouttrigg": [160, 220], "realpuls": 161, "thresholdstatediscrimin": 162, "timetrac": 163, "virtualrz": 164, "wait": 165, "schedul": [167, 169, 171, 189, 190, 191, 193, 194, 195, 196, 216, 222], "noth": 168, "segment": 170, "visualis": [172, 174], "base": [173, 174, 217], "inspect_playlist": 174, "waveform": [175, 217], "chirp": 176, "chirpimag": 177, "cosin": 178, "cosinefal": 179, "cosineris": 180, "cosinerisefallderiv": 181, "modulatedcosinerisefal": 182, "slepian": 183, "quantum_op": [184, 186, 187, 188], "quantumop": [185, 216, 217], "quantumopt": 186, "validate_locus_calibr": 187, "validate_op_calibr": 188, "nonsolid": 191, "segmentpoint": 192, "extend_hard_boundari": 193, "extend_hard_boundary_in_second": 194, "extend_schedul": 195, "extend_schedule_new": 196, "timebox": [197, 201, 216, 222], "multiplexedprobetimebox": 198, "schedulingalgorithm": 199, "schedulingstrategi": 200, "util": [202, 203, 204, 205], "map_waveform_param_typ": 203, "normalize_angl": 204, "phase_transform": 205, "valid": [206, 208, 209, 210, 211, 212, 213, 214], "awgschedulevalidationdata": 207, "awgschedulevalidationerror": 208, "invalidinstructionerror": 209, "playlistvalidationerror": 210, "validate_awg_and_schedule_compat": 211, "validate_channel": 212, "validate_instruction_and_wf_length": 213, "validate_playlist_compat": 214, "changelog": 215, "version": 215, "10": 215, "0": 215, "2025": 215, "07": 215, "16": 215, "break": 215, "chang": 215, "9": 215, "21": 215, "bug": 215, "fix": 215, "20": 215, "09": 215, "featur": [215, 222], "19": 215, "08": 215, "18": 215, "02": 215, "17": 215, "01": 215, "15": 215, "06": 215, "14": 215, "13": 215, "11": 215, "12": 215, "05": 215, "30": 215, "28": 215, "8": 215, "7": 215, "1": 215, "04": 215, "6": 215, "5": 215, "25": 215, "4": 215, "22": 215, "3": 215, "2": 215, "03": 215, "27": 215, "26": 215, "24": 215, "23": 215, "2024": 215, "29": 215, "31": 215, "concept": 216, "class": [216, 217], "quick": 216, "custom": 217, "implement": 217, "calibr": 217, "data": 217, "more": 217, "regist": 217, "content": 218, "indic": 218, "tabl": 218, "licens": 219, "time": 220, "fast": 220, "feedback": 220, "us": 222, "creat": 222, "compos": 222, "resolv": 222, "miscellan": 222, "common": 222, "pitfal": 222}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_CRF": [[41, "cz-crf"]], "SinglePulseGate": [[31, "singlepulsegate"]], "CZ_Slepian": [[44, "cz-slepian"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "XYGate": [[60, "xygate"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "Measure_Constant": [[67, "measure-constant"]], "Delay": [[55, "delay"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "TwoQubitGate": [[58, "twoqubitgate"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "API reference": [[0, "api-reference"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "builder": [[4, "module-iqm.pulse.builder"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "CircuitOperation": [[5, "circuitoperation"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "CompositeCache": [[17, "compositecache"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeGate": [[18, "compositegate"]], "GateImplementation": [[20, "gateimplementation"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "pulse": [[1, "module-iqm.pulse"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.validation.validate_playlist_compatibility": [[214, "iqm-pulse-validation-validate-playlist-compatibility"]], "AWGScheduleValidationData": [[207, "awgschedulevalidationdata"]], "Concepts and classes": [[216, "concepts-and-classes"]], "Quick reference": [[216, "quick-reference"]], "Instructions": [[216, "instructions"]], "Schedules": [[216, "schedules"]], "TimeBoxes": [[216, "timeboxes"]], "QuantumOps": [[216, "quantumops"]], "GateImplementations": [[216, "gateimplementations"]], "Playlists": [[216, "playlists"]], "License": [[219, "license"]], "Changelog": [[215, "changelog"]], "Version 10.0.0 (2025-07-16)": [[215, "version-10-0-0-2025-07-16"]], "Breaking changes": [[215, "breaking-changes"], [215, "id20"], [215, "id59"], [215, "id74"], [215, "id83"], [215, "id85"], [215, "id93"], [215, "id107"]], "Version 9.21.0 (2025-07-10)": [[215, "version-9-21-0-2025-07-10"]], "Bug fixes": [[215, "bug-fixes"], [215, "id4"], [215, "id5"], [215, "id11"], [215, "id17"], [215, "id18"], [215, "id29"], [215, "id33"], [215, "id43"], [215, "id61"], [215, "id65"], [215, "id66"], [215, "id67"], [215, "id69"], [215, "id71"], [215, "id72"], [215, "id77"], [215, "id79"], [215, "id80"], [215, "id82"], [215, "id104"]], "Version 9.20.0 (2025-07-09)": [[215, "version-9-20-0-2025-07-09"]], "Features": [[215, "features"], [215, "id1"], [215, "id2"], [215, "id3"], [215, "id6"], [215, "id7"], [215, "id8"], [215, "id9"], [215, "id10"], [215, "id12"], [215, "id13"], [215, "id14"], [215, "id15"], [215, "id16"], [215, "id19"], [215, "id21"], [215, "id22"], [215, "id23"], [215, "id24"], [215, "id25"], [215, "id26"], [215, "id27"], [215, "id28"], [215, "id30"], [215, "id32"], [215, "id34"], [215, "id35"], [215, "id36"], [215, "id37"], [215, "id38"], [215, "id40"], [215, "id41"], [215, "id42"], [215, "id45"], [215, "id46"], [215, "id47"], [215, "id48"], [215, "id49"], [215, "id50"], [215, "id51"], [215, "id52"], [215, "id53"], [215, "id54"], [215, "id56"], [215, "id57"], [215, "id58"], [215, "id60"], [215, "id62"], [215, "id63"], [215, "id64"], [215, "id68"], [215, "id70"], [215, "id73"], [215, "id75"], [215, "id76"], [215, "id78"], [215, "id81"], [215, "id84"], [215, "id86"], [215, "id87"], [215, "id88"], [215, "id89"], [215, "id90"], [215, "id91"], [215, "id92"], [215, "id94"], [215, "id95"], [215, "id96"], [215, "id97"], [215, "id98"], [215, "id99"], [215, "id100"], [215, "id101"], [215, "id102"], [215, "id103"], [215, "id105"], [215, "id106"], [215, "id108"], [215, "id109"], [215, "id110"]], "Version 9.19.0 (2025-07-08)": [[215, "version-9-19-0-2025-07-08"]], "Version 9.18.0 (2025-07-02)": [[215, "version-9-18-0-2025-07-02"]], "Version 9.17.0 (2025-07-01)": [[215, "version-9-17-0-2025-07-01"]], "Version 9.16.0 (2025-07-01)": [[215, "version-9-16-0-2025-07-01"]], "Version 9.15.0 (2025-06-17)": [[215, "version-9-15-0-2025-06-17"]], "Version 9.14.0 (2025-06-13)": [[215, "version-9-14-0-2025-06-13"]], "Version 9.13.0 (2025-06-11)": [[215, "version-9-13-0-2025-06-11"]], "Version 9.12.0 (2025-05-30)": [[215, "version-9-12-0-2025-05-30"]], "Version 9.11.0 (2025-05-28)": [[215, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[215, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[215, "version-9-9-0-2025-05-19"]], "Version 9.8.0 (2025-05-12)": [[215, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[215, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[215, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[215, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[215, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[215, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[215, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[215, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[215, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[215, "version-9-0-0-2025-04-09"]], "Version 8.13.0 (2025-04-07)": [[215, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[215, "version-8-12-0-2025-04-03"]], "Feature": [[215, "feature"]], "Version 8.11.0 (2025-04-02)": [[215, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[215, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[215, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[215, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[215, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[215, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[215, "version-8-5-0-2025-03-26"]], "Bug fix": [[215, "bug-fix"], [215, "id31"], [215, "id44"], [215, "id55"]], "Version 8.4.0 (2025-03-21)": [[215, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[215, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[215, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[215, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[215, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[215, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[215, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[215, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[215, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[215, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[215, "version-7-19-0-2025-02-04"]], "Bug Fixes": [[215, "id39"]], "Version 7.18.0 (2025-02-04)": [[215, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[215, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[215, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[215, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[215, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[215, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[215, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[215, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[215, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[215, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[215, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[215, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[215, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[215, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[215, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[215, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[215, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[215, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[215, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[215, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[215, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[215, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[215, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[215, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[215, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[215, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[215, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[215, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[215, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[215, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[215, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[215, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[215, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[215, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[215, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[215, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[215, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[215, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[215, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[215, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[215, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[215, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[215, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[215, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[215, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[215, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[215, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[215, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[215, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[215, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[215, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[215, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[215, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[215, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[215, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[215, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[215, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[215, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[215, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[215, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[215, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[215, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[215, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[215, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[215, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[215, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[215, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[215, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[215, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[215, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[215, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[215, "version-1-0-2024-07-01"]], "iqm.pulse.validation.AWGScheduleValidationError": [[208, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.PlaylistValidationError": [[210, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[211, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "Custom gate implementations": [[217, "custom-gate-implementations"], [217, "id1"]], "QuantumOp": [[217, "quantumop"], [185, "quantumop"]], "GateImplementation class": [[217, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[217, "instructions-waveforms-and-calibration-data"]], "More base classes": [[217, "more-base-classes"]], "Registering gates and implementations": [[217, "registering-gates-and-implementations"]], "Using ScheduleBuilder": [[222, "using-schedulebuilder"]], "Creating TimeBoxes": [[222, "creating-timeboxes"]], "Composing TimeBoxes": [[222, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[222, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[222, "miscellaneous-features"]], "Common pitfalls": [[222, "common-pitfalls"]], "Pulse timing": [[220, "pulse-timing"]], "Measure and ReadoutTrigger": [[220, "measure-and-readouttrigger"]], "Fast feedback timing": [[220, "fast-feedback-timing"]], "References": [[221, "references"]], "IQM Pulse": [[218, "iqm-pulse"]], "Contents": [[218, "contents"]], "Indices and tables": [[218, "indices-and-tables"]], "iqm.pulse.validation.validate_channel": [[212, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[213, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.InvalidInstructionError": [[209, "iqm-pulse-validation-invalidinstructionerror"]], "MoveMarker": [[80, "movemarker"]], "PRX_CustomWaveformsSX": [[87, "prx-customwaveformssx"]], "PRX_DRAGGaussianSX": [[91, "prx-draggaussiansx"]], "Shelved_Measure_CustomWaveforms": [[74, "shelved-measure-customwaveforms"]], "Shelved_Measure_Constant": [[73, "shelved-measure-constant"]], "ABC_Constant_smooth": [[84, "abc-constant-smooth"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[81, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "MOVE_SLEPIAN_CRF": [[78, "move-slepian-crf"]], "MOVE_TGSS_CRF": [[79, "move-tgss-crf"]], "PRX_DRAGCosineRiseFall": [[88, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[89, "prx-dragcosinerisefallsx"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "prx": [[83, "module-iqm.pulse.gates.prx"]], "PRX_DRAGGaussian": [[90, "prx-draggaussian"]], "MOVE_CRF_CRF": [[76, "move-crf-crf"]], "Probe_Constant": [[72, "probe-constant"]], "ProbePulse_CustomWaveforms_noIntegration": [[71, "probepulse-customwaveforms-nointegration"]], "move": [[75, "module-iqm.pulse.gates.move"]], "MOVE_CustomWaveforms": [[77, "move-customwaveforms"]], "Constant_PRX_with_smooth_rise_fall": [[85, "constant-prx-with-smooth-rise-fall"]], "iqm.pulse.gates.move.validate_move_instructions": [[82, "iqm-pulse-gates-move-validate-move-instructions"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "PRX_CustomWaveforms": [[86, "prx-customwaveforms"]], "utils": [[202, "module-iqm.pulse.utils"]], "iqm.pulse.utils.phase_transformation": [[205, "iqm-pulse-utils-phase-transformation"]], "iqm.pulse.utils.normalize_angle": [[204, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[188, "iqm-pulse-quantum-ops-validate-op-calibration"]], "iqm.pulse.scheduler.NONSOLID": [[191, "iqm-pulse-scheduler-nonsolid"]], "TimeBox": [[201, "timebox"]], "validation": [[206, "module-iqm.pulse.validation"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[186, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[187, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "SchedulingAlgorithm": [[199, "schedulingalgorithm"]], "timebox": [[197, "module-iqm.pulse.timebox"]], "scheduler": [[189, "module-iqm.pulse.scheduler"]], "MultiplexedProbeTimeBox": [[198, "multiplexedprobetimebox"]], "iqm.pulse.scheduler.extend_hard_boundary": [[193, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.utils.map_waveform_param_types": [[203, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.scheduler.extend_schedule": [[195, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[196, "iqm-pulse-scheduler-extend-schedule-new"]], "iqm.pulse.scheduler.BLOCKING": [[190, "iqm-pulse-scheduler-blocking"]], "SegmentPointer": [[192, "segmentpointer"]], "quantum_ops": [[184, "module-iqm.pulse.quantum_ops"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[194, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "SchedulingStrategy": [[200, "schedulingstrategy"]], "IQPulse": [[157, "iqpulse"]], "HdDragI": [[144, "hddragi"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[142, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "hd_drag": [[141, "module-iqm.pulse.playlist.hd_drag"]], "HdDragQ": [[145, "hddragq"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[139, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "HdDrag": [[143, "hddrag"]], "instructions": [[151, "module-iqm.pulse.playlist.instructions"]], "Block": [[153, "block"]], "ReadoutTrigger": [[160, "readouttrigger"]], "AcquisitionMethod": [[152, "acquisitionmethod"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[138, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "ConditionalInstruction": [[155, "conditionalinstruction"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[150, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "ComplexIntegration": [[154, "complexintegration"]], "MultiplexedIQPulse": [[159, "multiplexediqpulse"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[140, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[148, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[146, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "Instruction": [[158, "instruction"]], "FluxPulse": [[156, "fluxpulse"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[149, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[147, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "ChirpImag": [[177, "chirpimag"]], "playlist": [[166, "module-iqm.pulse.playlist.playlist"], [120, "module-iqm.pulse.playlist"]], "Cosine": [[178, "cosine"]], "Schedule": [[169, "schedule"]], "Wait": [[165, "wait"]], "RealPulse": [[161, "realpulse"]], "base": [[173, "module-iqm.pulse.playlist.visualisation.base"]], "Nothing": [[168, "nothing"]], "CosineRise": [[180, "cosinerise"]], "Segment": [[170, "segment"]], "CosineRiseFallDerivative": [[181, "cosinerisefallderivative"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[171, "iqm-pulse-playlist-schedule-tolerance"]], "ModulatedCosineRiseFall": [[182, "modulatedcosinerisefall"]], "ThresholdStateDiscrimination": [[162, "thresholdstatediscrimination"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[174, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "visualisation": [[172, "module-iqm.pulse.playlist.visualisation"]], "Slepian": [[183, "slepian"]], "VirtualRZ": [[164, "virtualrz"]], "waveforms": [[175, "module-iqm.pulse.playlist.waveforms"]], "schedule": [[167, "module-iqm.pulse.playlist.schedule"]], "CosineFall": [[179, "cosinefall"]], "TimeTrace": [[163, "timetrace"]], "Chirp": [[176, "chirp"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[136, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "sx": [[115, "module-iqm.pulse.gates.sx"]], "iqm.pulse.gates.u.get_unitary_u": [[119, "iqm-pulse-gates-u-get-unitary-u"]], "ProbeChannelProperties": [[126, "probechannelproperties"]], "channel": [[121, "module-iqm.pulse.playlist.channel"]], "IQChannelConfig": [[125, "iqchannelconfig"]], "ChannelProperties": [[124, "channelproperties"]], "FastDragQ": [[134, "fastdragq"]], "UGate": [[118, "ugate"]], "FastDrag": [[132, "fastdrag"]], "fast_drag": [[131, "module-iqm.pulse.playlist.fast_drag"]], "SuppressedPulse": [[135, "suppressedpulse"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[137, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[130, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "ChannelConfiguration": [[122, "channelconfiguration"]], "ChannelDescription": [[123, "channeldescription"]], "FastDragI": [[133, "fastdragi"]], "SXGate": [[116, "sxgate"]], "iqm.pulse.playlist.channel.get_channel_properties": [[128, "iqm-pulse-playlist-channel-get-channel-properties"]], "RealChannelConfig": [[127, "realchannelconfig"]], "u": [[117, "module-iqm.pulse.gates.u"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[129, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "Reset_Conditional": [[106, "reset-conditional"]], "iqm.pulse.gates.register_implementation": [[101, "iqm-pulse-gates-register-implementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[100, "iqm-pulse-gates-prx-get-unitary-prx"]], "RZ_ACStarkShift": [[109, "rz-acstarkshift"]], "PRX_ModulatedCustomWaveForms": [[96, "prx-modulatedcustomwaveforms"]], "PRX_HdDrag": [[94, "prx-hddrag"]], "RZ_ACStarkShift_CosineRiseFall": [[110, "rz-acstarkshift-cosinerisefall"]], "PRX_FastDrag": [[92, "prx-fastdrag"]], "RZ_ACStarkShift_smoothConstant": [[111, "rz-acstarkshift-smoothconstant"]], "PrxGateImplementation": [[99, "prxgateimplementation"]], "PRX_SinglePulse_GateImplementation": [[98, "prx-singlepulse-gateimplementation"]], "RZ_Virtual": [[113, "rz-virtual"]], "reset": [[103, "module-iqm.pulse.gates.reset"]], "PRX_HdDragSX": [[95, "prx-hddragsx"]], "PRX_FastDragSX": [[93, "prx-fastdragsx"]], "RZ_PRX_Composite": [[112, "rz-prx-composite"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[104, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[105, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Wait": [[107, "reset-wait"]], "PRX_ModulatedDRAGCosineRiseFall": [[97, "prx-modulateddragcosinerisefall"]], "rz": [[108, "module-iqm.pulse.gates.rz"]], "iqm.pulse.gates.rz.get_unitary_rz": [[114, "iqm-pulse-gates-rz-get-unitary-rz"]], "iqm.pulse.gates.register_operation": [[102, "iqm-pulse-gates-register-operation"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [75, "module-iqm.pulse.gates.move"], [83, "module-iqm.pulse.gates.prx"], [103, "module-iqm.pulse.gates.reset"], [108, "module-iqm.pulse.gates.rz"], [115, "module-iqm.pulse.gates.sx"], [117, "module-iqm.pulse.gates.u"], [120, "module-iqm.pulse.playlist"], [121, "module-iqm.pulse.playlist.channel"], [131, "module-iqm.pulse.playlist.fast_drag"], [141, "module-iqm.pulse.playlist.hd_drag"], [151, "module-iqm.pulse.playlist.instructions"], [166, "module-iqm.pulse.playlist.playlist"], [167, "module-iqm.pulse.playlist.schedule"], [172, "module-iqm.pulse.playlist.visualisation"], [173, "module-iqm.pulse.playlist.visualisation.base"], [175, "module-iqm.pulse.playlist.waveforms"], [184, "module-iqm.pulse.quantum_ops"], [189, "module-iqm.pulse.scheduler"], [197, "module-iqm.pulse.timebox"], [202, "module-iqm.pulse.utils"], [206, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "customizable_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.customizable_gates"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.compositegate class method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.optional_calibration_keys"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "_timebox_cache (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation._timebox_cache"]], "construct_factorizable() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.construct_factorizable"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "id (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.id"]], "may_have_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.may_have_calibration"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "optional_calibration_keys() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.optional_calibration_keys"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "sub_implementations (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.sub_implementations"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate class method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "customizable_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.customizable_gates"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "registered_gates (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.registered_gates"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[72, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "shelved_measure_constant (class in iqm.pulse.gates.measure)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_q"]], "shelved_measure_customwaveforms (class in iqm.pulse.gates.measure)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms"]], "_call() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_customwaveforms attribute)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.dependent_waves"]], "probe_timebox() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.probe_timebox"]], "iqm.pulse.gates.move": [[75, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_slepian_crf (class in iqm.pulse.gates.move)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[80, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[80, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[81, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[82, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[83, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[98, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[98, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "prxgateimplementation (class in iqm.pulse.gates.prx)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation"]], "_call() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prxgateimplementation class method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.ry"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[100, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[101, "iqm.pulse.gates.register_implementation"]], "register_operation() (in module iqm.pulse.gates)": [[102, "iqm.pulse.gates.register_operation"]], "iqm.pulse.gates.reset": [[103, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[104, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[105, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[106, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[106, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "customizable_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[106, "iqm.pulse.gates.reset.Reset_Conditional.customizable_gates"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[106, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[106, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[107, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[107, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[107, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[107, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[107, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[107, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[108, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[111, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[112, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "customizable_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[112, "iqm.pulse.gates.rz.RZ_PRX_Composite.customizable_gates"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[112, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[113, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[113, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[113, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[113, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[113, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[114, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[115, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[116, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[116, "iqm.pulse.gates.sx.SXGate._call"]], "customizable_gates (iqm.pulse.gates.sx.sxgate attribute)": [[116, "iqm.pulse.gates.sx.SXGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[116, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[117, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[118, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[118, "iqm.pulse.gates.u.UGate._call"]], "customizable_gates (iqm.pulse.gates.u.ugate attribute)": [[118, "iqm.pulse.gates.u.UGate.customizable_gates"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[118, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[119, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[120, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[121, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[122, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[123, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[123, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[124, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[124, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[125, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[125, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[126, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[126, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[126, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[126, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[127, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[127, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[128, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[129, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[130, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[131, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[132, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[132, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[133, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[133, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[134, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[134, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[135, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[135, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[136, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[137, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[138, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[139, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[140, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[141, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[142, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[143, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[143, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[144, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[144, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[145, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[145, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[146, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[147, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[148, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[149, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[150, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[151, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[152, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[152, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[152, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[154, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[155, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[155, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[155, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[155, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[156, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[157, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[157, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[157, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[157, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[158, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[158, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[158, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[158, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[158, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[158, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[159, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[159, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[160, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[160, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[161, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[161, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[161, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[161, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[162, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[162, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[162, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[163, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[163, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[164, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[164, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[165, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[166, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[167, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[168, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[169, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[169, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[169, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[170, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[170, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[170, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[170, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[170, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[170, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[170, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[170, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[170, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[171, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[172, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[173, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[174, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[175, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[176, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[176, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[176, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[177, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[177, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[178, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[178, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[178, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[179, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[179, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[180, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[180, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[181, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[181, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[182, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[182, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[182, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[183, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[183, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[183, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[183, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[183, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[183, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[184, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[185, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[185, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[185, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[185, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[185, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[185, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[185, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[186, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[187, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[188, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[189, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[190, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[191, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[192, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[192, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[192, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[192, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[192, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[192, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[192, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[193, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[194, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[195, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[196, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[197, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[198, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[198, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[199, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[199, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[199, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[200, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[200, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[200, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[201, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[201, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[201, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[201, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[201, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[201, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[201, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[201, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[202, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[203, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[204, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[205, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[206, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[207, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[208, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[209, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[210, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[211, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[212, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[213, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[214, "iqm.pulse.validation.validate_playlist_compatibility"]]}})