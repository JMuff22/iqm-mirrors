# This workflow builds and deploys versioned documentation when a new tag is pushed.

name: Build and Deploy Versioned Docs

on:
  push:
    tags:
      - '*/v*'
      - '*/*'
  
  # Allow manual triggering with a specific tag
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build docs for (e.g., iqm-pulla/v9.0.0)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python with uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
            uv pip install -r requirements-docs.txt
            uv pip install requests packaging setuptools
            sudo apt-get install graphviz

      - name: Build documentation from tag
        run: |
          # Use manual input tag if provided, otherwise use the pushed tag
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          
          BASE_PACKAGE_NAME=$(echo "$TAG" | awk -F'/' '{print $1}')
          VERSION=$(echo "$TAG" | awk -F'/' '{print $2}')
          
          echo "Processing tag for package: $BASE_PACKAGE_NAME, version: $VERSION"
          
          # Find the full package specification (e.g., 'iqm-client[extras]') from packages.txt
          # This makes the workflow generic.
          FULL_PACKAGE_SPEC=$(grep "^${BASE_PACKAGE_NAME}" packages.txt | head -1)
          
          # Extract package spec by finding the last comma (handles extras correctly)
          if [[ "$FULL_PACKAGE_SPEC" == *","* ]]; then
            FULL_PACKAGE_SPEC="${FULL_PACKAGE_SPEC%,*}"
          fi

          if [ -z "$FULL_PACKAGE_SPEC" ]; then
            echo "::error::Could not find package spec for '${BASE_PACKAGE_NAME}' in packages.txt"
            exit 1
          fi

          bash build-docs.sh "$BASE_PACKAGE_NAME" "$VERSION" "$FULL_PACKAGE_SPEC"

      - name: Generate landing page
        run: python generate_index.py _site

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          clean: false
